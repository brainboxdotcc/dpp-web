<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1voiceconn" kind="class" language="C++" prot="public">
    <compoundname>dpp::voiceconn</compoundname>
    <includes local="no">discordclient.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdpp_1_1voiceconn_1a5db744340876d4b586756ea519d5db8a" prot="private" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::voiceconn::creator</definition>
        <argsstring></argsstring>
        <name>creator</name>
        <briefdescription>
<para>Owning <ref refid="classdpp_1_1discord__client" kindref="compound">dpp::discord_client</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordclient.h" line="64" column="22" bodyfile="include/dpp/discordclient.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1voiceconn_1a9ae04af7ba5f3ed36e248ece6f2ad25b" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::voiceconn::channel_id</definition>
        <argsstring></argsstring>
        <name>channel_id</name>
        <briefdescription>
<para>Voice Channel ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordclient.h" line="69" column="11" bodyfile="include/dpp/discordclient.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voiceconn_1a9c0868d279364472bf0c86a4b5ae8f1b" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::voiceconn::websocket_hostname</definition>
        <argsstring></argsstring>
        <name>websocket_hostname</name>
        <briefdescription>
<para>Websocket hostname for status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordclient.h" line="74" column="13" bodyfile="include/dpp/discordclient.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voiceconn_1aaaae5391243bb862501088170037b041" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::voiceconn::session_id</definition>
        <argsstring></argsstring>
        <name>session_id</name>
        <briefdescription>
<para>Voice Voice session ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordclient.h" line="79" column="13" bodyfile="include/dpp/discordclient.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voiceconn_1a9c4ef16e1fb1c077f6adb18ce5ac9a41" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::voiceconn::token</definition>
        <argsstring></argsstring>
        <name>token</name>
        <briefdescription>
<para>Voice websocket token. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordclient.h" line="84" column="13" bodyfile="include/dpp/discordclient.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voiceconn_1a812e4cdee1fc7ed2a024d78161c84f86" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__voice__client" kindref="compound">discord_voice_client</ref> *</type>
        <definition>class discord_voice_client* dpp::voiceconn::voiceclient</definition>
        <argsstring></argsstring>
        <name>voiceclient</name>
        <briefdescription>
<para>voice websocket client </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordclient.h" line="89" column="28" bodyfile="include/dpp/discordclient.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1voiceconn_1a2238afc107e4e97daa0693c81fe150fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::voiceconn::voiceconn</definition>
        <argsstring>()=default</argsstring>
        <name>voiceconn</name>
        <briefdescription>
<para>Construct a new voiceconn object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordclient.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voiceconn_1a7b0b033f371d814cf04e09ac7cf08ac1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::voiceconn::voiceconn</definition>
        <argsstring>(class discord_client *o, snowflake _channel_id)</argsstring>
        <name>voiceconn</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
          <declname>_channel_id</declname>
        </param>
        <briefdescription>
<para>Construct a new voiceconn object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o</parametername>
</parameternamelist>
<parameterdescription>
<para>owner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_channel_id</parametername>
</parameternamelist>
<parameterdescription>
<para>voice channel id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordclient.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voiceconn_1a5200c6bba0b6219a0cdd29c6590d0c98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::voiceconn::~voiceconn</definition>
        <argsstring>()</argsstring>
        <name>~voiceconn</name>
        <briefdescription>
<para>Destroy the voiceconn object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordclient.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voiceconn_1a7dd6504b406b5e08f9fd9337a275568d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::voiceconn::is_ready</definition>
        <argsstring>()</argsstring>
        <name>is_ready</name>
        <briefdescription>
<para>return true if the connection is ready to connect (has hostname, token and session id) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if ready to connect </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordclient.h" line="115" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voiceconn_1a8bb23d980d80e0d61c1cadc61bacf278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::voiceconn::is_active</definition>
        <argsstring>()</argsstring>
        <name>is_active</name>
        <briefdescription>
<para>return true if the connection is active (websocket exists) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if has an active websocket </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordclient.h" line="122" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voiceconn_1ae8751945fb4ef1938e4b45f119aa49c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1voiceconn" kindref="compound">voiceconn</ref> &amp;</type>
        <definition>voiceconn &amp; dpp::voiceconn::connect</definition>
        <argsstring>(snowflake guild_id)</argsstring>
        <name>connect</name>
        <param>
          <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
          <declname>guild_id</declname>
        </param>
        <briefdescription>
<para>Create websocket object and connect it. Needs hosname, token and session_id to be set or does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guild_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Guild to connect to the voice channel on </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordclient.h" line="131" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voiceconn_1a05b4745343840f96e585ece0456bd831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1voiceconn" kindref="compound">voiceconn</ref> &amp;</type>
        <definition>voiceconn &amp; dpp::voiceconn::disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <briefdescription>
<para>Disconnect from the currently connected voice channel. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordclient.h" line="137" column="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a connection to a voice channel. A client can only connect to one voice channel per guild at a time, so these are stored in a map in the <ref refid="classdpp_1_1discord__client" kindref="compound">dpp::discord_client</ref> keyed by guild_id. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="8">
        <label>bool</label>
      </node>
      <node id="25">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="16">
        <label>double</label>
      </node>
      <node id="24">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="25" relation="usage">
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>role_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="3" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>numshards</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>ws_mode</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>terminating</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>on_autocomplete</edgelabel>
          <edgelabel>on_button_click</edgelabel>
          <edgelabel>on_channel_create</edgelabel>
          <edgelabel>on_channel_delete</edgelabel>
          <edgelabel>on_channel_pins_update</edgelabel>
          <edgelabel>on_channel_update</edgelabel>
          <edgelabel>on_form_submit</edgelabel>
          <edgelabel>on_guild_ban_add</edgelabel>
          <edgelabel>on_guild_ban_remove</edgelabel>
          <edgelabel>on_guild_create</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>sodium_initialised</edgelabel>
          <edgelabel>terminating</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>sessionid</edgelabel>
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>channel_id</edgelabel>
          <edgelabel>server_id</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="18">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="2" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="3" relation="usage">
          <edgelabel>buffer</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>port</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>keepalive</edgelabel>
          <edgelabel>make_new</edgelabel>
          <edgelabel>nonblocking</edgelabel>
          <edgelabel>plaintext</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>custom_readable_ready</edgelabel>
          <edgelabel>custom_writeable_ready</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="2" relation="usage">
          <edgelabel>first</edgelabel>
          <edgelabel>second</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="2" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>session_id</edgelabel>
          <edgelabel>token</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>event_router_t&lt;</label>
      </node>
      <node id="9">
        <label>int</label>
      </node>
      <node id="19">
        <label>dpp::json_interface&lt; user &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="20" relation="template-instance">
          <edgelabel>&lt; user &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>openssl_connection *</label>
      </node>
      <node id="4">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="27">
        <label>condition_variable</label>
      </node>
      <node id="12">
        <label>function&lt; dpp::socket()&gt;</label>
      </node>
      <node id="13">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>native_handle_type</label>
      </node>
      <node id="11">
        <label>time_t</label>
      </node>
      <node id="22">
        <label>uint16_t</label>
      </node>
      <node id="15">
        <label>uint32_t</label>
      </node>
      <node id="2">
        <label>uint64_t</label>
      </node>
      <node id="23">
        <label>uint8_t</label>
      </node>
      <node id="26">
        <label>websocket_protocol_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/discordclient.h" line="60" column="1" bodyfile="include/dpp/discordclient.h" bodystart="60" bodyend="138"/>
    <listofallmembers>
      <member refid="classdpp_1_1voiceconn_1a9ae04af7ba5f3ed36e248ece6f2ad25b" prot="public" virt="non-virtual"><scope>dpp::voiceconn</scope><name>channel_id</name></member>
      <member refid="classdpp_1_1voiceconn_1ae8751945fb4ef1938e4b45f119aa49c3" prot="public" virt="non-virtual"><scope>dpp::voiceconn</scope><name>connect</name></member>
      <member refid="classdpp_1_1voiceconn_1a5db744340876d4b586756ea519d5db8a" prot="private" virt="non-virtual"><scope>dpp::voiceconn</scope><name>creator</name></member>
      <member refid="classdpp_1_1voiceconn_1a05b4745343840f96e585ece0456bd831" prot="public" virt="non-virtual"><scope>dpp::voiceconn</scope><name>disconnect</name></member>
      <member refid="classdpp_1_1voiceconn_1a8bb23d980d80e0d61c1cadc61bacf278" prot="public" virt="non-virtual"><scope>dpp::voiceconn</scope><name>is_active</name></member>
      <member refid="classdpp_1_1voiceconn_1a7dd6504b406b5e08f9fd9337a275568d" prot="public" virt="non-virtual"><scope>dpp::voiceconn</scope><name>is_ready</name></member>
      <member refid="classdpp_1_1voiceconn_1aaaae5391243bb862501088170037b041" prot="public" virt="non-virtual"><scope>dpp::voiceconn</scope><name>session_id</name></member>
      <member refid="classdpp_1_1voiceconn_1a9c4ef16e1fb1c077f6adb18ce5ac9a41" prot="public" virt="non-virtual"><scope>dpp::voiceconn</scope><name>token</name></member>
      <member refid="classdpp_1_1voiceconn_1a812e4cdee1fc7ed2a024d78161c84f86" prot="public" virt="non-virtual"><scope>dpp::voiceconn</scope><name>voiceclient</name></member>
      <member refid="classdpp_1_1voiceconn_1a2238afc107e4e97daa0693c81fe150fd" prot="public" virt="non-virtual"><scope>dpp::voiceconn</scope><name>voiceconn</name></member>
      <member refid="classdpp_1_1voiceconn_1a7b0b033f371d814cf04e09ac7cf08ac1" prot="public" virt="non-virtual"><scope>dpp::voiceconn</scope><name>voiceconn</name></member>
      <member refid="classdpp_1_1voiceconn_1a9c0868d279364472bf0c86a4b5ae8f1b" prot="public" virt="non-virtual"><scope>dpp::voiceconn</scope><name>websocket_hostname</name></member>
      <member refid="classdpp_1_1voiceconn_1a5200c6bba0b6219a0cdd29c6590d0c98" prot="public" virt="non-virtual"><scope>dpp::voiceconn</scope><name>~voiceconn</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
