<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="build-a-discord-bot-windows-wsl" kind="page">
    <compoundname>build-a-discord-bot-windows-wsl</compoundname>
    <title>Building a Discord Bot on Windows Using WSL (Windows Subsystem for Linux)</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This tutorial teaches you how to create a lightweight environment for D++ development using <bold>WSL</bold> and <bold>Visual Studio Code</bold></para>
<para><simplesect kind="note"><para><bold>This Tutorial will use WSL&apos;s default distribution, Ubuntu</bold>! You can use other distros if you wish, <bold>but keep in mind the setup process might be different!</bold> If you&apos;re aiming for production, we recommend you continue your path of becoming the master of all Discord bots <ref refid="buildcmake" kindref="compound">by visiting this page</ref>, otherwise keep following this guide!</para>
</simplesect>
<orderedlist>
<listitem><para>Make sure you have installed your WSL 2 environment properly using <ulink url="https://docs.microsoft.com/en-us/windows/wsl/install">this guide to setup up WSL</ulink> and <ulink url="https://docs.microsoft.com/en-us/windows/wsl/tutorials/wsl-vscode">this guide to connect to Visual Studio Code</ulink>.</para>
</listitem><listitem><para>Now open PowerShell as Administrator and type <computeroutput>wsl</computeroutput> to start up your subsystem. You may also type <computeroutput>ubuntu</computeroutput> into your search bar and open it that way.</para>
</listitem><listitem><para>Head on over to your home directory using <computeroutput>cd ~</computeroutput>.</para>
</listitem><listitem><para>Download the latest build for your distro using <computeroutput>wget [url here]</computeroutput>. In this guide we will use the latest build for 64 bit Ubuntu: <computeroutput>wget -O libdpp.deb <ulink url="https://dl.dpp.dev/latest">https://dl.dpp.dev/latest</ulink></computeroutput>.</para>
</listitem><listitem><para>Finally install all required dependencies and the library itself using <computeroutput>sudo apt-get install libopus0 libopus-dev &amp;&amp; sudo dpkg -i libdpp.deb &amp;&amp; rm libdpp.deb</computeroutput>.</para>
</listitem><listitem><para>Congratulations, you&apos;ve successfully installed all dependencies! Now comes the real fun: Setting up the environment! For this tutorial we&apos;ll use a as small as possible setup, so you might create a more advanced one for production bots.</para>
</listitem><listitem><para>Create a new directory, inside your home directory, using <computeroutput>mkdir MyBot</computeroutput>. Then, you want to open that directory using <computeroutput>cd MyBot</computeroutput>.</para>
</listitem><listitem><para>Now that you&apos;ve a directory to work in, type <computeroutput>touch mybot.cxx</computeroutput> to create a file you can work in!</para>
</listitem><listitem><para>Now, head on over to Visual Studio Code. Press <computeroutput>CTRL+SHIFT+P</computeroutput> and type <computeroutput>Remote-WSL: New WSL Window</computeroutput> (You don&apos;t have to type all of it, it will auto-suggest it!). This will bring up a new window. In the new window, choose <computeroutput>open folder</computeroutput> and choose the directory you&apos;ve created prior (It should be within your home directory). Press OK and now you have your Folder opened as a Workspace!</para>
</listitem><listitem><para>Add code to your CXX file (We suggest using the <ref refid="firstbot" kindref="compound">first bot page</ref> if this is your first time!) and compile it by running <computeroutput>g++ -std=c++17 *.cxx -o bot -ldpp</computeroutput> in the same folder as your cxx file. This will create a &quot;bot&quot; file!</para>
</listitem><listitem><para>You can now start your bot by typing <computeroutput>./bot</computeroutput>!</para>
</listitem></orderedlist>
</para>
<para>If everything was done right, you should be able to see your bot working! </para>
    </detaileddescription>
    <location file="docpages/make_a_bot/windows_wsl.md"/>
  </compounddef>
</doxygen>
