<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1guild__member" kind="class" language="C++" prot="public">
    <compoundname>dpp::guild_member</compoundname>
    <includes local="no">guild.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1guild__member_1af305ded317e0fb05fc67d15713549efa" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::guild_member::nickname</definition>
        <argsstring></argsstring>
        <name>nickname</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nickname, or nullptr if they don&apos;t have a nickname on this guild </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="120" column="13" bodyfile="include/dpp/guild.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1guild__member_1abc1c9039f54691ae4e8938c2768ccf84" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::guild_member::guild_id</definition>
        <argsstring></argsstring>
        <name>guild_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Guild id </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="122" column="11" bodyfile="include/dpp/guild.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1guild__member_1a127de740430a1f3ce4e793e21f94ce97" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::guild_member::user_id</definition>
        <argsstring></argsstring>
        <name>user_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>User id </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="124" column="11" bodyfile="include/dpp/guild.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1guild__member_1ae9419048b9b5a143f1b705e4dff83a93" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref> &gt;</type>
        <definition>std::vector&lt;snowflake&gt; dpp::guild_member::roles</definition>
        <argsstring></argsstring>
        <name>roles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of roles this user has on this guild </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="126" column="13" bodyfile="include/dpp/guild.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1guild__member_1aae2dfc2f98671c98704db1fa4295b05f" prot="public" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t dpp::guild_member::joined_at</definition>
        <argsstring></argsstring>
        <name>joined_at</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Date and time the user joined the guild </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="128" column="8" bodyfile="include/dpp/guild.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1guild__member_1ae262a3f3d68a9728a92654e2f5b9c758" prot="public" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t dpp::guild_member::premium_since</definition>
        <argsstring></argsstring>
        <name>premium_since</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Boosting since </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="130" column="8" bodyfile="include/dpp/guild.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1guild__member_1a11636d9baaca59361c22ac163b09fd7c" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dpp::guild_member::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A set of flags built from the bitmask defined by <ref refid="namespacedpp_1a7e036e9909741e00af34e2505117218d" kindref="member">dpp::guild_member_flags</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="132" column="9" bodyfile="include/dpp/guild.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1guild__member_1a22fc1a4cacec96dafe98277604823be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::guild_member::guild_member</definition>
        <argsstring>()</argsstring>
        <name>guild_member</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="135" column="1" bodyfile="src/dpp/guild.cpp" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1guild__member_1a8388b6feb3be3972fa50d4665b461611" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> &amp;</type>
        <definition>guild_member &amp; dpp::guild_member::fill_from_json</definition>
        <argsstring>(nlohmann::json *j, snowflake g_id, snowflake u_id)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
          <declname>g_id</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
          <declname>u_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill this object from a json object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The json object to get data from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The guild id to associate the member with </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The user id to associate the member with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="142" column="14" bodyfile="src/dpp/guild.cpp" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1guild__member_1a70cc4ad5ce834cc8f5306fd1a7440d05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::guild_member::build_json</definition>
        <argsstring>() const</argsstring>
        <name>build_json</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build json string for the member object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="145" column="13" bodyfile="src/dpp/guild.cpp" bodystart="125" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1guild__member_1a1136b98c677fbbcbcc1291857cfe53ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::guild_member::is_deaf</definition>
        <argsstring>() const</argsstring>
        <name>is_deaf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the user is deafened </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="148" column="6" bodyfile="src/dpp/guild.cpp" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1guild__member_1a0d9540b747d4f604088bc2d4b82f1695" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::guild_member::is_muted</definition>
        <argsstring>() const</argsstring>
        <name>is_muted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the user is muted </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="151" column="6" bodyfile="src/dpp/guild.cpp" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1guild__member_1a0e8b71e030ad98f31831d7e0a079b873" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::guild_member::is_pending</definition>
        <argsstring>() const</argsstring>
        <name>is_pending</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if pending verification by membership screening </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="154" column="6" bodyfile="src/dpp/guild.cpp" bodystart="152" bodyend="154"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents <ref refid="classdpp_1_1user" kindref="compound">dpp::user</ref> membership upon a <ref refid="classdpp_1_1guild" kindref="compound">dpp::guild</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="2" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>guild_id</edgelabel>
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>vector&lt;</label>
      </node>
      <node id="6">
        <label>time_t</label>
      </node>
      <node id="4">
        <label>uint64_t</label>
      </node>
      <node id="7">
        <label>uint8_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/guild.h" line="117" column="1" bodyfile="include/dpp/guild.h" bodystart="117" bodyend="156"/>
    <listofallmembers>
      <member refid="classdpp_1_1guild__member_1a70cc4ad5ce834cc8f5306fd1a7440d05" prot="public" virt="non-virtual"><scope>dpp::guild_member</scope><name>build_json</name></member>
      <member refid="classdpp_1_1guild__member_1a8388b6feb3be3972fa50d4665b461611" prot="public" virt="non-virtual"><scope>dpp::guild_member</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1guild__member_1a11636d9baaca59361c22ac163b09fd7c" prot="public" virt="non-virtual"><scope>dpp::guild_member</scope><name>flags</name></member>
      <member refid="classdpp_1_1guild__member_1abc1c9039f54691ae4e8938c2768ccf84" prot="public" virt="non-virtual"><scope>dpp::guild_member</scope><name>guild_id</name></member>
      <member refid="classdpp_1_1guild__member_1a22fc1a4cacec96dafe98277604823be0" prot="public" virt="non-virtual"><scope>dpp::guild_member</scope><name>guild_member</name></member>
      <member refid="classdpp_1_1guild__member_1a1136b98c677fbbcbcc1291857cfe53ec" prot="public" virt="non-virtual"><scope>dpp::guild_member</scope><name>is_deaf</name></member>
      <member refid="classdpp_1_1guild__member_1a0d9540b747d4f604088bc2d4b82f1695" prot="public" virt="non-virtual"><scope>dpp::guild_member</scope><name>is_muted</name></member>
      <member refid="classdpp_1_1guild__member_1a0e8b71e030ad98f31831d7e0a079b873" prot="public" virt="non-virtual"><scope>dpp::guild_member</scope><name>is_pending</name></member>
      <member refid="classdpp_1_1guild__member_1aae2dfc2f98671c98704db1fa4295b05f" prot="public" virt="non-virtual"><scope>dpp::guild_member</scope><name>joined_at</name></member>
      <member refid="classdpp_1_1guild__member_1af305ded317e0fb05fc67d15713549efa" prot="public" virt="non-virtual"><scope>dpp::guild_member</scope><name>nickname</name></member>
      <member refid="classdpp_1_1guild__member_1ae262a3f3d68a9728a92654e2f5b9c758" prot="public" virt="non-virtual"><scope>dpp::guild_member</scope><name>premium_since</name></member>
      <member refid="classdpp_1_1guild__member_1ae9419048b9b5a143f1b705e4dff83a93" prot="public" virt="non-virtual"><scope>dpp::guild_member</scope><name>roles</name></member>
      <member refid="classdpp_1_1guild__member_1a127de740430a1f3ce4e793e21f94ce97" prot="public" virt="non-virtual"><scope>dpp::guild_member</scope><name>user_id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
