<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1attachment" kind="struct" language="C++" prot="public">
    <compoundname>dpp::attachment</compoundname>
    <includes local="no">message.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1attachment_1a78fa9315fae4737d760e0b19cc9597cf" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::attachment::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ID of attachment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="557" column="11" bodyfile="include/dpp/message.h" bodystart="557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1attachment_1a899697fe4fea962a9a81f0cae66e86f5" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dpp::attachment::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of the attachment in bytes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="559" column="10" bodyfile="include/dpp/message.h" bodystart="559" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1attachment_1a37ae8a828923ad5184133f486241000c" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::attachment::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>File name of the attachment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="561" column="13" bodyfile="include/dpp/message.h" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1attachment_1ac8dfe8ccce296e4f30452ddbc5bded26" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::attachment::url</definition>
        <argsstring></argsstring>
        <name>url</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>URL which points to the attachment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="563" column="13" bodyfile="include/dpp/message.h" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1attachment_1ac3fa01bbb9915006c0a11db9ed386749" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::attachment::proxy_url</definition>
        <argsstring></argsstring>
        <name>proxy_url</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Proxied URL which points to the attachment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="565" column="13" bodyfile="include/dpp/message.h" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1attachment_1a62039388d0f56e389a538b32716e44c5" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dpp::attachment::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Width of the attachment, if applicable </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="567" column="10" bodyfile="include/dpp/message.h" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1attachment_1a448f0ad9591bb19788cd595ace201ce3" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dpp::attachment::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Height of the attachment, if applicable </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="569" column="10" bodyfile="include/dpp/message.h" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1attachment_1a57c192b2925012e1d06913da80f1bafd" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::attachment::content_type</definition>
        <argsstring></argsstring>
        <name>content_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MIME type of the attachment, if applicable </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="571" column="13" bodyfile="include/dpp/message.h" bodystart="571" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1attachment_1ad10a254f41a718652557c7f6605f5ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::attachment::attachment</definition>
        <argsstring>()</argsstring>
        <name>attachment</name>
        <briefdescription>
<para>Constructs a new attachment object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="576" column="1" bodyfile="src/dpp/message.cpp" bodystart="520" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1attachment_1a296b4131050f58216a9291df6f900e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::attachment::attachment</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>attachment</name>
        <param>
          <type><ref refid="namespacenlohmann_1a2bfd99e845a2e5cd90aeaf1b1431f474" kindref="member">nlohmann::json</ref> *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Constructs a new attachment object from a JSON object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON to read information from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="582" column="1" bodyfile="src/dpp/message.cpp" bodystart="527" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1attachment_1a0911f0f41b456e42ec31615b24042d63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::attachment::~attachment</definition>
        <argsstring>()=default</argsstring>
        <name>~attachment</name>
        <briefdescription>
<para>Destructs the attachment object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="587" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an attachment in a <ref refid="structdpp_1_1message" kindref="compound">dpp::message</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>dpp::attachment</label>
        <link refid="structdpp_1_1attachment"/>
        <childnode refid="2" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>height</edgelabel>
          <edgelabel>size</edgelabel>
          <edgelabel>width</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>content_type</edgelabel>
          <edgelabel>filename</edgelabel>
          <edgelabel>proxy_url</edgelabel>
          <edgelabel>url</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>uint32_t</label>
      </node>
      <node id="2">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/message.h" line="555" column="1" bodyfile="include/dpp/message.h" bodystart="555" bodyend="588"/>
    <listofallmembers>
      <member refid="structdpp_1_1attachment_1ad10a254f41a718652557c7f6605f5ecd" prot="public" virt="non-virtual"><scope>dpp::attachment</scope><name>attachment</name></member>
      <member refid="structdpp_1_1attachment_1a296b4131050f58216a9291df6f900e54" prot="public" virt="non-virtual"><scope>dpp::attachment</scope><name>attachment</name></member>
      <member refid="structdpp_1_1attachment_1a57c192b2925012e1d06913da80f1bafd" prot="public" virt="non-virtual"><scope>dpp::attachment</scope><name>content_type</name></member>
      <member refid="structdpp_1_1attachment_1a37ae8a828923ad5184133f486241000c" prot="public" virt="non-virtual"><scope>dpp::attachment</scope><name>filename</name></member>
      <member refid="structdpp_1_1attachment_1a448f0ad9591bb19788cd595ace201ce3" prot="public" virt="non-virtual"><scope>dpp::attachment</scope><name>height</name></member>
      <member refid="structdpp_1_1attachment_1a78fa9315fae4737d760e0b19cc9597cf" prot="public" virt="non-virtual"><scope>dpp::attachment</scope><name>id</name></member>
      <member refid="structdpp_1_1attachment_1ac3fa01bbb9915006c0a11db9ed386749" prot="public" virt="non-virtual"><scope>dpp::attachment</scope><name>proxy_url</name></member>
      <member refid="structdpp_1_1attachment_1a899697fe4fea962a9a81f0cae66e86f5" prot="public" virt="non-virtual"><scope>dpp::attachment</scope><name>size</name></member>
      <member refid="structdpp_1_1attachment_1ac8dfe8ccce296e4f30452ddbc5bded26" prot="public" virt="non-virtual"><scope>dpp::attachment</scope><name>url</name></member>
      <member refid="structdpp_1_1attachment_1a62039388d0f56e389a538b32716e44c5" prot="public" virt="non-virtual"><scope>dpp::attachment</scope><name>width</name></member>
      <member refid="structdpp_1_1attachment_1a0911f0f41b456e42ec31615b24042d63" prot="public" virt="non-virtual"><scope>dpp::attachment</scope><name>~attachment</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
