<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structformatter_3_01std_1_1tm_00_01_char_01_4" kind="struct" language="C++" prot="public">
    <compoundname>formatter&lt; std::tm, Char &gt;</compoundname>
    <derivedcompoundref refid="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4" prot="public" virt="non-virtual">formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</derivedcompoundref>
    <includes local="no">chrono.h</includes>
    <templateparamlist>
      <param>
        <type>typename Char</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="structformatter_3_01std_1_1tm_00_01_char_01_4_1a0ad1ab9a88cc0ff963eb10c17d3dafe8" prot="private" static="no" strong="yes">
        <type></type>
        <name>spec</name>
        <enumvalue id="structformatter_3_01std_1_1tm_00_01_char_01_4_1a0ad1ab9a88cc0ff963eb10c17d3dafe8aad921d60486366258809553a3db49a4a" prot="private">
          <name>unknown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structformatter_3_01std_1_1tm_00_01_char_01_4_1a0ad1ab9a88cc0ff963eb10c17d3dafe8a985992882e9452062f3fc85d15477775" prot="private">
          <name>year_month_day</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structformatter_3_01std_1_1tm_00_01_char_01_4_1a0ad1ab9a88cc0ff963eb10c17d3dafe8a9f6a98f3aa4b6b08f5f96113ce0763d1" prot="private">
          <name>hh_mm_ss</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="2016" column="3" bodyfile="include/dpp/fmt/chrono.h" bodystart="2016" bodyend="2020"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structformatter_3_01std_1_1tm_00_01_char_01_4_1a2132d709acb19d33259d69e89398fd5a" prot="private" static="no" mutable="no">
        <type>spec</type>
        <definition>spec formatter&lt; std::tm, Char &gt;::spec_</definition>
        <argsstring></argsstring>
        <name>spec_</name>
        <initializer>= spec::unknown</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="2021" column="8" bodyfile="include/dpp/fmt/chrono.h" bodystart="2021" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structformatter_3_01std_1_1tm_00_01_char_01_4_1a57c0d36c7943de87688eeae9c3bd0b28" prot="private" static="no" mutable="no">
        <type>basic_string_view&lt; Char &gt;</type>
        <definition>basic_string_view&lt;Char&gt; formatter&lt; std::tm, Char &gt;::specs</definition>
        <argsstring></argsstring>
        <name>specs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="2022" column="21" bodyfile="include/dpp/fmt/chrono.h" bodystart="2022" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structformatter_3_01std_1_1tm_00_01_char_01_4_1af60061db23592a957a3b7ce4be308b46" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename It</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR auto</type>
        <definition>FMT_CONSTEXPR auto formatter&lt; std::tm, Char &gt;::do_parse</definition>
        <argsstring>(It begin, It end, bool with_default=false) -&gt; It</argsstring>
        <name>do_parse</name>
        <param>
          <type>It</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>It</type>
          <declname>end</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_default</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="2026" column="22" bodyfile="include/dpp/fmt/chrono.h" bodystart="2026" bodyend="2040"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structformatter_3_01std_1_1tm_00_01_char_01_4_1a9c8caf13b1795ab3974768dc5f98a0e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ParseContext</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR auto</type>
        <definition>FMT_CONSTEXPR auto formatter&lt; std::tm, Char &gt;::parse</definition>
        <argsstring>(ParseContext &amp;ctx) -&gt; decltype(ctx.begin())</argsstring>
        <name>parse</name>
        <param>
          <type>ParseContext &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="2044" column="22" bodyfile="include/dpp/fmt/chrono.h" bodystart="2044" bodyend="2046"/>
      </memberdef>
      <memberdef kind="function" id="structformatter_3_01std_1_1tm_00_01_char_01_4_1a0222d68c5e1ca97550eecb6cf60abed0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FormatContext</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto formatter&lt; std::tm, Char &gt;::format</definition>
        <argsstring>(const std::tm &amp;tm, FormatContext &amp;ctx) const -&gt; decltype(ctx.out())</argsstring>
        <name>format</name>
        <param>
          <type>const std::tm &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>FormatContext &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="2049" column="8" bodyfile="include/dpp/fmt/chrono.h" bodystart="2049" bodyend="2061"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</label>
        <link refid="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>formatter&lt; std::tm, Char &gt;</label>
        <link refid="structformatter_3_01std_1_1tm_00_01_char_01_4"/>
      </node>
    </inheritancegraph>
    <location file="include/dpp/fmt/chrono.h" line="2014" column="12" bodyfile="include/dpp/fmt/chrono.h" bodystart="2014" bodyend="2062"/>
    <listofallmembers>
      <member refid="structformatter_3_01std_1_1tm_00_01_char_01_4_1af60061db23592a957a3b7ce4be308b46" prot="protected" virt="non-virtual"><scope>formatter&lt; std::tm, Char &gt;</scope><name>do_parse</name></member>
      <member refid="structformatter_3_01std_1_1tm_00_01_char_01_4_1a0222d68c5e1ca97550eecb6cf60abed0" prot="public" virt="non-virtual"><scope>formatter&lt; std::tm, Char &gt;</scope><name>format</name></member>
      <member refid="structformatter_3_01std_1_1tm_00_01_char_01_4_1a9c8caf13b1795ab3974768dc5f98a0e9" prot="public" virt="non-virtual"><scope>formatter&lt; std::tm, Char &gt;</scope><name>parse</name></member>
      <member refid="structformatter_3_01std_1_1tm_00_01_char_01_4_1a0ad1ab9a88cc0ff963eb10c17d3dafe8" prot="private" virt="non-virtual"><scope>formatter&lt; std::tm, Char &gt;</scope><name>spec</name></member>
      <member refid="structformatter_3_01std_1_1tm_00_01_char_01_4_1a2132d709acb19d33259d69e89398fd5a" prot="private" virt="non-virtual"><scope>formatter&lt; std::tm, Char &gt;</scope><name>spec_</name></member>
      <member refid="structformatter_3_01std_1_1tm_00_01_char_01_4_1a57c0d36c7943de87688eeae9c3bd0b28" prot="private" virt="non-virtual"><scope>formatter&lt; std::tm, Char &gt;</scope><name>specs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
