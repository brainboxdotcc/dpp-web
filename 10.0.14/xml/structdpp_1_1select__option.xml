<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1select__option" kind="struct" language="C++" prot="public">
    <compoundname>dpp::select_option</compoundname>
    <basecompoundref refid="structdpp_1_1json__interface" prot="public" virt="non-virtual">dpp::json_interface&lt; select_option &gt;</basecompoundref>
    <includes local="no">message.h</includes>
    <innerclass refid="structdpp_1_1select__option_1_1inner__select__emoji" prot="public">dpp::select_option::inner_select_emoji</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1select__option_1a9e8b7f77dc54e0746d5781179d65f703" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::select_option::description</definition>
        <argsstring></argsstring>
        <name>description</name>
        <briefdescription>
<para>Description of option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="90" column="13" bodyfile="include/dpp/message.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1select__option_1a87080e97f389b83a93c43198a1380f7b" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structdpp_1_1select__option_1_1inner__select__emoji" kindref="compound">dpp::select_option::inner_select_emoji</ref></type>
        <definition>struct dpp::select_option::inner_select_emoji dpp::select_option::emoji</definition>
        <argsstring></argsstring>
        <name>emoji</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="123" column="7"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1select__option_1a0bbb221b08b77ffb46d1b352bf7f8222" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dpp::select_option::is_default</definition>
        <argsstring></argsstring>
        <name>is_default</name>
        <briefdescription>
<para>True if option is the default option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="94" column="6" bodyfile="include/dpp/message.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1select__option_1a9b69bce92e58e606f37964d60c99c799" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::select_option::label</definition>
        <argsstring></argsstring>
        <name>label</name>
        <briefdescription>
<para>Label for option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="82" column="13" bodyfile="include/dpp/message.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1select__option_1a9dbeb317e3612fb10d2f47cc8b61eb39" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::select_option::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
<para>Value for option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="86" column="13" bodyfile="include/dpp/message.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1select__option_1aa6ca8ed29e8e1f81ab8ce82e2b9ed1fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::select_option::select_option</definition>
        <argsstring>()</argsstring>
        <name>select_option</name>
        <briefdescription>
<para>Construct a new select option object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1select__option_1afdd887738c88c21cee80ce2ddd6a0f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::select_option::select_option</definition>
        <argsstring>(const std::string &amp;label, const std::string &amp;value, const std::string &amp;description=&quot;&quot;)</argsstring>
        <name>select_option</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Construct a new select option object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>Label of option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1select__option_1a4386959efc6c72b0e302e8644aec42af" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual dpp::select_option::~select_option</definition>
        <argsstring>()=default</argsstring>
        <name>~select_option</name>
        <briefdescription>
<para>Destructs the select option object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="133" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1a287c22f692ee3d25b6f9b320ff35baa1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string dpp::json_interface&lt; select_option  &gt;::build_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>build_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Build JSON string from the object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Include the ID in the JSON </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string JSON string version of object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="57" column="21" bodyfile="include/dpp/json_interface.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1select__option_1a2b424cbf499552ae1cf852016766c1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref> &amp;</type>
        <definition>select_option &amp; dpp::select_option::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read class values from json object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>A json object to read from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="198" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1select__option_1a841099bce27c36f02c3edd204a334a68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref> &amp;</type>
        <definition>select_option &amp; dpp::select_option::set_animated</definition>
        <argsstring>(bool anim)</argsstring>
        <name>set_animated</name>
        <param>
          <type>bool</type>
          <declname>anim</declname>
        </param>
        <briefdescription>
<para>Set the emoji as animated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anim</parametername>
</parameternamelist>
<parameterdescription>
<para>true if animated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref>&amp; reference to self for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="192" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1select__option_1a8fd5bb5f91cf48af2f5adc18396e74b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref> &amp;</type>
        <definition>select_option &amp; dpp::select_option::set_default</definition>
        <argsstring>(bool def)</argsstring>
        <name>set_default</name>
        <param>
          <type>bool</type>
          <declname>def</declname>
        </param>
        <briefdescription>
<para>Set the option as default. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>def</parametername>
</parameternamelist>
<parameterdescription>
<para>true to set the option as default </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref>&amp; reference to self for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="184" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1select__option_1af9b1b5fa9877397a1a71ecd83e4a7f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref> &amp;</type>
        <definition>select_option &amp; dpp::select_option::set_description</definition>
        <argsstring>(const std::string &amp;d)</argsstring>
        <name>set_description</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Set the description. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>description to set. It will be truncated to the maximum length of 100 UTF-8 characters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref>&amp; reference to self for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="166" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1select__option_1a473cb19e265133cac10f20813f047b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref> &amp;</type>
        <definition>select_option &amp; dpp::select_option::set_emoji</definition>
        <argsstring>(const std::string &amp;n, dpp::snowflake id=0, bool animated=false)</argsstring>
        <name>set_emoji</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">dpp::snowflake</ref></type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>animated</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Set the emoji. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>emoji name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>emoji id for custom emojis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>animated</parametername>
</parameternamelist>
<parameterdescription>
<para>true if animated emoji </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref>&amp; reference to self for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="176" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1select__option_1a57297c33373a7e60e5ca2a1fa1252d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref> &amp;</type>
        <definition>select_option &amp; dpp::select_option::set_label</definition>
        <argsstring>(const std::string &amp;l)</argsstring>
        <name>set_label</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Set the label. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-facing name of the option. It will be truncated to the maximum length of 100 UTF-8 characters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref>&amp; reference to self for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="150" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1select__option_1a78df0a21b01447ffacefe4ee5d0a076a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref> &amp;</type>
        <definition>select_option &amp; dpp::select_option::set_value</definition>
        <argsstring>(const std::string &amp;v)</argsstring>
        <name>set_value</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Set the value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>value to set. It will be truncated to the maximum length of 100 UTF-8 characters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref>&amp; reference to self for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="158" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An option for a select component. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="1">
        <label>dpp::select_option</label>
        <link refid="structdpp_1_1select__option"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; select_option &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; select_option &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>bool</label>
      </node>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="1">
        <label>dpp::select_option</label>
        <link refid="structdpp_1_1select__option"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>description</edgelabel>
          <edgelabel>label</edgelabel>
          <edgelabel>value</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>is_default</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>emoji</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>dpp::select_option::inner_select_emoji</label>
        <link refid="structdpp_1_1select__option_1_1inner__select__emoji"/>
        <childnode refid="4" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>animated</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; select_option &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; select_option &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/message.h" line="78" column="1" bodyfile="include/dpp/message.h" bodystart="78" bodyend="199"/>
    <listofallmembers>
      <member refid="structdpp_1_1json__interface_1a287c22f692ee3d25b6f9b320ff35baa1" prot="public" virt="virtual"><scope>dpp::select_option</scope><name>build_json</name></member>
      <member refid="structdpp_1_1select__option_1a9e8b7f77dc54e0746d5781179d65f703" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>description</name></member>
      <member refid="structdpp_1_1select__option_1a87080e97f389b83a93c43198a1380f7b" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>emoji</name></member>
      <member refid="structdpp_1_1select__option_1a2b424cbf499552ae1cf852016766c1a4" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>fill_from_json</name></member>
      <member refid="structdpp_1_1select__option_1a0bbb221b08b77ffb46d1b352bf7f8222" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>is_default</name></member>
      <member refid="structdpp_1_1select__option_1a9b69bce92e58e606f37964d60c99c799" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>label</name></member>
      <member refid="structdpp_1_1select__option_1aa6ca8ed29e8e1f81ab8ce82e2b9ed1fa" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>select_option</name></member>
      <member refid="structdpp_1_1select__option_1afdd887738c88c21cee80ce2ddd6a0f84" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>select_option</name></member>
      <member refid="structdpp_1_1select__option_1a841099bce27c36f02c3edd204a334a68" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>set_animated</name></member>
      <member refid="structdpp_1_1select__option_1a8fd5bb5f91cf48af2f5adc18396e74b4" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>set_default</name></member>
      <member refid="structdpp_1_1select__option_1af9b1b5fa9877397a1a71ecd83e4a7f52" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>set_description</name></member>
      <member refid="structdpp_1_1select__option_1a473cb19e265133cac10f20813f047b80" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>set_emoji</name></member>
      <member refid="structdpp_1_1select__option_1a57297c33373a7e60e5ca2a1fa1252d34" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>set_label</name></member>
      <member refid="structdpp_1_1select__option_1a78df0a21b01447ffacefe4ee5d0a076a" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>set_value</name></member>
      <member refid="structdpp_1_1select__option_1a9dbeb317e3612fb10d2f47cc8b61eb39" prot="public" virt="non-virtual"><scope>dpp::select_option</scope><name>value</name></member>
      <member refid="structdpp_1_1json__interface_1a8fea07be649b8bb166c28c5a7daccf53" prot="protected" virt="non-virtual"><scope>dpp::select_option</scope><name>~json_interface</name></member>
      <member refid="structdpp_1_1select__option_1a4386959efc6c72b0e302e8644aec42af" prot="public" virt="virtual"><scope>dpp::select_option</scope><name>~select_option</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
