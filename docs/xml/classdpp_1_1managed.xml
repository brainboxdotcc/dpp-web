<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1managed" kind="class" language="C++" prot="public">
    <compoundname>dpp::managed</compoundname>
    <derivedcompoundref refid="classdpp_1_1application" prot="public" virt="non-virtual">dpp::application</derivedcompoundref>
    <derivedcompoundref refid="classdpp_1_1channel" prot="public" virt="non-virtual">dpp::channel</derivedcompoundref>
    <derivedcompoundref refid="classdpp_1_1collected__reaction" prot="public" virt="non-virtual">dpp::collected_reaction</derivedcompoundref>
    <derivedcompoundref refid="classdpp_1_1emoji" prot="public" virt="non-virtual">dpp::emoji</derivedcompoundref>
    <derivedcompoundref refid="classdpp_1_1guild" prot="public" virt="non-virtual">dpp::guild</derivedcompoundref>
    <derivedcompoundref refid="classdpp_1_1integration" prot="public" virt="non-virtual">dpp::integration</derivedcompoundref>
    <derivedcompoundref refid="classdpp_1_1interaction" prot="public" virt="non-virtual">dpp::interaction</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1message" prot="public" virt="non-virtual">dpp::message</derivedcompoundref>
    <derivedcompoundref refid="classdpp_1_1role" prot="public" virt="non-virtual">dpp::role</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1scheduled__event" prot="public" virt="non-virtual">dpp::scheduled_event</derivedcompoundref>
    <derivedcompoundref refid="classdpp_1_1slashcommand" prot="public" virt="non-virtual">dpp::slashcommand</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1stage__instance" prot="public" virt="non-virtual">dpp::stage_instance</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1sticker" prot="public" virt="non-virtual">dpp::sticker</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1sticker__pack" prot="public" virt="non-virtual">dpp::sticker_pack</derivedcompoundref>
    <derivedcompoundref refid="classdpp_1_1user" prot="public" virt="non-virtual">dpp::user</derivedcompoundref>
    <derivedcompoundref refid="classdpp_1_1webhook" prot="public" virt="non-virtual">dpp::webhook</derivedcompoundref>
    <derivedcompoundref refid="classtest__cached__object__t" prot="public" virt="non-virtual">test_cached_object_t</derivedcompoundref>
    <includes local="no">discord.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1managed_1a40bf0c6cc03909910512808fa6caa112" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::managed::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unique ID of object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discord.h" line="44" column="11" bodyfile="include/dpp/discord.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1managed_1a3e2b7d69e7313d84aff23cadf9ba9a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::managed::managed</definition>
        <argsstring>(const snowflake=0)</argsstring>
        <name>managed</name>
        <param>
          <type>const</type>
          <declname>snowflake</declname>
          <defname>nid</defname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor, initialises id to 0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discord.h" line="46" column="1" bodyfile="src/dpp/managed.cpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1managed_1af6f3e41995e49b5ce68772a9fa4b5fad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual dpp::managed::~managed</definition>
        <argsstring>()=default</argsstring>
        <name>~managed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default destructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discord.h" line="48" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The managed class is the base class for various types that can be stored in a cache that are identified by a <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">dpp::snowflake</ref> id. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dpp::application</label>
        <link refid="classdpp_1_1application"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dpp::channel</label>
        <link refid="classdpp_1_1channel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>dpp::collected_reaction</label>
        <link refid="classdpp_1_1collected__reaction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>dpp::emoji</label>
        <link refid="classdpp_1_1emoji"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>dpp::integration</label>
        <link refid="classdpp_1_1integration"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>dpp::interaction</label>
        <link refid="classdpp_1_1interaction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
      </node>
      <node id="10">
        <label>dpp::message</label>
        <link refid="structdpp_1_1message"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>dpp::role</label>
        <link refid="classdpp_1_1role"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>dpp::scheduled_event</label>
        <link refid="structdpp_1_1scheduled__event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>dpp::slashcommand</label>
        <link refid="classdpp_1_1slashcommand"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>dpp::stage_instance</label>
        <link refid="structdpp_1_1stage__instance"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>dpp::sticker</label>
        <link refid="structdpp_1_1sticker"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>dpp::sticker_pack</label>
        <link refid="structdpp_1_1sticker__pack"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>dpp::thread</label>
        <link refid="classdpp_1_1thread"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>dpp::user_identified</label>
        <link refid="classdpp_1_1user__identified"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>dpp::webhook</label>
        <link refid="classdpp_1_1webhook"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>test_cached_object_t</label>
        <link refid="classtest__cached__object__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="2" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/discord.h" line="41" column="1" bodyfile="include/dpp/discord.h" bodystart="41" bodyend="49"/>
    <listofallmembers>
      <member refid="classdpp_1_1managed_1a40bf0c6cc03909910512808fa6caa112" prot="public" virt="non-virtual"><scope>dpp::managed</scope><name>id</name></member>
      <member refid="classdpp_1_1managed_1a3e2b7d69e7313d84aff23cadf9ba9a6a" prot="public" virt="non-virtual"><scope>dpp::managed</scope><name>managed</name></member>
      <member refid="classdpp_1_1managed_1af6f3e41995e49b5ce68772a9fa4b5fad" prot="public" virt="virtual"><scope>dpp::managed</scope><name>~managed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
