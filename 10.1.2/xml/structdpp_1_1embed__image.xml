<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1embed__image" kind="struct" language="C++" prot="public">
    <compoundname>dpp::embed_image</compoundname>
    <includes local="no">message.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1embed__image_1aa0a320fa73e4af58f8474e887fa0b136" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::embed_image::content_type</definition>
        <argsstring></argsstring>
        <name>content_type</name>
        <briefdescription>
<para>Content type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="451" column="13" bodyfile="include/dpp/message.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1embed__image_1ab6cda5b4a19d41ff0584ac0f4bae2579" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dpp::embed_image::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Flags (documented as present, but contents not documented) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="456" column="10" bodyfile="include/dpp/message.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1embed__image_1a9e718ff16e1ca96e282b5d32a28a85e2" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dpp::embed_image::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Height (calculated by discord). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="426" column="10" bodyfile="include/dpp/message.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1embed__image_1a0b92bb4465aec3377a8c60f1e439a8ff" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a249add3e7a98665ae50eea6782981fa4" kindref="member">media_loading_state</ref></type>
        <definition>media_loading_state dpp::embed_image::loading_state</definition>
        <argsstring></argsstring>
        <name>loading_state</name>
        <initializer>{<ref refid="namespacedpp_1a249add3e7a98665ae50eea6782981fa4a018c7b3512caf854870e27c6e5b33f6c" kindref="member">ls_unknown</ref>}</initializer>
        <briefdescription>
<para>Media loading state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="436" column="21" bodyfile="include/dpp/message.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1embed__image_1ad9c56c00012c91ad7f3c82251dfa1a2d" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::embed_image::placeholder</definition>
        <argsstring></argsstring>
        <name>placeholder</name>
        <briefdescription>
<para>placeholder </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="441" column="13" bodyfile="include/dpp/message.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1embed__image_1af74a504b2e404b9aa2f36c8e0a28503a" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dpp::embed_image::placeholder_version</definition>
        <argsstring></argsstring>
        <name>placeholder_version</name>
        <initializer>{1}</initializer>
        <briefdescription>
<para>Placeholder version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="446" column="9" bodyfile="include/dpp/message.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1embed__image_1a156faedb90a1c9a6d9d10d7eb2d1000a" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::embed_image::proxy_url</definition>
        <argsstring></argsstring>
        <name>proxy_url</name>
        <briefdescription>
<para>Proxied image url. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="421" column="13" bodyfile="include/dpp/message.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1embed__image_1a3bfcfd7a6cb5592cc10b5cb1f35bd920" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::embed_image::url</definition>
        <argsstring></argsstring>
        <name>url</name>
        <briefdescription>
<para>URL to image or video. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="416" column="13" bodyfile="include/dpp/message.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1embed__image_1a12b0b4b68ed0eb29db562de2f6bb9586" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dpp::embed_image::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Width (calculated by discord). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="431" column="10" bodyfile="include/dpp/message.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An video, image or thumbnail in a <ref refid="structdpp_1_1embed" kindref="compound">dpp::embed</ref> or <ref refid="classdpp_1_1component" kindref="compound">dpp::component</ref> (v2) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>dpp::embed_image</label>
        <link refid="structdpp_1_1embed__image"/>
        <childnode refid="2" relation="usage">
          <edgelabel>content_type</edgelabel>
          <edgelabel>placeholder</edgelabel>
          <edgelabel>proxy_url</edgelabel>
          <edgelabel>url</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>height</edgelabel>
          <edgelabel>width</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>loading_state</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>placeholder_version</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>media_loading_state</label>
      </node>
      <node id="3">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>uint32_t</label>
      </node>
      <node id="6">
        <label>uint8_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/message.h" line="412" column="1" bodyfile="include/dpp/message.h" bodystart="412" bodyend="457"/>
    <listofallmembers>
      <member refid="structdpp_1_1embed__image_1aa0a320fa73e4af58f8474e887fa0b136" prot="public" virt="non-virtual"><scope>dpp::embed_image</scope><name>content_type</name></member>
      <member refid="structdpp_1_1embed__image_1ab6cda5b4a19d41ff0584ac0f4bae2579" prot="public" virt="non-virtual"><scope>dpp::embed_image</scope><name>flags</name></member>
      <member refid="structdpp_1_1embed__image_1a9e718ff16e1ca96e282b5d32a28a85e2" prot="public" virt="non-virtual"><scope>dpp::embed_image</scope><name>height</name></member>
      <member refid="structdpp_1_1embed__image_1a0b92bb4465aec3377a8c60f1e439a8ff" prot="public" virt="non-virtual"><scope>dpp::embed_image</scope><name>loading_state</name></member>
      <member refid="structdpp_1_1embed__image_1ad9c56c00012c91ad7f3c82251dfa1a2d" prot="public" virt="non-virtual"><scope>dpp::embed_image</scope><name>placeholder</name></member>
      <member refid="structdpp_1_1embed__image_1af74a504b2e404b9aa2f36c8e0a28503a" prot="public" virt="non-virtual"><scope>dpp::embed_image</scope><name>placeholder_version</name></member>
      <member refid="structdpp_1_1embed__image_1a156faedb90a1c9a6d9d10d7eb2d1000a" prot="public" virt="non-virtual"><scope>dpp::embed_image</scope><name>proxy_url</name></member>
      <member refid="structdpp_1_1embed__image_1a3bfcfd7a6cb5592cc10b5cb1f35bd920" prot="public" virt="non-virtual"><scope>dpp::embed_image</scope><name>url</name></member>
      <member refid="structdpp_1_1embed__image_1a12b0b4b68ed0eb29db562de2f6bb9586" prot="public" virt="non-virtual"><scope>dpp::embed_image</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
