<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1voiceregion" kind="class" language="C++" prot="public">
    <compoundname>dpp::voiceregion</compoundname>
    <basecompoundref refid="structdpp_1_1json__interface" prot="public" virt="non-virtual">dpp::json_interface&lt; voiceregion &gt;</basecompoundref>
    <includes local="no">voiceregion.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classdpp_1_1voiceregion_1a853f4ca945dfd5a9a433362e8ab70d79" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct json_interface&lt; voiceregion &gt;</definition>
        <argsstring></argsstring>
        <name>json_interface&lt; voiceregion &gt;</name>
        <param>
          <type><ref refid="structdpp_1_1json__interface" kindref="compound">json_interface</ref>&lt; <ref refid="classdpp_1_1voiceregion" kindref="compound">voiceregion</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="124" column="28" bodyfile="include/dpp/voiceregion.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1voiceregion_1a36b5334ed5fd4a4b2781140ca33ab543" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::voiceregion::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>Voice server ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="77" column="13" bodyfile="include/dpp/voiceregion.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voiceregion_1aeb615bf80ea5915481682e8fa01595b8" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::voiceregion::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>Voice server name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="82" column="13" bodyfile="include/dpp/voiceregion.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voiceregion_1af3068a533a8396614c48401c1049c374" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dpp::voiceregion::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
<para>Flags bitmap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="87" column="9" bodyfile="include/dpp/voiceregion.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdpp_1_1voiceregion_1ac1b4724cda0653699d9c6c98594491f1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1voiceregion" kindref="compound">voiceregion</ref> &amp;</type>
        <definition>voiceregion &amp; dpp::voiceregion::fill_from_json_impl</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json_impl</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Fill object properties from JSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON to fill from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>voiceregion&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="63" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voiceregion_1a7870079b8e346a4c62eeb7f4439a3271" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacedpp_1ae9134a9d8edf8adcb87e979bb7a7343e" kindref="member">json</ref></type>
        <definition>virtual json dpp::voiceregion::to_json_impl</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>to_json_impl</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Build a json for this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Add ID to output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>json JSON string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="71" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1voiceregion_1aa49a3a3f843f2f97f27ad262dff11c5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::voiceregion::voiceregion</definition>
        <argsstring>()</argsstring>
        <name>voiceregion</name>
        <briefdescription>
<para>Construct a new voiceregion object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voiceregion_1a9617792a8ad16a03a2ce0d8c281c048f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual dpp::voiceregion::~voiceregion</definition>
        <argsstring>()=default</argsstring>
        <name>~voiceregion</name>
        <briefdescription>
<para>Destroy the voiceregion object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="97" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voiceregion_1ad8cc77b8def50a189e2b2c636fd6927e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::voiceregion::is_optimal</definition>
        <argsstring>() const</argsstring>
        <name>is_optimal</name>
        <briefdescription>
<para>True if is the optimal voice server. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if optimal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="104" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voiceregion_1af29355f165f2ee1aeed095f79136c039" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::voiceregion::is_deprecated</definition>
        <argsstring>() const</argsstring>
        <name>is_deprecated</name>
        <briefdescription>
<para>True if is a deprecated voice server. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if deprecated </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="111" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voiceregion_1a2acea0a6fa26f8713e7ff712c21626b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::voiceregion::is_custom</definition>
        <argsstring>() const</argsstring>
        <name>is_custom</name>
        <briefdescription>
<para>True if is a custom voice server. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if custom </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="118" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdpp_1_1voiceregion" kindref="compound">voiceregion</ref> &amp;</type>
        <definition>voiceregion  &amp; dpp::json_interface&lt; voiceregion  &gt;::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Convert object from nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T&amp; Reference to self for fluent calling </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="44" column="3" bodyfile="include/dpp/json_interface.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto dpp::json_interface&lt; voiceregion  &gt;::to_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>to_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>json Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="56" column="6" bodyfile="include/dpp/json_interface.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::json_interface&lt; voiceregion  &gt;::build_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>build_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to json string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>std::string Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="68" column="13" bodyfile="include/dpp/json_interface.h" bodystart="68" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a voice region on discord. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="1">
        <label>dpp::voiceregion</label>
        <link refid="classdpp_1_1voiceregion"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; voiceregion &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; voiceregion &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="1">
        <label>dpp::voiceregion</label>
        <link refid="classdpp_1_1voiceregion"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>id</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; voiceregion &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; voiceregion &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>uint8_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/voiceregion.h" line="53" column="1" bodyfile="include/dpp/voiceregion.h" bodystart="53" bodyend="119"/>
    <listofallmembers>
      <member refid="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" virt="non-virtual"><scope>dpp::voiceregion</scope><name>build_json</name></member>
      <member refid="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" virt="non-virtual"><scope>dpp::voiceregion</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1voiceregion_1ac1b4724cda0653699d9c6c98594491f1" prot="protected" virt="non-virtual"><scope>dpp::voiceregion</scope><name>fill_from_json_impl</name></member>
      <member refid="classdpp_1_1voiceregion_1af3068a533a8396614c48401c1049c374" prot="public" virt="non-virtual"><scope>dpp::voiceregion</scope><name>flags</name></member>
      <member refid="classdpp_1_1voiceregion_1a36b5334ed5fd4a4b2781140ca33ab543" prot="public" virt="non-virtual"><scope>dpp::voiceregion</scope><name>id</name></member>
      <member refid="classdpp_1_1voiceregion_1a2acea0a6fa26f8713e7ff712c21626b4" prot="public" virt="non-virtual"><scope>dpp::voiceregion</scope><name>is_custom</name></member>
      <member refid="classdpp_1_1voiceregion_1af29355f165f2ee1aeed095f79136c039" prot="public" virt="non-virtual"><scope>dpp::voiceregion</scope><name>is_deprecated</name></member>
      <member refid="classdpp_1_1voiceregion_1ad8cc77b8def50a189e2b2c636fd6927e" prot="public" virt="non-virtual"><scope>dpp::voiceregion</scope><name>is_optimal</name></member>
      <member refid="classdpp_1_1voiceregion_1a853f4ca945dfd5a9a433362e8ab70d79" prot="protected" virt="non-virtual"><scope>dpp::voiceregion</scope><name>json_interface&lt; voiceregion &gt;</name></member>
      <member refid="classdpp_1_1voiceregion_1aeb615bf80ea5915481682e8fa01595b8" prot="public" virt="non-virtual"><scope>dpp::voiceregion</scope><name>name</name></member>
      <member refid="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" virt="non-virtual"><scope>dpp::voiceregion</scope><name>to_json</name></member>
      <member refid="classdpp_1_1voiceregion_1a7870079b8e346a4c62eeb7f4439a3271" prot="protected" virt="virtual"><scope>dpp::voiceregion</scope><name>to_json_impl</name></member>
      <member refid="classdpp_1_1voiceregion_1aa49a3a3f843f2f97f27ad262dff11c5c" prot="public" virt="non-virtual"><scope>dpp::voiceregion</scope><name>voiceregion</name></member>
      <member refid="classdpp_1_1voiceregion_1a9617792a8ad16a03a2ce0d8c281c048f" prot="public" virt="virtual"><scope>dpp::voiceregion</scope><name>~voiceregion</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
