<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="namespacedetail" kind="namespace" language="C++">
    <compoundname>detail</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacedetail_1aa6c7f232657c83f4e976f9af21f12dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int detail::format_float</definition>
        <argsstring>(char *buf, std::size_t size, const char *format, int precision, T value)</argsstring>
        <name>format_float</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/format.cpp" line="14" column="5" bodyfile="src/dpp/format.cpp" bodystart="14" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="namespacedetail_1ab60222a912202fa179149bc2a630e4ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>basic_format_context&lt; std::back_insert_iterator&lt; buffer&lt; Char &gt; &gt;, Char &gt;::iterator</type>
        <definition>basic_format_context&lt; std::back_insert_iterator&lt; buffer&lt; Char &gt; &gt;, Char &gt;::iterator detail::vformat_to</definition>
        <argsstring>(buffer&lt; Char &gt; &amp;buf, basic_string_view&lt; Char &gt; format_str, basic_format_args&lt; basic_format_context&lt; std::back_insert_iterator&lt; buffer&lt; type_identity_t&lt; Char &gt; &gt; &gt;, type_identity_t&lt; Char &gt; &gt; &gt; args)</argsstring>
        <name>vformat_to</name>
        <param>
          <type>buffer&lt; Char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>basic_string_view&lt; Char &gt;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type>basic_format_args&lt; basic_format_context&lt; std::back_insert_iterator&lt; buffer&lt; type_identity_t&lt; Char &gt; &gt; &gt;, type_identity_t&lt; Char &gt; &gt; &gt;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/format.cpp" line="36" column="1" bodyfile="src/dpp/format.cpp" bodystart="36" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="namespacedetail_1ae732653a877af30fd393e774a72bebec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template basic_format_context&lt; std::back_insert_iterator&lt; buffer&lt; char &gt; &gt;, char &gt;::iterator</type>
        <definition>template basic_format_context&lt; std::back_insert_iterator&lt; buffer&lt; char &gt; &gt;, char &gt;::iterator detail::vformat_to</definition>
        <argsstring>(buffer&lt; char &gt; &amp;, string_view, basic_format_args&lt; basic_format_context&lt; std::back_insert_iterator&lt; buffer&lt; type_identity_t&lt; char &gt; &gt; &gt;, type_identity_t&lt; char &gt; &gt; &gt;)</argsstring>
        <name>vformat_to</name>
        <param>
          <type>buffer&lt; char &gt; &amp;</type>
        </param>
        <param>
          <type>string_view</type>
        </param>
        <param>
          <type>basic_format_args&lt; basic_format_context&lt; std::back_insert_iterator&lt; buffer&lt; type_identity_t&lt; char &gt; &gt; &gt;, type_identity_t&lt; char &gt; &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/format.cpp" line="52" column="1" declfile="src/dpp/format.cpp" declline="52" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/dpp/format.cpp" line="11" column="1"/>
  </compounddef>
</doxygen>
