<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="namespacedpp_1_1cache__policy" kind="namespace" language="C++">
    <compoundname>dpp::cache_policy</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacedpp_1_1cache__policy_1a851fe024df39295092817467cee45abe" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structdpp_1_1cache__policy__t" kindref="compound">cache_policy_t</ref></type>
        <definition>constexpr cache_policy_t dpp::cache_policy::cpol_default</definition>
        <argsstring></argsstring>
        <name>cpol_default</name>
        <initializer>= { <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" kindref="member">cp_aggressive</ref>, <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" kindref="member">cp_aggressive</ref>, <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" kindref="member">cp_aggressive</ref>, <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" kindref="member">cp_aggressive</ref>, <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" kindref="member">cp_aggressive</ref> }</initializer>
        <briefdescription>
<para>A shortcut constant for all caching enabled for use in <ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1240" column="33" bodyfile="include/dpp/message.h" bodystart="1240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1_1cache__policy_1aa946ffa75d7ea53f0f66fbd7b360c549" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structdpp_1_1cache__policy__t" kindref="compound">cache_policy_t</ref></type>
        <definition>constexpr cache_policy_t dpp::cache_policy::cpol_balanced</definition>
        <argsstring></argsstring>
        <name>cpol_balanced</name>
        <initializer>= { <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a055c40e9038f2345a5c1fb9a3d3d648c" kindref="member">cp_lazy</ref>, <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a055c40e9038f2345a5c1fb9a3d3d648c" kindref="member">cp_lazy</ref>, <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a055c40e9038f2345a5c1fb9a3d3d648c" kindref="member">cp_lazy</ref>, <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" kindref="member">cp_aggressive</ref>, <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" kindref="member">cp_aggressive</ref> }</initializer>
        <briefdescription>
<para>A shortcut constant for a more balanced caching policy for use in <ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1245" column="33" bodyfile="include/dpp/message.h" bodystart="1245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1_1cache__policy_1a97535f77959aa149e9f3eee7b5b63551" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structdpp_1_1cache__policy__t" kindref="compound">cache_policy_t</ref></type>
        <definition>constexpr cache_policy_t dpp::cache_policy::cpol_none</definition>
        <argsstring></argsstring>
        <name>cpol_none</name>
        <initializer>= { <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a68e2695356af38492410341873083c49" kindref="member">cp_none</ref>, <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a68e2695356af38492410341873083c49" kindref="member">cp_none</ref>, <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a68e2695356af38492410341873083c49" kindref="member">cp_none</ref>, <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a68e2695356af38492410341873083c49" kindref="member">cp_none</ref>, <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a68e2695356af38492410341873083c49" kindref="member">cp_none</ref> }</initializer>
        <briefdescription>
<para>A shortcut constant for all caching disabled for use in <ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1250" column="33" bodyfile="include/dpp/message.h" bodystart="1250" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains a set of predefined cache policies for use when constructing a <ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dpp/message.h" line="1235" column="1"/>
  </compounddef>
</doxygen>
