<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1command__source" kind="struct" language="C++" prot="public">
    <compoundname>dpp::command_source</compoundname>
    <includes local="no">commandhandler.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1command__source_1a8ed068737789c5230db85047d9499b11" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::command_source::guild_id</definition>
        <argsstring></argsstring>
        <name>guild_id</name>
        <briefdescription>
<para>Sending guild id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="147" column="11" bodyfile="include/dpp/commandhandler.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__source_1a98d2f56173783173717ee1ef90f6e424" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::command_source::channel_id</definition>
        <argsstring></argsstring>
        <name>channel_id</name>
        <briefdescription>
<para>Source channel id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="151" column="11" bodyfile="include/dpp/commandhandler.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__source_1a49e99fcfc393681af05f3e4bc8a7b360" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::command_source::command_id</definition>
        <argsstring></argsstring>
        <name>command_id</name>
        <briefdescription>
<para>Command ID of a slash command. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="155" column="11" bodyfile="include/dpp/commandhandler.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__source_1a8bec40f2cc0e419489921c4a222353df" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::command_source::command_token</definition>
        <argsstring></argsstring>
        <name>command_token</name>
        <briefdescription>
<para>Token for sending a slash command reply. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="159" column="13" bodyfile="include/dpp/commandhandler.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__source_1a04e791e7954c95ac7c3b6880760e297e" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1user" kindref="compound">user</ref></type>
        <definition>user dpp::command_source::issuer</definition>
        <argsstring></argsstring>
        <name>issuer</name>
        <briefdescription>
<para>The user who issued the command. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="163" column="6" bodyfile="include/dpp/commandhandler.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__source_1aa28d537b7812dc2898605baba2b010fa" prot="public" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="structdpp_1_1message__create__t" kindref="compound">message_create_t</ref> &gt;</type>
        <definition>std::optional&lt;message_create_t&gt; dpp::command_source::message_event</definition>
        <argsstring></argsstring>
        <name>message_event</name>
        <briefdescription>
<para>Copy of the underlying <ref refid="structdpp_1_1message__create__t" kindref="compound">message_create_t</ref> event, if it was a message create event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="168" column="15" bodyfile="include/dpp/commandhandler.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__source_1acca58c533acf792deaccfa959665d06e" prot="public" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="structdpp_1_1interaction__create__t" kindref="compound">interaction_create_t</ref> &gt;</type>
        <definition>std::optional&lt;interaction_create_t&gt; dpp::command_source::interaction_event</definition>
        <argsstring></argsstring>
        <name>interaction_event</name>
        <briefdescription>
<para>Copy of the underlying <ref refid="structdpp_1_1interaction__create__t" kindref="compound">interaction_create_t</ref> event, if it was an interaction create event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="173" column="15" bodyfile="include/dpp/commandhandler.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1command__source_1aafc88011b6c193c8b900584fa0da0728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::command_source::command_source</definition>
        <argsstring>(const struct message_create_t &amp;event)</argsstring>
        <name>command_source</name>
        <param>
          <type>const struct <ref refid="structdpp_1_1message__create__t" kindref="compound">message_create_t</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="structdpp_1_1command__source" kindref="compound">command_source</ref> object from a <ref refid="structdpp_1_1message__create__t" kindref="compound">message_create_t</ref> event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="178" column="1" bodyfile="src/dpp/commandhandler.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1command__source_1ae617d4cd6fe898f7ab77b33a76b8f52b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::command_source::command_source</definition>
        <argsstring>(const struct interaction_create_t &amp;event)</argsstring>
        <name>command_source</name>
        <param>
          <type>const struct <ref refid="structdpp_1_1interaction__create__t" kindref="compound">interaction_create_t</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="structdpp_1_1command__source" kindref="compound">command_source</ref> object from an <ref refid="structdpp_1_1interaction__create__t" kindref="compound">interaction_create_t</ref> event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="183" column="1" bodyfile="src/dpp/commandhandler.cpp" bodystart="38" bodyend="40"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents the sending source of a command. This is passed to any command handler and should be passed back to <ref refid="classdpp_1_1commandhandler_1a50e8e241a9208405bf05d7cf8806cd19" kindref="member">commandhandler::reply()</ref>, allowing the reply method to route any replies back to the origin, which may be a slash command or a message. Both require different response facilities but we want this to be transparent if you use the command handler class. </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>commandhandler and message commands are deprecated and <ref refid="classdpp_1_1slashcommand" kindref="compound">dpp::slashcommand</ref> is encouraged as a replacement. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>dpp::command_source</label>
        <link refid="structdpp_1_1command__source"/>
        <childnode refid="2" relation="usage">
          <edgelabel>channel_id</edgelabel>
          <edgelabel>command_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>command_token</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>issuer</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>interaction_event</edgelabel>
          <edgelabel>message_event</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="2" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="2" relation="usage">
          <edgelabel>first</edgelabel>
          <edgelabel>second</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="11">
        <label>optional&lt;</label>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>uint16_t</label>
      </node>
      <node id="9">
        <label>uint32_t</label>
      </node>
      <node id="2">
        <label>uint64_t</label>
      </node>
      <node id="10">
        <label>uint8_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/commandhandler.h" line="143" column="1" bodyfile="include/dpp/commandhandler.h" bodystart="143" bodyend="184"/>
    <listofallmembers>
      <member refid="structdpp_1_1command__source_1a98d2f56173783173717ee1ef90f6e424" prot="public" virt="non-virtual"><scope>dpp::command_source</scope><name>channel_id</name></member>
      <member refid="structdpp_1_1command__source_1a49e99fcfc393681af05f3e4bc8a7b360" prot="public" virt="non-virtual"><scope>dpp::command_source</scope><name>command_id</name></member>
      <member refid="structdpp_1_1command__source_1aafc88011b6c193c8b900584fa0da0728" prot="public" virt="non-virtual"><scope>dpp::command_source</scope><name>command_source</name></member>
      <member refid="structdpp_1_1command__source_1ae617d4cd6fe898f7ab77b33a76b8f52b" prot="public" virt="non-virtual"><scope>dpp::command_source</scope><name>command_source</name></member>
      <member refid="structdpp_1_1command__source_1a8bec40f2cc0e419489921c4a222353df" prot="public" virt="non-virtual"><scope>dpp::command_source</scope><name>command_token</name></member>
      <member refid="structdpp_1_1command__source_1a8ed068737789c5230db85047d9499b11" prot="public" virt="non-virtual"><scope>dpp::command_source</scope><name>guild_id</name></member>
      <member refid="structdpp_1_1command__source_1acca58c533acf792deaccfa959665d06e" prot="public" virt="non-virtual"><scope>dpp::command_source</scope><name>interaction_event</name></member>
      <member refid="structdpp_1_1command__source_1a04e791e7954c95ac7c3b6880760e297e" prot="public" virt="non-virtual"><scope>dpp::command_source</scope><name>issuer</name></member>
      <member refid="structdpp_1_1command__source_1aa28d537b7812dc2898605baba2b010fa" prot="public" virt="non-virtual"><scope>dpp::command_source</scope><name>message_event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
