<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1interaction" kind="class" language="C++" prot="public">
    <compoundname>dpp::interaction</compoundname>
    <basecompoundref refid="classdpp_1_1managed" prot="public" virt="non-virtual">dpp::managed</basecompoundref>
    <includes local="no">appcommand.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1interaction_1a2575444b8e918c947fb4ffc30c442201" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::interaction::application_id</definition>
        <argsstring></argsstring>
        <name>application_id</name>
        <briefdescription>
<para>id of the application this interaction is for </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="588" column="11" bodyfile="include/dpp/appcommand.h" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1ae1df9ec5826bac923ee92e2037bf17cc" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dpp::interaction::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>the type of interaction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="589" column="8" bodyfile="include/dpp/appcommand.h" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a04d74cfb07306fdf8bc540ee5a7e2f4e" prot="public" static="no" mutable="no">
        <type>std::variant&lt; <ref refid="structdpp_1_1command__interaction" kindref="compound">command_interaction</ref>, <ref refid="structdpp_1_1component__interaction" kindref="compound">component_interaction</ref>, <ref refid="structdpp_1_1autocomplete__interaction" kindref="compound">autocomplete_interaction</ref> &gt;</type>
        <definition>std::variant&lt;command_interaction, component_interaction, autocomplete_interaction&gt; dpp::interaction::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
<para>Optional: the command data payload. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="590" column="14" bodyfile="include/dpp/appcommand.h" bodystart="590" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a6301d14a86e9b51b656ef589c2e39009" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::interaction::guild_id</definition>
        <argsstring></argsstring>
        <name>guild_id</name>
        <briefdescription>
<para>Optional: the guild it was sent from. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="591" column="11" bodyfile="include/dpp/appcommand.h" bodystart="591" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a8062f778758ef53d0ea4e40f62ff4015" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::interaction::channel_id</definition>
        <argsstring></argsstring>
        <name>channel_id</name>
        <briefdescription>
<para>Optional: the channel it was sent from. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="592" column="11" bodyfile="include/dpp/appcommand.h" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a5101b493d82a15b9fa3aca68a6386e39" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::interaction::message_id</definition>
        <argsstring></argsstring>
        <name>message_id</name>
        <briefdescription>
<para>Originating message id for context menu actions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="593" column="11" bodyfile="include/dpp/appcommand.h" bodystart="593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a41e250dd231a840c82276e14bc4ffb86" prot="public" static="no" mutable="no">
        <type><ref refid="structdpp_1_1message" kindref="compound">message</ref></type>
        <definition>message dpp::interaction::msg</definition>
        <argsstring></argsstring>
        <name>msg</name>
        <briefdescription>
<para>Originating message for context menu actions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="594" column="9" bodyfile="include/dpp/appcommand.h" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a8d1cc9b3f5ccab6fc206c1adb864ac06" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref></type>
        <definition>guild_member dpp::interaction::member</definition>
        <argsstring></argsstring>
        <name>member</name>
        <briefdescription>
<para>Optional: guild member data for the invoking user, including permissions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="595" column="14" bodyfile="include/dpp/appcommand.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1af42be274f0c532e1b227d6725f25ecd3" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1user" kindref="compound">user</ref></type>
        <definition>user dpp::interaction::usr</definition>
        <argsstring></argsstring>
        <name>usr</name>
        <briefdescription>
<para>Optional: user object for the invoking user, if invoked in a DM. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="596" column="6" bodyfile="include/dpp/appcommand.h" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a3d20499cf0b8b93c655b904847622085" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::interaction::token</definition>
        <argsstring></argsstring>
        <name>token</name>
        <briefdescription>
<para>a continuation token for responding to the interaction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="597" column="13" bodyfile="include/dpp/appcommand.h" bodystart="597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a326c799b4b9d813f44f5462dae01e027" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dpp::interaction::version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <briefdescription>
<para>read-only property, always 1 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="598" column="9" bodyfile="include/dpp/appcommand.h" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1aaa88ba118d0a7b5b32090a844610d7e7" prot="public" static="no" mutable="no">
        <type><ref refid="structdpp_1_1command__resolved" kindref="compound">command_resolved</ref></type>
        <definition>command_resolved dpp::interaction::resolved</definition>
        <argsstring></argsstring>
        <name>resolved</name>
        <briefdescription>
<para>Resolved user/role etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="599" column="18" bodyfile="include/dpp/appcommand.h" bodystart="599" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1ae3578a171f1c351ccca8b178ec4a9314" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::interaction::locale</definition>
        <argsstring></argsstring>
        <name>locale</name>
        <briefdescription>
<para>User&apos;s locale (language) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="600" column="13" bodyfile="include/dpp/appcommand.h" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1af73bc2d172724c5fe2ce9b3dc34c4eb8" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::interaction::guild_locale</definition>
        <argsstring></argsstring>
        <name>guild_locale</name>
        <briefdescription>
<para>Guild&apos;s locale (language) - for guild interactions only. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="601" column="13" bodyfile="include/dpp/appcommand.h" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1abc6027911679c409058e1ff4904154cc" prot="public" static="no" mutable="no">
        <type><ref refid="structdpp_1_1cache__policy__t" kindref="compound">cache_policy_t</ref></type>
        <definition>cache_policy_t dpp::interaction::cache_policy</definition>
        <argsstring></argsstring>
        <name>cache_policy</name>
        <briefdescription>
<para>Cache policy from cluster. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="602" column="16" bodyfile="include/dpp/appcommand.h" bodystart="602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1managed_1a40bf0c6cc03909910512808fa6caa112" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::managed::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>Unique ID of object set by Discord. This value contains a timestamp, worker ID, internal server ID, and an incrementing value. Only the timestamp is relevant to us as useful metadata. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/managed.h" line="38" column="11" bodyfile="include/dpp/managed.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1interaction_1a633cfd684b67c14cbaf747b5ce181eda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::interaction::interaction</definition>
        <argsstring>()</argsstring>
        <name>interaction</name>
        <briefdescription>
<para>Construct a new interaction object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="607" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1interaction_1ad75f1efe3900962422b2bf643bd654f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1command__interaction" kindref="compound">command_interaction</ref></type>
        <definition>command_interaction dpp::interaction::get_command_interaction</definition>
        <argsstring>() const</argsstring>
        <name>get_command_interaction</name>
        <briefdescription>
<para>Get the command interaction object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classdpp_1_1logic__exception" kindref="compound">dpp::logic_exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the interaction is not for a command</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structdpp_1_1command__interaction" kindref="compound">command_interaction</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="616" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1interaction_1acb48f4602b96d1a2a289422ae1813753" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1component__interaction" kindref="compound">component_interaction</ref></type>
        <definition>component_interaction dpp::interaction::get_component_interaction</definition>
        <argsstring>() const</argsstring>
        <name>get_component_interaction</name>
        <briefdescription>
<para>Get the component interaction object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classdpp_1_1logic__exception" kindref="compound">dpp::logic_exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the interaction is not for a component</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structdpp_1_1component__interaction" kindref="compound">component_interaction</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="625" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1interaction_1ae0c4f92722e07cf8815a8a899381e657" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1autocomplete__interaction" kindref="compound">autocomplete_interaction</ref></type>
        <definition>autocomplete_interaction dpp::interaction::get_autocomplete_interaction</definition>
        <argsstring>() const</argsstring>
        <name>get_autocomplete_interaction</name>
        <briefdescription>
<para>Get the autocomplete interaction object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classdpp_1_1logic__exception" kindref="compound">dpp::logic_exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the interaction is not for an autocomplete</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structdpp_1_1autocomplete__interaction" kindref="compound">autocomplete_interaction</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="634" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1interaction_1aabbb8d58d708128098516ed443d5c140" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::interaction::get_command_name</definition>
        <argsstring>() const</argsstring>
        <name>get_command_name</name>
        <briefdescription>
<para>Get the command name for a command interaction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::string command interaction, or empty string if the interaction is not for a command. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="642" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1interaction_1a23ff816e36c44d2afa51c34a1121a124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1interaction" kindref="compound">interaction</ref> &amp;</type>
        <definition>interaction &amp; dpp::interaction::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type><ref refid="namespacenlohmann_1a2bfd99e845a2e5cd90aeaf1b1431f474" kindref="member">nlohmann::json</ref> *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Fill object properties from JSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON to fill from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>interaction&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="650" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1interaction_1a4ee649c8fe2a79e51fffd95315a0cae7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::interaction::build_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>build_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Build a json string for this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>True if to include the ID in the JSON </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string JSON string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="658" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1managed_1aa66e351fb6573a9d262ffdb2f47681b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dpp::managed::get_creation_time</definition>
        <argsstring>() const</argsstring>
        <name>get_creation_time</name>
        <briefdescription>
<para>Get the creation time of this object according to Discord. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>double creation time inferred from the snowflake ID. The minimum possible value is the first second of 2015. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/managed.h" line="55" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An interaction represents a user running a command and arrives via the <ref refid="classdpp_1_1cluster_1aaaac4fce048efff1be42965c82235b3e" kindref="member">dpp::cluster::on_interaction_create</ref> event. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dpp::interaction</label>
        <link refid="classdpp_1_1interaction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="16">
        <label>bool</label>
      </node>
      <node id="24">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="22">
        <label>double</label>
      </node>
      <node id="23">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="24" relation="usage">
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>role_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="8" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>numshards</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>ws_mode</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>on_autocomplete</edgelabel>
          <edgelabel>on_button_click</edgelabel>
          <edgelabel>on_channel_create</edgelabel>
          <edgelabel>on_channel_delete</edgelabel>
          <edgelabel>on_channel_pins_update</edgelabel>
          <edgelabel>on_channel_update</edgelabel>
          <edgelabel>on_form_submit</edgelabel>
          <edgelabel>on_guild_ban_add</edgelabel>
          <edgelabel>on_guild_ban_remove</edgelabel>
          <edgelabel>on_guild_create</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>dpp::command_resolved</label>
        <link refid="structdpp_1_1command__resolved"/>
        <childnode refid="28" relation="usage">
          <edgelabel>attachments</edgelabel>
          <edgelabel>channels</edgelabel>
          <edgelabel>member_permissions</edgelabel>
          <edgelabel>members</edgelabel>
          <edgelabel>messages</edgelabel>
          <edgelabel>roles</edgelabel>
          <edgelabel>users</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="8" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>guild_id</edgelabel>
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>communication_disabled_until</edgelabel>
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dpp::interaction</label>
        <link refid="classdpp_1_1interaction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>application_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>message_id</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>type</edgelabel>
          <edgelabel>version</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>msg</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>member</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>usr</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>guild_locale</edgelabel>
          <edgelabel>locale</edgelabel>
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>resolved</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="3" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>dpp::message</label>
        <link refid="structdpp_1_1message"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>channel_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>webhook_id</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>author</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>member</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>content</edgelabel>
          <edgelabel>nonce</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>attachments</edgelabel>
          <edgelabel>components</edgelabel>
          <edgelabel>embeds</edgelabel>
          <edgelabel>filecontent</edgelabel>
          <edgelabel>filename</edgelabel>
          <edgelabel>mention_channels</edgelabel>
          <edgelabel>mention_roles</edgelabel>
          <edgelabel>mentions</edgelabel>
          <edgelabel>reactions</edgelabel>
          <edgelabel>stickers</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>edited</edgelabel>
          <edgelabel>sent</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>mention_everyone</edgelabel>
          <edgelabel>pinned</edgelabel>
          <edgelabel>tts</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>message_reference</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>interaction</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>allowed_mentions</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>dpp::message::allowed_ref</label>
        <link refid="structdpp_1_1message_1_1allowed__ref"/>
        <childnode refid="16" relation="usage">
          <edgelabel>parse_everyone</edgelabel>
          <edgelabel>parse_roles</edgelabel>
          <edgelabel>parse_users</edgelabel>
          <edgelabel>replied_user</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>users</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>dpp::message::message_interaction_struct</label>
        <link refid="structdpp_1_1message_1_1message__interaction__struct"/>
        <childnode refid="3" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>usr</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>dpp::message::message_ref</label>
        <link refid="structdpp_1_1message_1_1message__ref"/>
        <childnode refid="3" relation="usage">
          <edgelabel>channel_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>message_id</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>fail_if_not_exists</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="3" relation="usage">
          <edgelabel>first</edgelabel>
          <edgelabel>second</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>event_router_t&lt;</label>
      </node>
      <node id="17">
        <label>message_type</label>
      </node>
      <node id="9">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="28">
        <label>map&lt;</label>
      </node>
      <node id="8">
        <label>std::string</label>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>variant&lt;</label>
      </node>
      <node id="14">
        <label>vector&lt;</label>
      </node>
      <node id="15">
        <label>time_t</label>
      </node>
      <node id="10">
        <label>uint16_t</label>
      </node>
      <node id="12">
        <label>uint32_t</label>
      </node>
      <node id="3">
        <label>uint64_t</label>
      </node>
      <node id="4">
        <label>uint8_t</label>
      </node>
      <node id="25">
        <label>websocket_protocol_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/appcommand.h" line="586" column="1" bodyfile="include/dpp/appcommand.h" bodystart="586" bodyend="659"/>
    <listofallmembers>
      <member refid="classdpp_1_1interaction_1a2575444b8e918c947fb4ffc30c442201" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>application_id</name></member>
      <member refid="classdpp_1_1interaction_1a4ee649c8fe2a79e51fffd95315a0cae7" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>build_json</name></member>
      <member refid="classdpp_1_1interaction_1abc6027911679c409058e1ff4904154cc" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>cache_policy</name></member>
      <member refid="classdpp_1_1interaction_1a8062f778758ef53d0ea4e40f62ff4015" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>channel_id</name></member>
      <member refid="classdpp_1_1interaction_1a04d74cfb07306fdf8bc540ee5a7e2f4e" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>data</name></member>
      <member refid="classdpp_1_1interaction_1a23ff816e36c44d2afa51c34a1121a124" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1interaction_1ae0c4f92722e07cf8815a8a899381e657" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>get_autocomplete_interaction</name></member>
      <member refid="classdpp_1_1interaction_1ad75f1efe3900962422b2bf643bd654f4" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>get_command_interaction</name></member>
      <member refid="classdpp_1_1interaction_1aabbb8d58d708128098516ed443d5c140" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>get_command_name</name></member>
      <member refid="classdpp_1_1interaction_1acb48f4602b96d1a2a289422ae1813753" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>get_component_interaction</name></member>
      <member refid="classdpp_1_1managed_1aa66e351fb6573a9d262ffdb2f47681b7" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>get_creation_time</name></member>
      <member refid="classdpp_1_1interaction_1a6301d14a86e9b51b656ef589c2e39009" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>guild_id</name></member>
      <member refid="classdpp_1_1interaction_1af73bc2d172724c5fe2ce9b3dc34c4eb8" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>guild_locale</name></member>
      <member refid="classdpp_1_1managed_1a40bf0c6cc03909910512808fa6caa112" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>id</name></member>
      <member refid="classdpp_1_1interaction_1a633cfd684b67c14cbaf747b5ce181eda" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>interaction</name></member>
      <member refid="classdpp_1_1interaction_1ae3578a171f1c351ccca8b178ec4a9314" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>locale</name></member>
      <member refid="classdpp_1_1managed_1a30e9c7c9cef4cd42487f0be61aa616d0" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>managed</name></member>
      <member refid="classdpp_1_1interaction_1a8d1cc9b3f5ccab6fc206c1adb864ac06" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>member</name></member>
      <member refid="classdpp_1_1interaction_1a5101b493d82a15b9fa3aca68a6386e39" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>message_id</name></member>
      <member refid="classdpp_1_1interaction_1a41e250dd231a840c82276e14bc4ffb86" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>msg</name></member>
      <member refid="classdpp_1_1interaction_1aaa88ba118d0a7b5b32090a844610d7e7" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>resolved</name></member>
      <member refid="classdpp_1_1interaction_1a3d20499cf0b8b93c655b904847622085" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>token</name></member>
      <member refid="classdpp_1_1interaction_1ae1df9ec5826bac923ee92e2037bf17cc" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>type</name></member>
      <member refid="classdpp_1_1interaction_1af42be274f0c532e1b227d6725f25ecd3" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>usr</name></member>
      <member refid="classdpp_1_1interaction_1a326c799b4b9d813f44f5462dae01e027" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>version</name></member>
      <member refid="classdpp_1_1managed_1af6f3e41995e49b5ce68772a9fa4b5fad" prot="public" virt="virtual"><scope>dpp::interaction</scope><name>~managed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
