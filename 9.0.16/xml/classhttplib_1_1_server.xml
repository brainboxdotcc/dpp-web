<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classhttplib_1_1_server" kind="class" language="C++" prot="public">
    <compoundname>httplib::Server</compoundname>
    <includes local="no">httplib.h</includes>
    <innerclass refid="structhttplib_1_1_server_1_1_mount_point_entry" prot="private">httplib::Server::MountPointEntry</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classhttplib_1_1_server_1a68cf8c175834bde61120ac4216ea943b" prot="public" static="no" strong="yes">
        <type></type>
        <name>HandlerResponse</name>
        <enumvalue id="classhttplib_1_1_server_1a68cf8c175834bde61120ac4216ea943ba827211270de454ea3e0df8f57995efed" prot="public">
          <name>Handled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhttplib_1_1_server_1a68cf8c175834bde61120ac4216ea943ba6fe9e16b804e1ce4ac5868be60615007" prot="public">
          <name>Unhandled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="615" column="3" bodyfile="include/dpp/httplib.h" bodystart="615" bodyend="618"/>
      </memberdef>
      <memberdef kind="typedef" id="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" prot="public" static="no">
        <type>std::function&lt; void(const <ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;, <ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;)&gt;</type>
        <definition>using httplib::Server::Handler =  std::function&lt;void(const Request &amp;, Response &amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>Handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="610" column="3" bodyfile="include/dpp/httplib.h" bodystart="610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhttplib_1_1_server_1a6800f2b075d3b687ef9f96faea5c087b" prot="public" static="no">
        <type>std::function&lt; void(const <ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;, <ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;, std::exception &amp;e)&gt;</type>
        <definition>using httplib::Server::ExceptionHandler =  std::function&lt;void(const Request &amp;, Response &amp;, std::exception &amp;e)&gt;</definition>
        <argsstring></argsstring>
        <name>ExceptionHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="612" column="3" bodyfile="include/dpp/httplib.h" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhttplib_1_1_server_1a1dff40a6ecd0b29a7b7d850e1666477c" prot="public" static="no">
        <type>std::function&lt; <ref refid="classhttplib_1_1_server_1a68cf8c175834bde61120ac4216ea943b" kindref="member">HandlerResponse</ref>(const <ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;, <ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;)&gt;</type>
        <definition>using httplib::Server::HandlerWithResponse =  std::function&lt;HandlerResponse(const Request &amp;, Response &amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>HandlerWithResponse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="619" column="3" bodyfile="include/dpp/httplib.h" bodystart="620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhttplib_1_1_server_1a494a53d50a549a0e292fdf4485a5b5f8" prot="public" static="no">
        <type>std::function&lt; void(const <ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;, <ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;, const <ref refid="classhttplib_1_1_content_reader" kindref="compound">ContentReader</ref> &amp;content_reader)&gt;</type>
        <definition>using httplib::Server::HandlerWithContentReader =  std::function&lt;void( const Request &amp;, Response &amp;, const ContentReader &amp;content_reader)&gt;</definition>
        <argsstring></argsstring>
        <name>HandlerWithContentReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="622" column="3" bodyfile="include/dpp/httplib.h" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhttplib_1_1_server_1a771b94c22126548bb00e8438738adae2" prot="public" static="no">
        <type>std::function&lt; int(const <ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;, <ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;)&gt;</type>
        <definition>using httplib::Server::Expect100ContinueHandler =  std::function&lt;int(const Request &amp;, Response &amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>Expect100ContinueHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="625" column="3" bodyfile="include/dpp/httplib.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classhttplib_1_1_server_1a54305a2c588cd9119f3bd0450cdd84c7" prot="private" static="no">
        <type>std::vector&lt; std::pair&lt; std::regex, <ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref> &gt; &gt;</type>
        <definition>using httplib::Server::Handlers =  std::vector&lt;std::pair&lt;std::regex, Handler&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>Handlers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="725" column="3" bodyfile="include/dpp/httplib.h" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhttplib_1_1_server_1a822c148b30e70419b6a63968723bb81d" prot="private" static="no">
        <type>std::vector&lt; std::pair&lt; std::regex, <ref refid="classhttplib_1_1_server_1a494a53d50a549a0e292fdf4485a5b5f8" kindref="member">HandlerWithContentReader</ref> &gt; &gt;</type>
        <definition>using httplib::Server::HandlersForContentReader =  std::vector&lt;std::pair&lt;std::regex, HandlerWithContentReader&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>HandlersForContentReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="726" column="3" bodyfile="include/dpp/httplib.h" bodystart="727" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classhttplib_1_1_server_1ab02ba5727ab7e9c757f329d557e8d60f" prot="public" static="no" mutable="no">
        <type>std::function&lt; <ref refid="classhttplib_1_1_task_queue" kindref="compound">TaskQueue</ref> *(void)&gt;</type>
        <definition>std::function&lt;TaskQueue *(void)&gt; httplib::Server::new_task_queue</definition>
        <argsstring></argsstring>
        <name>new_task_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="706" column="17" bodyfile="include/dpp/httplib.h" bodystart="706" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classhttplib_1_1_server_1a8bc06c5e7e93632a22db8fd35f68b4a1" prot="protected" static="no" mutable="no">
        <type>std::atomic&lt; socket_t &gt;</type>
        <definition>std::atomic&lt;socket_t&gt; httplib::Server::svr_sock_</definition>
        <argsstring></argsstring>
        <name>svr_sock_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="713" column="15" bodyfile="include/dpp/httplib.h" bodystart="713" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a2a39446892282230d483cd137c56e4f7" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t httplib::Server::keep_alive_max_count_</definition>
        <argsstring></argsstring>
        <name>keep_alive_max_count_</name>
        <initializer>=  5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="714" column="10" bodyfile="include/dpp/httplib.h" bodystart="714" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a65cd6213eca9dedec862e9477436a625" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t httplib::Server::keep_alive_timeout_sec_</definition>
        <argsstring></argsstring>
        <name>keep_alive_timeout_sec_</name>
        <initializer>=  5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="715" column="10" bodyfile="include/dpp/httplib.h" bodystart="715" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1ac9f203c13fe12f2ecb04386df44f6081" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t httplib::Server::read_timeout_sec_</definition>
        <argsstring></argsstring>
        <name>read_timeout_sec_</name>
        <initializer>=  5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="716" column="10" bodyfile="include/dpp/httplib.h" bodystart="716" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a03a97129a6573eab65a00e5e190e2f7a" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t httplib::Server::read_timeout_usec_</definition>
        <argsstring></argsstring>
        <name>read_timeout_usec_</name>
        <initializer>=  0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="717" column="10" bodyfile="include/dpp/httplib.h" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a30362cb23ea93927768bc2a1a93e61bb" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t httplib::Server::write_timeout_sec_</definition>
        <argsstring></argsstring>
        <name>write_timeout_sec_</name>
        <initializer>=  5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="718" column="10" bodyfile="include/dpp/httplib.h" bodystart="718" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a5fabd1ab73b311873c2e6d555d8ed6f8" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t httplib::Server::write_timeout_usec_</definition>
        <argsstring></argsstring>
        <name>write_timeout_usec_</name>
        <initializer>=  0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="719" column="10" bodyfile="include/dpp/httplib.h" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a5a100e3e30db5c877c093c035b434a0e" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t httplib::Server::idle_interval_sec_</definition>
        <argsstring></argsstring>
        <name>idle_interval_sec_</name>
        <initializer>=  0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="720" column="10" bodyfile="include/dpp/httplib.h" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a29c76072511d044af75f81140e7ae34e" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t httplib::Server::idle_interval_usec_</definition>
        <argsstring></argsstring>
        <name>idle_interval_usec_</name>
        <initializer>=  0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="721" column="10" bodyfile="include/dpp/httplib.h" bodystart="721" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1aef94224ccf466318570d0309faa6c721" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t httplib::Server::payload_max_length_</definition>
        <argsstring></argsstring>
        <name>payload_max_length_</name>
        <initializer>=  ((std::numeric_limits&lt;size_t&gt;::max)())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="722" column="10" bodyfile="include/dpp/httplib.h" bodystart="722" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhttplib_1_1_server_1a5634d1fde80b467d3e42680a098d944d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; MountPointEntry &gt;</type>
        <definition>std::vector&lt;MountPointEntry&gt; httplib::Server::base_dirs_</definition>
        <argsstring></argsstring>
        <name>base_dirs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="774" column="15" bodyfile="include/dpp/httplib.h" bodystart="774" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a294c8e913e0146e2701e9c17b4552f0f" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; httplib::Server::is_running_</definition>
        <argsstring></argsstring>
        <name>is_running_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="776" column="15" bodyfile="include/dpp/httplib.h" bodystart="776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1aa336decd371629e075bd0aa17167fcd6" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; httplib::Server::file_extension_and_mimetype_map_</definition>
        <argsstring></argsstring>
        <name>file_extension_and_mimetype_map_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="777" column="12" bodyfile="include/dpp/httplib.h" bodystart="777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a5c5501d42f8a1aeae5ab2a1f2a730832" prot="private" static="no" mutable="no">
        <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
        <definition>Handler httplib::Server::file_request_handler_</definition>
        <argsstring></argsstring>
        <name>file_request_handler_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="778" column="11" bodyfile="include/dpp/httplib.h" bodystart="778" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a6d7b8d7ec13ecb5332c257bf432bb896" prot="private" static="no" mutable="no">
        <type>Handlers</type>
        <definition>Handlers httplib::Server::get_handlers_</definition>
        <argsstring></argsstring>
        <name>get_handlers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="779" column="12" bodyfile="include/dpp/httplib.h" bodystart="779" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a251316c55dd62d86bd58392eaba35afe" prot="private" static="no" mutable="no">
        <type>Handlers</type>
        <definition>Handlers httplib::Server::post_handlers_</definition>
        <argsstring></argsstring>
        <name>post_handlers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="780" column="12" bodyfile="include/dpp/httplib.h" bodystart="780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a52c52ae3e743e86a23826bbb79d14005" prot="private" static="no" mutable="no">
        <type>HandlersForContentReader</type>
        <definition>HandlersForContentReader httplib::Server::post_handlers_for_content_reader_</definition>
        <argsstring></argsstring>
        <name>post_handlers_for_content_reader_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="781" column="28" bodyfile="include/dpp/httplib.h" bodystart="781" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1af1535ba048469823646a37d8462577c9" prot="private" static="no" mutable="no">
        <type>Handlers</type>
        <definition>Handlers httplib::Server::put_handlers_</definition>
        <argsstring></argsstring>
        <name>put_handlers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="782" column="12" bodyfile="include/dpp/httplib.h" bodystart="782" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1af603bc50c785a1cfef3618499ba74b3a" prot="private" static="no" mutable="no">
        <type>HandlersForContentReader</type>
        <definition>HandlersForContentReader httplib::Server::put_handlers_for_content_reader_</definition>
        <argsstring></argsstring>
        <name>put_handlers_for_content_reader_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="783" column="28" bodyfile="include/dpp/httplib.h" bodystart="783" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1ac8f540c50353fa35b4e8d2b668f33f59" prot="private" static="no" mutable="no">
        <type>Handlers</type>
        <definition>Handlers httplib::Server::patch_handlers_</definition>
        <argsstring></argsstring>
        <name>patch_handlers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="784" column="12" bodyfile="include/dpp/httplib.h" bodystart="784" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1ae43f2284e5f0caffa0a9ddaa344c4be0" prot="private" static="no" mutable="no">
        <type>HandlersForContentReader</type>
        <definition>HandlersForContentReader httplib::Server::patch_handlers_for_content_reader_</definition>
        <argsstring></argsstring>
        <name>patch_handlers_for_content_reader_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="785" column="28" bodyfile="include/dpp/httplib.h" bodystart="785" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a1a2a7ccfd32db528b82588f2e3fac19c" prot="private" static="no" mutable="no">
        <type>Handlers</type>
        <definition>Handlers httplib::Server::delete_handlers_</definition>
        <argsstring></argsstring>
        <name>delete_handlers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="786" column="12" bodyfile="include/dpp/httplib.h" bodystart="786" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a6cb15bfc1025c672c6b6b64cec7dd2de" prot="private" static="no" mutable="no">
        <type>HandlersForContentReader</type>
        <definition>HandlersForContentReader httplib::Server::delete_handlers_for_content_reader_</definition>
        <argsstring></argsstring>
        <name>delete_handlers_for_content_reader_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="787" column="28" bodyfile="include/dpp/httplib.h" bodystart="787" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1af3181bdeb88440f6abb5a595ceb41b04" prot="private" static="no" mutable="no">
        <type>Handlers</type>
        <definition>Handlers httplib::Server::options_handlers_</definition>
        <argsstring></argsstring>
        <name>options_handlers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="788" column="12" bodyfile="include/dpp/httplib.h" bodystart="788" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a1f36f29e6eed3b18b5f0fc32ca6f7654" prot="private" static="no" mutable="no">
        <type><ref refid="classhttplib_1_1_server_1a1dff40a6ecd0b29a7b7d850e1666477c" kindref="member">HandlerWithResponse</ref></type>
        <definition>HandlerWithResponse httplib::Server::error_handler_</definition>
        <argsstring></argsstring>
        <name>error_handler_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="789" column="23" bodyfile="include/dpp/httplib.h" bodystart="789" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a9cc812f8f81679580c9a1b9ce25fa69e" prot="private" static="no" mutable="no">
        <type><ref refid="classhttplib_1_1_server_1a6800f2b075d3b687ef9f96faea5c087b" kindref="member">ExceptionHandler</ref></type>
        <definition>ExceptionHandler httplib::Server::exception_handler_</definition>
        <argsstring></argsstring>
        <name>exception_handler_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="790" column="20" bodyfile="include/dpp/httplib.h" bodystart="790" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a32f84250edf87582331cee1ae5afa138" prot="private" static="no" mutable="no">
        <type><ref refid="classhttplib_1_1_server_1a1dff40a6ecd0b29a7b7d850e1666477c" kindref="member">HandlerWithResponse</ref></type>
        <definition>HandlerWithResponse httplib::Server::pre_routing_handler_</definition>
        <argsstring></argsstring>
        <name>pre_routing_handler_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="791" column="23" bodyfile="include/dpp/httplib.h" bodystart="791" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a3808fcfd568f9967c28983fb12213582" prot="private" static="no" mutable="no">
        <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
        <definition>Handler httplib::Server::post_routing_handler_</definition>
        <argsstring></argsstring>
        <name>post_routing_handler_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="792" column="11" bodyfile="include/dpp/httplib.h" bodystart="792" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a5213a394fa9849f4710a5e26081d129f" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehttplib_1a45a8a23366055bec6273922974cff156" kindref="member">Logger</ref></type>
        <definition>Logger httplib::Server::logger_</definition>
        <argsstring></argsstring>
        <name>logger_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="793" column="10" bodyfile="include/dpp/httplib.h" bodystart="793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a00d432af06ea4de39934020883be2117" prot="private" static="no" mutable="no">
        <type><ref refid="classhttplib_1_1_server_1a771b94c22126548bb00e8438738adae2" kindref="member">Expect100ContinueHandler</ref></type>
        <definition>Expect100ContinueHandler httplib::Server::expect_100_continue_handler_</definition>
        <argsstring></argsstring>
        <name>expect_100_continue_handler_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="794" column="28" bodyfile="include/dpp/httplib.h" bodystart="794" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1ae7b4bd019468059aa09947526f95b152" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int httplib::Server::address_family_</definition>
        <argsstring></argsstring>
        <name>address_family_</name>
        <initializer>= AF_UNSPEC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="796" column="7" bodyfile="include/dpp/httplib.h" bodystart="796" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a826e59666e8b0b26c1a3843473c34e56" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool httplib::Server::tcp_nodelay_</definition>
        <argsstring></argsstring>
        <name>tcp_nodelay_</name>
        <initializer>=  false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="797" column="8" bodyfile="include/dpp/httplib.h" bodystart="797" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhttplib_1_1_server_1a9be7e79372d3659b4ff2d78ce7f09df8" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehttplib_1a02305f842f48963eb2ed425ee5d1655d" kindref="member">SocketOptions</ref></type>
        <definition>SocketOptions httplib::Server::socket_options_</definition>
        <argsstring></argsstring>
        <name>socket_options_</name>
        <initializer>= <ref refid="namespacehttplib_1aeaecacf2684b63127fa7d26d8e1a622d" kindref="member">default_socket_options</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="798" column="17" bodyfile="include/dpp/httplib.h" bodystart="798" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhttplib_1_1_server_1a55b2afc239586d61c9208039efd970ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>httplib::Server::Server</definition>
        <argsstring>()</argsstring>
        <name>Server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="628" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a5e58ae2731449737b4d01a40c9d3a293" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual httplib::Server::~Server</definition>
        <argsstring>()</argsstring>
        <name>~Server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="630" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1addd9edfcde3b07e4844ce81d2801a032" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool httplib::Server::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="632" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1ac989dfa5f91ca6a6a6fe05afbd5b1455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Get</definition>
        <argsstring>(const char *pattern, Handler handler)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="634" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1ad56965be97a376db7f7c65429739accb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Get</definition>
        <argsstring>(const char *pattern, size_t pattern_len, Handler handler)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pattern_len</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="635" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a87525a7cd8845124ccd30b5d6d30dd97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Post</definition>
        <argsstring>(const char *pattern, Handler handler)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="636" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a910dd7da997c757262ab13239b0dd350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Post</definition>
        <argsstring>(const char *pattern, size_t pattern_len, Handler handler)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pattern_len</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="637" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a73ec20cee81e29f1daa765abedbb8e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Post</definition>
        <argsstring>(const char *pattern, HandlerWithContentReader handler)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a494a53d50a549a0e292fdf4485a5b5f8" kindref="member">HandlerWithContentReader</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="638" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a13d7ee6e34a0278a073f8ea111e20944" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Post</definition>
        <argsstring>(const char *pattern, size_t pattern_len, HandlerWithContentReader handler)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pattern_len</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a494a53d50a549a0e292fdf4485a5b5f8" kindref="member">HandlerWithContentReader</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="639" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a10832b98c63618b00dd7acf842ba6bd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Put</definition>
        <argsstring>(const char *pattern, Handler handler)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="641" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a0d7c6e25fe0b1492da42f557262af63b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Put</definition>
        <argsstring>(const char *pattern, size_t pattern_len, Handler handler)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pattern_len</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="642" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a0c6c64f39aa67e9bb847391f79672bca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Put</definition>
        <argsstring>(const char *pattern, HandlerWithContentReader handler)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a494a53d50a549a0e292fdf4485a5b5f8" kindref="member">HandlerWithContentReader</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="643" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a86c9af825118e5b50f26a30e2eab4e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Put</definition>
        <argsstring>(const char *pattern, size_t pattern_len, HandlerWithContentReader handler)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pattern_len</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a494a53d50a549a0e292fdf4485a5b5f8" kindref="member">HandlerWithContentReader</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="644" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a5dad24c71c5bf8ddee209473f0d3fdc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Patch</definition>
        <argsstring>(const char *pattern, Handler handler)</argsstring>
        <name>Patch</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="646" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1ac18cf37aa0225ed8ba0ce5efcca2b9f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Patch</definition>
        <argsstring>(const char *pattern, size_t pattern_len, Handler handler)</argsstring>
        <name>Patch</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pattern_len</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="647" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a46283011fecabc24758188a466c495ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Patch</definition>
        <argsstring>(const char *pattern, HandlerWithContentReader handler)</argsstring>
        <name>Patch</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a494a53d50a549a0e292fdf4485a5b5f8" kindref="member">HandlerWithContentReader</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="648" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1af352b5c42dba23759c832468194c2ead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Patch</definition>
        <argsstring>(const char *pattern, size_t pattern_len, HandlerWithContentReader handler)</argsstring>
        <name>Patch</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pattern_len</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a494a53d50a549a0e292fdf4485a5b5f8" kindref="member">HandlerWithContentReader</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="649" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a57f9e5b3cffa12d0a252d7b85b07bef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Delete</definition>
        <argsstring>(const char *pattern, Handler handler)</argsstring>
        <name>Delete</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="651" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a91356756033710b2de494ebff4ce749a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Delete</definition>
        <argsstring>(const char *pattern, size_t pattern_len, Handler handler)</argsstring>
        <name>Delete</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pattern_len</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="652" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1ad2dd70569276f98ff1768c54064c6884" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Delete</definition>
        <argsstring>(const char *pattern, HandlerWithContentReader handler)</argsstring>
        <name>Delete</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a494a53d50a549a0e292fdf4485a5b5f8" kindref="member">HandlerWithContentReader</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="653" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a97aa616f8252a4a416647fa38a5f2c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Delete</definition>
        <argsstring>(const char *pattern, size_t pattern_len, HandlerWithContentReader handler)</argsstring>
        <name>Delete</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pattern_len</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a494a53d50a549a0e292fdf4485a5b5f8" kindref="member">HandlerWithContentReader</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="654" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1ad6c25614bab97b5165df8471bbe2fbd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Options</definition>
        <argsstring>(const char *pattern, Handler handler)</argsstring>
        <name>Options</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="656" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a70391c15cc2823ab2433e4dc43196ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::Options</definition>
        <argsstring>(const char *pattern, size_t pattern_len, Handler handler)</argsstring>
        <name>Options</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pattern_len</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="657" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1aa6104f886fc65a482989e75bb351a263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::set_base_dir</definition>
        <argsstring>(const char *dir, const char *mount_point=nullptr)</argsstring>
        <name>set_base_dir</name>
        <param>
          <type>const char *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mount_point</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="659" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1aad9dfd1fbea35b96766cec4bad877d46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::set_mount_point</definition>
        <argsstring>(const char *mount_point, const char *dir, Headers headers=Headers())</argsstring>
        <name>set_mount_point</name>
        <param>
          <type>const char *</type>
          <declname>mount_point</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref></type>
          <declname>headers</declname>
          <defval><ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="660" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1aeb6dd931cac3055c6296d9f7499d270b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::remove_mount_point</definition>
        <argsstring>(const char *mount_point)</argsstring>
        <name>remove_mount_point</name>
        <param>
          <type>const char *</type>
          <declname>mount_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="662" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a28a13496b25651d5422aa8df0724a92d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_file_extension_and_mimetype_mapping</definition>
        <argsstring>(const char *ext, const char *mime)</argsstring>
        <name>set_file_extension_and_mimetype_mapping</name>
        <param>
          <type>const char *</type>
          <declname>ext</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="663" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a7b6925d325402d78965f77588044b741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_file_request_handler</definition>
        <argsstring>(Handler handler)</argsstring>
        <name>set_file_request_handler</name>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="665" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a2811feccb162bc6da49b4abe5b82aa62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_error_handler</definition>
        <argsstring>(HandlerWithResponse handler)</argsstring>
        <name>set_error_handler</name>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a1dff40a6ecd0b29a7b7d850e1666477c" kindref="member">HandlerWithResponse</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="667" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a76dfb4c984a5b96aedb839d19c8f86d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_error_handler</definition>
        <argsstring>(Handler handler)</argsstring>
        <name>set_error_handler</name>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="668" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1ad66316cc550d27081398c69be8e38935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_exception_handler</definition>
        <argsstring>(ExceptionHandler handler)</argsstring>
        <name>set_exception_handler</name>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a6800f2b075d3b687ef9f96faea5c087b" kindref="member">ExceptionHandler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="669" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a26bbbe58ee42f3eef5703015b16c696a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_pre_routing_handler</definition>
        <argsstring>(HandlerWithResponse handler)</argsstring>
        <name>set_pre_routing_handler</name>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a1dff40a6ecd0b29a7b7d850e1666477c" kindref="member">HandlerWithResponse</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="670" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a9399eb3235f737c934618b9f8f16f7a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_post_routing_handler</definition>
        <argsstring>(Handler handler)</argsstring>
        <name>set_post_routing_handler</name>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" kindref="member">Handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="671" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1ada7a1b8419547c9ea72f21ecb6d1f2d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_expect_100_continue_handler</definition>
        <argsstring>(Expect100ContinueHandler handler)</argsstring>
        <name>set_expect_100_continue_handler</name>
        <param>
          <type><ref refid="classhttplib_1_1_server_1a771b94c22126548bb00e8438738adae2" kindref="member">Expect100ContinueHandler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="673" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1ab3f469bd07871a357da96de772ec7987" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_logger</definition>
        <argsstring>(Logger logger)</argsstring>
        <name>set_logger</name>
        <param>
          <type><ref refid="namespacehttplib_1a45a8a23366055bec6273922974cff156" kindref="member">Logger</ref></type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="674" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a964e626f335e98b5cd20902cf8088d1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_address_family</definition>
        <argsstring>(int family)</argsstring>
        <name>set_address_family</name>
        <param>
          <type>int</type>
          <declname>family</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="676" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a3fcd849f27f63fec7f62a6d8cc7d8435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_tcp_nodelay</definition>
        <argsstring>(bool on)</argsstring>
        <name>set_tcp_nodelay</name>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="677" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1ac6e87e1cedccef84813a4638694acd5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_socket_options</definition>
        <argsstring>(SocketOptions socket_options)</argsstring>
        <name>set_socket_options</name>
        <param>
          <type><ref refid="namespacehttplib_1a02305f842f48963eb2ed425ee5d1655d" kindref="member">SocketOptions</ref></type>
          <declname>socket_options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="678" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1af8905c1e99bdc3a0b353b8c3985fe7fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_keep_alive_max_count</definition>
        <argsstring>(size_t count)</argsstring>
        <name>set_keep_alive_max_count</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="680" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1aae7a9a5c73dc8cd71003da7d5d1cbd7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_keep_alive_timeout</definition>
        <argsstring>(time_t sec)</argsstring>
        <name>set_keep_alive_timeout</name>
        <param>
          <type>time_t</type>
          <declname>sec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="681" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1af9522ea3e32aa5b2e1cb9c7c93cf9473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_read_timeout</definition>
        <argsstring>(time_t sec, time_t usec=0)</argsstring>
        <name>set_read_timeout</name>
        <param>
          <type>time_t</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>usec</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="683" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1abd1a933ed52d307f3c6625dbe20f6772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Rep</type>
          </param>
          <param>
            <type>class Period</type>
          </param>
        </templateparamlist>
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_read_timeout</definition>
        <argsstring>(const std::chrono::duration&lt; Rep, Period &gt; &amp;duration)</argsstring>
        <name>set_read_timeout</name>
        <param>
          <type>const std::chrono::duration&lt; Rep, Period &gt; &amp;</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="685" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a286064a2bc6aa22cdd7e022f093deaad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_write_timeout</definition>
        <argsstring>(time_t sec, time_t usec=0)</argsstring>
        <name>set_write_timeout</name>
        <param>
          <type>time_t</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>usec</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="687" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a4b23a94ce77ac1ede2c5b67a6b369064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Rep</type>
          </param>
          <param>
            <type>class Period</type>
          </param>
        </templateparamlist>
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_write_timeout</definition>
        <argsstring>(const std::chrono::duration&lt; Rep, Period &gt; &amp;duration)</argsstring>
        <name>set_write_timeout</name>
        <param>
          <type>const std::chrono::duration&lt; Rep, Period &gt; &amp;</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="689" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a9604f44fb0bd01389635442e4f1f9e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_idle_interval</definition>
        <argsstring>(time_t sec, time_t usec=0)</argsstring>
        <name>set_idle_interval</name>
        <param>
          <type>time_t</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>usec</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="691" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1aee285a502bbfa6c5ae8e1915c7d4fde4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Rep</type>
          </param>
          <param>
            <type>class Period</type>
          </param>
        </templateparamlist>
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_idle_interval</definition>
        <argsstring>(const std::chrono::duration&lt; Rep, Period &gt; &amp;duration)</argsstring>
        <name>set_idle_interval</name>
        <param>
          <type>const std::chrono::duration&lt; Rep, Period &gt; &amp;</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="693" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a4d6c37f9ae370d54513775082340a255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; httplib::Server::set_payload_max_length</definition>
        <argsstring>(size_t length)</argsstring>
        <name>set_payload_max_length</name>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="695" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1acf36d16b4004a4a7deba69e695b1b48f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::bind_to_port</definition>
        <argsstring>(const char *host, int port, int socket_flags=0)</argsstring>
        <name>bind_to_port</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>socket_flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="697" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a0aa8209ee4fe36ffb42302836214d159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int httplib::Server::bind_to_any_port</definition>
        <argsstring>(const char *host, int socket_flags=0)</argsstring>
        <name>bind_to_any_port</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>socket_flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="698" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a3e50f66dfe531fe18590aa421ef2595f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::listen_after_bind</definition>
        <argsstring>()</argsstring>
        <name>listen_after_bind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="699" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a8249e88ea3730e87ec8ed1f9a717220f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::listen</definition>
        <argsstring>(const char *host, int port, int socket_flags=0)</argsstring>
        <name>listen</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>socket_flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="701" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a93a632ffae8eea0380daaac719cba06c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::is_running</definition>
        <argsstring>() const</argsstring>
        <name>is_running</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="703" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a0f2a6a638ad99012886c87c9786a43b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Server::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="704" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhttplib_1_1_server_1a4e7c7c79cced3d61082df30b3eb97ed2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::process_request</definition>
        <argsstring>(Stream &amp;strm, bool close_connection, bool &amp;connection_closed, const std::function&lt; void(Request &amp;)&gt; &amp;setup_request)</argsstring>
        <name>process_request</name>
        <param>
          <type><ref refid="classhttplib_1_1_stream" kindref="compound">Stream</ref> &amp;</type>
          <declname>strm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>close_connection</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>connection_closed</declname>
        </param>
        <param>
          <type>const std::function&lt; void(<ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;)&gt; &amp;</type>
          <declname>setup_request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="709" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhttplib_1_1_server_1a01c0fdeef827afd43609b939ed1d4db8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>socket_t</type>
        <definition>socket_t httplib::Server::create_server_socket</definition>
        <argsstring>(const char *host, int port, int socket_flags, SocketOptions socket_options) const</argsstring>
        <name>create_server_socket</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>socket_flags</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1a02305f842f48963eb2ed425ee5d1655d" kindref="member">SocketOptions</ref></type>
          <declname>socket_options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="729" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a7ec358fcdbd3cf0e809c84c154da04fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int httplib::Server::bind_internal</definition>
        <argsstring>(const char *host, int port, int socket_flags)</argsstring>
        <name>bind_internal</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>socket_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="731" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a294f20bcfc35d82236ab92b76c16d862" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::listen_internal</definition>
        <argsstring>()</argsstring>
        <name>listen_internal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="732" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1affee90a82135504bd0945a22d9bf16f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::routing</definition>
        <argsstring>(Request &amp;req, Response &amp;res, Stream &amp;strm)</argsstring>
        <name>routing</name>
        <param>
          <type><ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_stream" kindref="compound">Stream</ref> &amp;</type>
          <declname>strm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="734" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a49a447f1c1304873df518178cbd51c5f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::handle_file_request</definition>
        <argsstring>(const Request &amp;req, Response &amp;res, bool head=false)</argsstring>
        <name>handle_file_request</name>
        <param>
          <type>const <ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>head</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="735" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a163837520a6811818a0f9ccb71ef863a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::dispatch_request</definition>
        <argsstring>(Request &amp;req, Response &amp;res, const Handlers &amp;handlers)</argsstring>
        <name>dispatch_request</name>
        <param>
          <type><ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>const Handlers &amp;</type>
          <declname>handlers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="737" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1ab3d8f4e3af76697add653cf7a900f6d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::dispatch_request_for_content_reader</definition>
        <argsstring>(Request &amp;req, Response &amp;res, ContentReader content_reader, const HandlersForContentReader &amp;handlers)</argsstring>
        <name>dispatch_request_for_content_reader</name>
        <param>
          <type><ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type><ref refid="classhttplib_1_1_content_reader" kindref="compound">ContentReader</ref></type>
          <declname>content_reader</declname>
        </param>
        <param>
          <type>const HandlersForContentReader &amp;</type>
          <declname>handlers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="739" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1ae8ef1891cd19a609fe583b3b63b025ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::parse_request_line</definition>
        <argsstring>(const char *s, Request &amp;req)</argsstring>
        <name>parse_request_line</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="743" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a99fb8f2e56464f038017db151888f521" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Server::apply_ranges</definition>
        <argsstring>(const Request &amp;req, Response &amp;res, std::string &amp;content_type, std::string &amp;boundary)</argsstring>
        <name>apply_ranges</name>
        <param>
          <type>const <ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>content_type</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>boundary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="744" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a90636275a804067e36ffd5e3d310e86a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::write_response</definition>
        <argsstring>(Stream &amp;strm, bool close_connection, const Request &amp;req, Response &amp;res)</argsstring>
        <name>write_response</name>
        <param>
          <type><ref refid="classhttplib_1_1_stream" kindref="compound">Stream</ref> &amp;</type>
          <declname>strm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>close_connection</declname>
        </param>
        <param>
          <type>const <ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="746" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a1e7f1269fb97140ed003e6e1f64210c1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::write_response_with_content</definition>
        <argsstring>(Stream &amp;strm, bool close_connection, const Request &amp;req, Response &amp;res)</argsstring>
        <name>write_response_with_content</name>
        <param>
          <type><ref refid="classhttplib_1_1_stream" kindref="compound">Stream</ref> &amp;</type>
          <declname>strm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>close_connection</declname>
        </param>
        <param>
          <type>const <ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="748" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a01c6136577d21b708780a9e42de992d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::write_response_core</definition>
        <argsstring>(Stream &amp;strm, bool close_connection, const Request &amp;req, Response &amp;res, bool need_apply_ranges)</argsstring>
        <name>write_response_core</name>
        <param>
          <type><ref refid="classhttplib_1_1_stream" kindref="compound">Stream</ref> &amp;</type>
          <declname>strm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>close_connection</declname>
        </param>
        <param>
          <type>const <ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>need_apply_ranges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="750" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1aef004bcdc946af56186dd226442691d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::write_content_with_provider</definition>
        <argsstring>(Stream &amp;strm, const Request &amp;req, Response &amp;res, const std::string &amp;boundary, const std::string &amp;content_type)</argsstring>
        <name>write_content_with_provider</name>
        <param>
          <type><ref refid="classhttplib_1_1_stream" kindref="compound">Stream</ref> &amp;</type>
          <declname>strm</declname>
        </param>
        <param>
          <type>const <ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>boundary</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="753" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a32ad29652062d18383a1a1688892f9f2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::read_content</definition>
        <argsstring>(Stream &amp;strm, Request &amp;req, Response &amp;res)</argsstring>
        <name>read_content</name>
        <param>
          <type><ref refid="classhttplib_1_1_stream" kindref="compound">Stream</ref> &amp;</type>
          <declname>strm</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="756" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1af0053e85d97391bb7e36b01009140747" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::read_content_with_content_receiver</definition>
        <argsstring>(Stream &amp;strm, Request &amp;req, Response &amp;res, ContentReceiver receiver, MultipartContentHeader multipart_header, ContentReceiver multipart_receiver)</argsstring>
        <name>read_content_with_content_receiver</name>
        <param>
          <type><ref refid="classhttplib_1_1_stream" kindref="compound">Stream</ref> &amp;</type>
          <declname>strm</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>receiver</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1a252743256dcf78b19df63572307303da" kindref="member">MultipartContentHeader</ref></type>
          <declname>multipart_header</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>multipart_receiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="758" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a11c926b70b053a62b328d2157eea0c32" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Server::read_content_core</definition>
        <argsstring>(Stream &amp;strm, Request &amp;req, Response &amp;res, ContentReceiver receiver, MultipartContentHeader mulitpart_header, ContentReceiver multipart_receiver)</argsstring>
        <name>read_content_core</name>
        <param>
          <type><ref refid="classhttplib_1_1_stream" kindref="compound">Stream</ref> &amp;</type>
          <declname>strm</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>receiver</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1a252743256dcf78b19df63572307303da" kindref="member">MultipartContentHeader</ref></type>
          <declname>mulitpart_header</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>multipart_receiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="762" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_server_1a114ba8324e43dbd6240b68ca66f4b6be" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool httplib::Server::process_and_close_socket</definition>
        <argsstring>(socket_t sock)</argsstring>
        <name>process_and_close_socket</name>
        <param>
          <type>socket_t</type>
          <declname>sock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="767" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>httplib::Server</label>
        <link refid="classhttplib_1_1_server"/>
        <childnode refid="2" relation="usage">
          <edgelabel>new_task_queue</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>svr_sock_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>keep_alive_max_count_</edgelabel>
          <edgelabel>payload_max_length_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>idle_interval_sec_</edgelabel>
          <edgelabel>idle_interval_usec_</edgelabel>
          <edgelabel>keep_alive_timeout_sec_</edgelabel>
          <edgelabel>read_timeout_sec_</edgelabel>
          <edgelabel>read_timeout_usec_</edgelabel>
          <edgelabel>write_timeout_sec_</edgelabel>
          <edgelabel>write_timeout_usec_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>size_t</label>
      </node>
      <node id="3">
        <label>atomic&lt;</label>
      </node>
      <node id="2">
        <label>function&lt;</label>
      </node>
      <node id="5">
        <label>time_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/httplib.h" line="608" column="1" bodyfile="include/dpp/httplib.h" bodystart="608" bodyend="799"/>
    <listofallmembers>
      <member refid="classhttplib_1_1_server_1ae7b4bd019468059aa09947526f95b152" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>address_family_</name></member>
      <member refid="classhttplib_1_1_server_1a99fb8f2e56464f038017db151888f521" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>apply_ranges</name></member>
      <member refid="classhttplib_1_1_server_1a5634d1fde80b467d3e42680a098d944d" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>base_dirs_</name></member>
      <member refid="classhttplib_1_1_server_1a7ec358fcdbd3cf0e809c84c154da04fd" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>bind_internal</name></member>
      <member refid="classhttplib_1_1_server_1a0aa8209ee4fe36ffb42302836214d159" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>bind_to_any_port</name></member>
      <member refid="classhttplib_1_1_server_1acf36d16b4004a4a7deba69e695b1b48f" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>bind_to_port</name></member>
      <member refid="classhttplib_1_1_server_1a01c0fdeef827afd43609b939ed1d4db8" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>create_server_socket</name></member>
      <member refid="classhttplib_1_1_server_1a57f9e5b3cffa12d0a252d7b85b07bef4" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Delete</name></member>
      <member refid="classhttplib_1_1_server_1a91356756033710b2de494ebff4ce749a" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Delete</name></member>
      <member refid="classhttplib_1_1_server_1ad2dd70569276f98ff1768c54064c6884" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Delete</name></member>
      <member refid="classhttplib_1_1_server_1a97aa616f8252a4a416647fa38a5f2c95" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Delete</name></member>
      <member refid="classhttplib_1_1_server_1a1a2a7ccfd32db528b82588f2e3fac19c" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>delete_handlers_</name></member>
      <member refid="classhttplib_1_1_server_1a6cb15bfc1025c672c6b6b64cec7dd2de" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>delete_handlers_for_content_reader_</name></member>
      <member refid="classhttplib_1_1_server_1a163837520a6811818a0f9ccb71ef863a" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>dispatch_request</name></member>
      <member refid="classhttplib_1_1_server_1ab3d8f4e3af76697add653cf7a900f6d8" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>dispatch_request_for_content_reader</name></member>
      <member refid="classhttplib_1_1_server_1a1f36f29e6eed3b18b5f0fc32ca6f7654" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>error_handler_</name></member>
      <member refid="classhttplib_1_1_server_1a9cc812f8f81679580c9a1b9ce25fa69e" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>exception_handler_</name></member>
      <member refid="classhttplib_1_1_server_1a6800f2b075d3b687ef9f96faea5c087b" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>ExceptionHandler</name></member>
      <member refid="classhttplib_1_1_server_1a771b94c22126548bb00e8438738adae2" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Expect100ContinueHandler</name></member>
      <member refid="classhttplib_1_1_server_1a00d432af06ea4de39934020883be2117" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>expect_100_continue_handler_</name></member>
      <member refid="classhttplib_1_1_server_1aa336decd371629e075bd0aa17167fcd6" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>file_extension_and_mimetype_map_</name></member>
      <member refid="classhttplib_1_1_server_1a5c5501d42f8a1aeae5ab2a1f2a730832" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>file_request_handler_</name></member>
      <member refid="classhttplib_1_1_server_1ac989dfa5f91ca6a6a6fe05afbd5b1455" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_server_1ad56965be97a376db7f7c65429739accb" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_server_1a6d7b8d7ec13ecb5332c257bf432bb896" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>get_handlers_</name></member>
      <member refid="classhttplib_1_1_server_1a49a447f1c1304873df518178cbd51c5f" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>handle_file_request</name></member>
      <member refid="classhttplib_1_1_server_1a7dd90fb4275b663feff97966b3581b9e" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Handler</name></member>
      <member refid="classhttplib_1_1_server_1a68cf8c175834bde61120ac4216ea943b" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>HandlerResponse</name></member>
      <member refid="classhttplib_1_1_server_1a54305a2c588cd9119f3bd0450cdd84c7" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>Handlers</name></member>
      <member refid="classhttplib_1_1_server_1a822c148b30e70419b6a63968723bb81d" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>HandlersForContentReader</name></member>
      <member refid="classhttplib_1_1_server_1a494a53d50a549a0e292fdf4485a5b5f8" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>HandlerWithContentReader</name></member>
      <member refid="classhttplib_1_1_server_1a1dff40a6ecd0b29a7b7d850e1666477c" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>HandlerWithResponse</name></member>
      <member refid="classhttplib_1_1_server_1a5a100e3e30db5c877c093c035b434a0e" prot="protected" virt="non-virtual"><scope>httplib::Server</scope><name>idle_interval_sec_</name></member>
      <member refid="classhttplib_1_1_server_1a29c76072511d044af75f81140e7ae34e" prot="protected" virt="non-virtual"><scope>httplib::Server</scope><name>idle_interval_usec_</name></member>
      <member refid="classhttplib_1_1_server_1a93a632ffae8eea0380daaac719cba06c" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>is_running</name></member>
      <member refid="classhttplib_1_1_server_1a294c8e913e0146e2701e9c17b4552f0f" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>is_running_</name></member>
      <member refid="classhttplib_1_1_server_1addd9edfcde3b07e4844ce81d2801a032" prot="public" virt="virtual"><scope>httplib::Server</scope><name>is_valid</name></member>
      <member refid="classhttplib_1_1_server_1a2a39446892282230d483cd137c56e4f7" prot="protected" virt="non-virtual"><scope>httplib::Server</scope><name>keep_alive_max_count_</name></member>
      <member refid="classhttplib_1_1_server_1a65cd6213eca9dedec862e9477436a625" prot="protected" virt="non-virtual"><scope>httplib::Server</scope><name>keep_alive_timeout_sec_</name></member>
      <member refid="classhttplib_1_1_server_1a8249e88ea3730e87ec8ed1f9a717220f" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>listen</name></member>
      <member refid="classhttplib_1_1_server_1a3e50f66dfe531fe18590aa421ef2595f" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>listen_after_bind</name></member>
      <member refid="classhttplib_1_1_server_1a294f20bcfc35d82236ab92b76c16d862" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>listen_internal</name></member>
      <member refid="classhttplib_1_1_server_1a5213a394fa9849f4710a5e26081d129f" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>logger_</name></member>
      <member refid="classhttplib_1_1_server_1ab02ba5727ab7e9c757f329d557e8d60f" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>new_task_queue</name></member>
      <member refid="classhttplib_1_1_server_1ad6c25614bab97b5165df8471bbe2fbd1" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Options</name></member>
      <member refid="classhttplib_1_1_server_1a70391c15cc2823ab2433e4dc43196ee7" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Options</name></member>
      <member refid="classhttplib_1_1_server_1af3181bdeb88440f6abb5a595ceb41b04" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>options_handlers_</name></member>
      <member refid="classhttplib_1_1_server_1ae8ef1891cd19a609fe583b3b63b025ed" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>parse_request_line</name></member>
      <member refid="classhttplib_1_1_server_1a5dad24c71c5bf8ddee209473f0d3fdc1" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Patch</name></member>
      <member refid="classhttplib_1_1_server_1ac18cf37aa0225ed8ba0ce5efcca2b9f0" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Patch</name></member>
      <member refid="classhttplib_1_1_server_1a46283011fecabc24758188a466c495ef" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Patch</name></member>
      <member refid="classhttplib_1_1_server_1af352b5c42dba23759c832468194c2ead" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Patch</name></member>
      <member refid="classhttplib_1_1_server_1ac8f540c50353fa35b4e8d2b668f33f59" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>patch_handlers_</name></member>
      <member refid="classhttplib_1_1_server_1ae43f2284e5f0caffa0a9ddaa344c4be0" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>patch_handlers_for_content_reader_</name></member>
      <member refid="classhttplib_1_1_server_1aef94224ccf466318570d0309faa6c721" prot="protected" virt="non-virtual"><scope>httplib::Server</scope><name>payload_max_length_</name></member>
      <member refid="classhttplib_1_1_server_1a87525a7cd8845124ccd30b5d6d30dd97" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_server_1a910dd7da997c757262ab13239b0dd350" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_server_1a73ec20cee81e29f1daa765abedbb8e2a" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_server_1a13d7ee6e34a0278a073f8ea111e20944" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_server_1a251316c55dd62d86bd58392eaba35afe" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>post_handlers_</name></member>
      <member refid="classhttplib_1_1_server_1a52c52ae3e743e86a23826bbb79d14005" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>post_handlers_for_content_reader_</name></member>
      <member refid="classhttplib_1_1_server_1a3808fcfd568f9967c28983fb12213582" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>post_routing_handler_</name></member>
      <member refid="classhttplib_1_1_server_1a32f84250edf87582331cee1ae5afa138" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>pre_routing_handler_</name></member>
      <member refid="classhttplib_1_1_server_1a114ba8324e43dbd6240b68ca66f4b6be" prot="private" virt="virtual"><scope>httplib::Server</scope><name>process_and_close_socket</name></member>
      <member refid="classhttplib_1_1_server_1a4e7c7c79cced3d61082df30b3eb97ed2" prot="protected" virt="non-virtual"><scope>httplib::Server</scope><name>process_request</name></member>
      <member refid="classhttplib_1_1_server_1a10832b98c63618b00dd7acf842ba6bd8" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_server_1a0d7c6e25fe0b1492da42f557262af63b" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_server_1a0c6c64f39aa67e9bb847391f79672bca" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_server_1a86c9af825118e5b50f26a30e2eab4e50" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_server_1af1535ba048469823646a37d8462577c9" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>put_handlers_</name></member>
      <member refid="classhttplib_1_1_server_1af603bc50c785a1cfef3618499ba74b3a" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>put_handlers_for_content_reader_</name></member>
      <member refid="classhttplib_1_1_server_1a32ad29652062d18383a1a1688892f9f2" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>read_content</name></member>
      <member refid="classhttplib_1_1_server_1a11c926b70b053a62b328d2157eea0c32" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>read_content_core</name></member>
      <member refid="classhttplib_1_1_server_1af0053e85d97391bb7e36b01009140747" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>read_content_with_content_receiver</name></member>
      <member refid="classhttplib_1_1_server_1ac9f203c13fe12f2ecb04386df44f6081" prot="protected" virt="non-virtual"><scope>httplib::Server</scope><name>read_timeout_sec_</name></member>
      <member refid="classhttplib_1_1_server_1a03a97129a6573eab65a00e5e190e2f7a" prot="protected" virt="non-virtual"><scope>httplib::Server</scope><name>read_timeout_usec_</name></member>
      <member refid="classhttplib_1_1_server_1aeb6dd931cac3055c6296d9f7499d270b" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>remove_mount_point</name></member>
      <member refid="classhttplib_1_1_server_1affee90a82135504bd0945a22d9bf16f5" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>routing</name></member>
      <member refid="classhttplib_1_1_server_1a55b2afc239586d61c9208039efd970ae" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>Server</name></member>
      <member refid="classhttplib_1_1_server_1a964e626f335e98b5cd20902cf8088d1a" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_address_family</name></member>
      <member refid="classhttplib_1_1_server_1aa6104f886fc65a482989e75bb351a263" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_base_dir</name></member>
      <member refid="classhttplib_1_1_server_1a2811feccb162bc6da49b4abe5b82aa62" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_error_handler</name></member>
      <member refid="classhttplib_1_1_server_1a76dfb4c984a5b96aedb839d19c8f86d4" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_error_handler</name></member>
      <member refid="classhttplib_1_1_server_1ad66316cc550d27081398c69be8e38935" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_exception_handler</name></member>
      <member refid="classhttplib_1_1_server_1ada7a1b8419547c9ea72f21ecb6d1f2d3" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_expect_100_continue_handler</name></member>
      <member refid="classhttplib_1_1_server_1a28a13496b25651d5422aa8df0724a92d" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_file_extension_and_mimetype_mapping</name></member>
      <member refid="classhttplib_1_1_server_1a7b6925d325402d78965f77588044b741" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_file_request_handler</name></member>
      <member refid="classhttplib_1_1_server_1a9604f44fb0bd01389635442e4f1f9e77" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_idle_interval</name></member>
      <member refid="classhttplib_1_1_server_1aee285a502bbfa6c5ae8e1915c7d4fde4" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_idle_interval</name></member>
      <member refid="classhttplib_1_1_server_1af8905c1e99bdc3a0b353b8c3985fe7fc" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_keep_alive_max_count</name></member>
      <member refid="classhttplib_1_1_server_1aae7a9a5c73dc8cd71003da7d5d1cbd7d" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_keep_alive_timeout</name></member>
      <member refid="classhttplib_1_1_server_1ab3f469bd07871a357da96de772ec7987" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_logger</name></member>
      <member refid="classhttplib_1_1_server_1aad9dfd1fbea35b96766cec4bad877d46" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_mount_point</name></member>
      <member refid="classhttplib_1_1_server_1a4d6c37f9ae370d54513775082340a255" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_payload_max_length</name></member>
      <member refid="classhttplib_1_1_server_1a9399eb3235f737c934618b9f8f16f7a6" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_post_routing_handler</name></member>
      <member refid="classhttplib_1_1_server_1a26bbbe58ee42f3eef5703015b16c696a" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_pre_routing_handler</name></member>
      <member refid="classhttplib_1_1_server_1af9522ea3e32aa5b2e1cb9c7c93cf9473" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_read_timeout</name></member>
      <member refid="classhttplib_1_1_server_1abd1a933ed52d307f3c6625dbe20f6772" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_read_timeout</name></member>
      <member refid="classhttplib_1_1_server_1ac6e87e1cedccef84813a4638694acd5c" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_socket_options</name></member>
      <member refid="classhttplib_1_1_server_1a3fcd849f27f63fec7f62a6d8cc7d8435" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_tcp_nodelay</name></member>
      <member refid="classhttplib_1_1_server_1a286064a2bc6aa22cdd7e022f093deaad" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_write_timeout</name></member>
      <member refid="classhttplib_1_1_server_1a4b23a94ce77ac1ede2c5b67a6b369064" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>set_write_timeout</name></member>
      <member refid="classhttplib_1_1_server_1a9be7e79372d3659b4ff2d78ce7f09df8" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>socket_options_</name></member>
      <member refid="classhttplib_1_1_server_1a0f2a6a638ad99012886c87c9786a43b3" prot="public" virt="non-virtual"><scope>httplib::Server</scope><name>stop</name></member>
      <member refid="classhttplib_1_1_server_1a8bc06c5e7e93632a22db8fd35f68b4a1" prot="protected" virt="non-virtual"><scope>httplib::Server</scope><name>svr_sock_</name></member>
      <member refid="classhttplib_1_1_server_1a826e59666e8b0b26c1a3843473c34e56" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>tcp_nodelay_</name></member>
      <member refid="classhttplib_1_1_server_1aef004bcdc946af56186dd226442691d4" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>write_content_with_provider</name></member>
      <member refid="classhttplib_1_1_server_1a90636275a804067e36ffd5e3d310e86a" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>write_response</name></member>
      <member refid="classhttplib_1_1_server_1a01c6136577d21b708780a9e42de992d6" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>write_response_core</name></member>
      <member refid="classhttplib_1_1_server_1a1e7f1269fb97140ed003e6e1f64210c1" prot="private" virt="non-virtual"><scope>httplib::Server</scope><name>write_response_with_content</name></member>
      <member refid="classhttplib_1_1_server_1a30362cb23ea93927768bc2a1a93e61bb" prot="protected" virt="non-virtual"><scope>httplib::Server</scope><name>write_timeout_sec_</name></member>
      <member refid="classhttplib_1_1_server_1a5fabd1ab73b311873c2e6d555d8ed6f8" prot="protected" virt="non-virtual"><scope>httplib::Server</scope><name>write_timeout_usec_</name></member>
      <member refid="classhttplib_1_1_server_1a5e58ae2731449737b4d01a40c9d3a293" prot="public" virt="virtual"><scope>httplib::Server</scope><name>~Server</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
