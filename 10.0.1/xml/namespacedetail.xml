<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="namespacedetail" kind="namespace" language="C++">
    <compoundname>detail</compoundname>
    <innerclass refid="structdetail_1_1codecvt__result" prot="public">detail::codecvt_result</innerclass>
    <innerclass refid="structdetail_1_1null" prot="public">detail::null</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacedetail_1a3b3b86611e0c88278feb2098fce10b23" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classbool__constant" kindref="compound">bool_constant</ref>&lt;!std::is_same&lt; T, char &gt;::value &gt;</type>
        <definition>using detail::is_exotic_char = typedef bool_constant&lt;!std::is_same&lt;T, char&gt;::value&gt;</definition>
        <argsstring></argsstring>
        <name>is_exotic_char</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/xchar.h" line="19" column="1" bodyfile="include/dpp/fmt/xchar.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacedetail_1af0a05177ff15d17183395170cd81a3a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1null" kindref="compound">null</ref></type>
        <definition>null detail::localtime_r</definition>
        <argsstring>(...)</argsstring>
        <name>localtime_r</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="303" column="9" bodyfile="include/dpp/fmt/chrono.h" bodystart="303" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="namespacedetail_1acca4638afe6cbc4e38e3901cd0c16186" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1null" kindref="compound">null</ref></type>
        <definition>null detail::localtime_s</definition>
        <argsstring>(...)</argsstring>
        <name>localtime_s</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="304" column="9" bodyfile="include/dpp/fmt/chrono.h" bodystart="304" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="namespacedetail_1a5f72d5acfa41ae0e7350078cdb72d93c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1null" kindref="compound">null</ref></type>
        <definition>null detail::gmtime_r</definition>
        <argsstring>(...)</argsstring>
        <name>gmtime_r</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="305" column="9" bodyfile="include/dpp/fmt/chrono.h" bodystart="305" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="namespacedetail_1a124e4142bce4975170df82199789b2e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1null" kindref="compound">null</ref></type>
        <definition>null detail::gmtime_s</definition>
        <argsstring>(...)</argsstring>
        <name>gmtime_s</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="306" column="9" bodyfile="include/dpp/fmt/chrono.h" bodystart="306" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="namespacedetail_1a83284666c8bb709cf57cc597b8f9611d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::locale &amp;</type>
        <definition>const std::locale &amp; detail::get_classic_locale</definition>
        <argsstring>()</argsstring>
        <name>get_classic_locale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="308" column="26" bodyfile="include/dpp/fmt/chrono.h" bodystart="308" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="namespacedetail_1af0e91d29123966859ea36b0e7ae6ca62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CodeUnit</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::write_codecvt</definition>
        <argsstring>(codecvt_result&lt; CodeUnit &gt; &amp;out, string_view in_buf, const std::locale &amp;loc)</argsstring>
        <name>write_codecvt</name>
        <param>
          <type><ref refid="structdetail_1_1codecvt__result" kindref="compound">codecvt_result</ref>&lt; CodeUnit &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>string_view</type>
          <declname>in_buf</declname>
        </param>
        <param>
          <type>const std::locale &amp;</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="322" column="6" bodyfile="include/dpp/fmt/chrono.h" bodystart="322" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="namespacedetail_1a4ebaa6b5e722d7f4f43eeae307ed578e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto detail::write_encoded_tm_str</definition>
        <argsstring>(OutputIt out, string_view in, const std::locale &amp;loc) -&gt; OutputIt</argsstring>
        <name>write_encoded_tm_str</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>string_view</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const std::locale &amp;</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="342" column="6" bodyfile="include/dpp/fmt/chrono.h" bodystart="342" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="namespacedetail_1ad47cd5d042e47e907891568d605e4e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(!std::is_same&lt; Char, char &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto detail::write_tm_str</definition>
        <argsstring>(OutputIt out, string_view sv, const std::locale &amp;loc) -&gt; OutputIt</argsstring>
        <name>write_tm_str</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>string_view</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>const std::locale &amp;</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="397" column="6" bodyfile="include/dpp/fmt/chrono.h" bodystart="397" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="namespacedetail_1a5007cc441bd246a9096070c10d1ea683" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::do_write</definition>
        <argsstring>(buffer&lt; Char &gt; &amp;buf, const std::tm &amp;time, const std::locale &amp;loc, char format, char modifier)</argsstring>
        <name>do_write</name>
        <param>
          <type>buffer&lt; Char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const std::tm &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const std::locale &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>char</type>
          <declname>format</declname>
        </param>
        <param>
          <type>char</type>
          <declname>modifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="412" column="13" bodyfile="include/dpp/fmt/chrono.h" bodystart="412" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="namespacedetail_1a29dacf26eedc9e3575fb57329a5ca0a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(!std::is_same&lt; Char, char &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto detail::write</definition>
        <argsstring>(OutputIt out, const std::tm &amp;time, const std::locale &amp;loc, char format, char modifier=0) -&gt; OutputIt</argsstring>
        <name>write</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const std::tm &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const std::locale &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>char</type>
          <declname>format</declname>
        </param>
        <param>
          <type>char</type>
          <declname>modifier</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="425" column="6" bodyfile="include/dpp/fmt/chrono.h" bodystart="425" bodyend="430"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dpp/fmt/chrono.h" line="301" column="1"/>
  </compounddef>
</doxygen>
