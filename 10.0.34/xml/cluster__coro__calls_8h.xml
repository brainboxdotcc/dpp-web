<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="cluster__coro__calls_8h" kind="file" language="C++">
    <compoundname>cluster_coro_calls.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="cluster__coro__calls_8h_1a90a50a331e0a8af34e27bc47fa25b0c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>async&lt; confirmation_callback_t &gt;</type>
        <definition>async&lt; confirmation_callback_t &gt; co_guild_get</definition>
        <argsstring>(snowflake guild_id)</argsstring>
        <name>co_guild_get</name>
        <param>
          <type>snowflake</type>
          <declname>guild_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cluster_coro_calls.h" line="1003" column="8" declfile="include/dpp/cluster_coro_calls.h" declline="1003" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="cluster__coro__calls_8h_1a252d9a039efe96e7e269c51943ed889d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>async&lt; confirmation_callback_t &gt;</type>
        <definition>async&lt; confirmation_callback_t &gt; co_guild_get_preview</definition>
        <argsstring>(snowflake guild_id)</argsstring>
        <name>co_guild_get_preview</name>
        <param>
          <type>snowflake</type>
          <declname>guild_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cluster_coro_calls.h" line="1021" column="8" declfile="include/dpp/cluster_coro_calls.h" declline="1021" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="cluster__coro__calls_8h_1ae43891808a60ff573a7e4c300f00ed2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>async&lt; confirmation_callback_t &gt;</type>
        <definition>async&lt; confirmation_callback_t &gt; co_invite_delete</definition>
        <argsstring>(const std::string &amp;invitecode)</argsstring>
        <name>co_invite_delete</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>invitecode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cluster_coro_calls.h" line="1396" column="8" declfile="include/dpp/cluster_coro_calls.h" declline="1396" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="cluster__coro__calls_8h_1ad0bd1ca46299f38f4518bfe27f86cd06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>async&lt; confirmation_callback_t &gt;</type>
        <definition>async&lt; confirmation_callback_t &gt; co_stage_instance_create</definition>
        <argsstring>(const stage_instance &amp;si)</argsstring>
        <name>co_stage_instance_create</name>
        <param>
          <type>const stage_instance &amp;</type>
          <declname>si</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cluster_coro_calls.h" line="1938" column="8" declfile="include/dpp/cluster_coro_calls.h" declline="1938" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="cluster__coro__calls_8h_1a3df33aec14e276eda63498170b7971fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>async&lt; confirmation_callback_t &gt;</type>
        <definition>async&lt; confirmation_callback_t &gt; co_stage_instance_edit</definition>
        <argsstring>(const stage_instance &amp;si)</argsstring>
        <name>co_stage_instance_edit</name>
        <param>
          <type>const stage_instance &amp;</type>
          <declname>si</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cluster_coro_calls.h" line="1951" column="8" declfile="include/dpp/cluster_coro_calls.h" declline="1951" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="cluster__coro__calls_8h_1a886430f912e3db7ffe8ad3fe2d427a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>async&lt; confirmation_callback_t &gt;</type>
        <definition>async&lt; confirmation_callback_t &gt; co_create_webhook</definition>
        <argsstring>(const class webhook &amp;wh)</argsstring>
        <name>co_create_webhook</name>
        <param>
          <type>const class webhook &amp;</type>
          <declname>wh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cluster_coro_calls.h" line="2502" column="8" declfile="include/dpp/cluster_coro_calls.h" declline="2502" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="cluster__coro__calls_8h_1ae4cae7284dad36b64d7d315b99d8a19b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>async&lt; http_request_completion_t &gt;</type>
        <definition>async&lt; http_request_completion_t &gt; co_request</definition>
        <argsstring>(const std::string &amp;url, http_method method, const std::string &amp;postdata=&quot;&quot;, const std::string &amp;mimetype=&quot;text/plain&quot;, const std::multimap&lt; std::string, std::string &gt; &amp;headers={}, const std::string &amp;protocol=&quot;1.1&quot;, time_t request_timeout=5)</argsstring>
        <name>co_request</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type>http_method</type>
          <declname>method</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>postdata</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>mimetype</declname>
          <defval>&quot;text/plain&quot;</defval>
        </param>
        <param>
          <type>const std::multimap&lt; std::string, std::string &gt; &amp;</type>
          <declname>headers</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>protocol</declname>
          <defval>&quot;1.1&quot;</defval>
        </param>
        <param>
          <type>time_t</type>
          <declname>request_timeout</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cluster_coro_calls.h" line="2651" column="8" declfile="include/dpp/cluster_coro_calls.h" declline="2651" declcolumn="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dpp/cluster_coro_calls.h"/>
  </compounddef>
</doxygen>
