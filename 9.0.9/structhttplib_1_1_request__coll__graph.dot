digraph "httplib::Request"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="httplib::Request",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" body\nmethod\npath\nremote_addr\ntarget\nversion" ,fontname="Helvetica"];
  Node2 [label="std::string",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="std::basic_string\<\l Char \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" headers" ,fontname="Helvetica"];
  Node4 [label="std::multimap\< std\l::string, std::string,\l detail::ci \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node2 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements\nkeys" ,fontname="Helvetica"];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::string, std\l::string, detail::ci \>" ,fontname="Helvetica"];
  Node5 [label="std::multimap\< K, T \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node6 [label="K",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node7 [label="T",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" remote_port" ,fontname="Helvetica"];
  Node8 [label="int",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" params" ,fontname="Helvetica"];
  Node9 [label="std::multimap\< std\l::string, std::string \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node2 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements\nkeys" ,fontname="Helvetica"];
  Node5 -> Node9 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::string, std\l::string \>" ,fontname="Helvetica"];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" files" ,fontname="Helvetica"];
  Node10 [label="std::multimap\< std\l::string, MultipartFormData \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node2 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node11 [label="httplib::MultipartFormData",height=0.2,width=0.4,color="black",URL="$structhttplib_1_1_multipart_form_data.html",tooltip=" "];
  Node2 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" content\ncontent_type\nfilename\nname" ,fontname="Helvetica"];
  Node5 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::string, Multipart\lFormData \>" ,fontname="Helvetica"];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ranges" ,fontname="Helvetica"];
  Node12 [label="std::vector\< Range \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node13 [label="Range",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node14 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Range \>" ,fontname="Helvetica"];
  Node14 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node15 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" matches" ,fontname="Helvetica"];
  Node15 [label="smatch",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node16 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" response_handler" ,fontname="Helvetica"];
  Node16 [label="function\< bool(const\l Response &response)\>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node17 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" content_receiver" ,fontname="Helvetica"];
  Node17 [label="function\< bool(const\l char *data, size_t data\l_length, uint64_t offset,\l uint64_t total_length)\>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node18 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" progress" ,fontname="Helvetica"];
  Node18 [label="function\< bool(uint64\l_t current, uint64_t\l total)\>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" authorization_count\l_\ncontent_length\l_\nredirect_count_" ,fontname="Helvetica"];
  Node19 [label="size_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node20 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" content_provider_" ,fontname="Helvetica"];
  Node20 [label="function\< bool(size\l_t offset, size_t length,\l DataSink &sink)\>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node21 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" is_chunked_content\l_provider_" ,fontname="Helvetica"];
  Node21 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
}
