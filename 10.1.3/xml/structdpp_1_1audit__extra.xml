<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1audit__extra" kind="struct" language="C++" prot="public">
    <compoundname>dpp::audit_extra</compoundname>
    <includes local="no">auditlog.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1audit__extra_1affdebde09b496d47a29ed3db62ad89ec" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::audit_extra::application_id</definition>
        <argsstring></argsstring>
        <name>application_id</name>
        <briefdescription>
<para>ID of the app whose permissions were targeted. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="395" column="11" bodyfile="include/dpp/auditlog.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__extra_1a95a8254fd44139226dc8f50985b1c5dc" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::audit_extra::automod_rule_name</definition>
        <argsstring></argsstring>
        <name>automod_rule_name</name>
        <briefdescription>
<para>Name of the Auto Moderation rule that was triggered. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="345" column="13" bodyfile="include/dpp/auditlog.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__extra_1aa6e75002cfde8a9593689e88e1ed253c" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::audit_extra::automod_rule_trigger_type</definition>
        <argsstring></argsstring>
        <name>automod_rule_trigger_type</name>
        <briefdescription>
<para>Trigger type of the Auto Moderation rule that was triggered. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="350" column="13" bodyfile="include/dpp/auditlog.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__extra_1a9821254451dc82c5308243e44ee02ef3" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::audit_extra::channel_id</definition>
        <argsstring></argsstring>
        <name>channel_id</name>
        <briefdescription>
<para>Channel in which the entities were targeted. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="365" column="11" bodyfile="include/dpp/auditlog.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__extra_1a47d8e8609aa44431176494ea7adb86ed" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::audit_extra::count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <briefdescription>
<para>Number of entities that were targeted. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="375" column="13" bodyfile="include/dpp/auditlog.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__extra_1aae4e14638f648029aad67dbbab0300f1" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::audit_extra::delete_member_days</definition>
        <argsstring></argsstring>
        <name>delete_member_days</name>
        <briefdescription>
<para>Number of days after which inactive members were kicked. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="355" column="13" bodyfile="include/dpp/auditlog.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__extra_1a7b393b645a46875b2a2bc3b4232970dd" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::audit_extra::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>ID of the overwritten entity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="380" column="11" bodyfile="include/dpp/auditlog.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__extra_1a01c4162bf4f852e6202f60b196f7dae8" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::audit_extra::members_removed</definition>
        <argsstring></argsstring>
        <name>members_removed</name>
        <briefdescription>
<para>Number of members removed by the prune. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="360" column="13" bodyfile="include/dpp/auditlog.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__extra_1a7b3b7ab18bd801f36448568743498463" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::audit_extra::message_id</definition>
        <argsstring></argsstring>
        <name>message_id</name>
        <briefdescription>
<para>ID of the message that was targeted. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="370" column="11" bodyfile="include/dpp/auditlog.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__extra_1a3f9b69d1fada4e5ba0a488dded858288" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::audit_extra::role_name</definition>
        <argsstring></argsstring>
        <name>role_name</name>
        <briefdescription>
<para>Name of the role if type is &quot;0&quot; (not present if type is &quot;1&quot;). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="390" column="13" bodyfile="include/dpp/auditlog.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__extra_1ae6773d56dd102f899895079daa2c66a9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::audit_extra::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>Type of overwritten entity - &quot;0&quot; for &quot;role&quot; or &quot;1&quot; for &quot;member&quot;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="385" column="13" bodyfile="include/dpp/auditlog.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Extra information for an audit log entry. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>dpp::audit_extra</label>
        <link refid="structdpp_1_1audit__extra"/>
        <childnode refid="2" relation="usage">
          <edgelabel>automod_rule_name</edgelabel>
          <edgelabel>automod_rule_trigger_type</edgelabel>
          <edgelabel>count</edgelabel>
          <edgelabel>delete_member_days</edgelabel>
          <edgelabel>members_removed</edgelabel>
          <edgelabel>role_name</edgelabel>
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>application_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
          <edgelabel>id</edgelabel>
          <edgelabel>message_id</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>dpp::snowflake</label>
        <link refid="classdpp_1_1snowflake"/>
        <childnode refid="5" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/auditlog.h" line="341" column="1" bodyfile="include/dpp/auditlog.h" bodystart="341" bodyend="396"/>
    <listofallmembers>
      <member refid="structdpp_1_1audit__extra_1affdebde09b496d47a29ed3db62ad89ec" prot="public" virt="non-virtual"><scope>dpp::audit_extra</scope><name>application_id</name></member>
      <member refid="structdpp_1_1audit__extra_1a95a8254fd44139226dc8f50985b1c5dc" prot="public" virt="non-virtual"><scope>dpp::audit_extra</scope><name>automod_rule_name</name></member>
      <member refid="structdpp_1_1audit__extra_1aa6e75002cfde8a9593689e88e1ed253c" prot="public" virt="non-virtual"><scope>dpp::audit_extra</scope><name>automod_rule_trigger_type</name></member>
      <member refid="structdpp_1_1audit__extra_1a9821254451dc82c5308243e44ee02ef3" prot="public" virt="non-virtual"><scope>dpp::audit_extra</scope><name>channel_id</name></member>
      <member refid="structdpp_1_1audit__extra_1a47d8e8609aa44431176494ea7adb86ed" prot="public" virt="non-virtual"><scope>dpp::audit_extra</scope><name>count</name></member>
      <member refid="structdpp_1_1audit__extra_1aae4e14638f648029aad67dbbab0300f1" prot="public" virt="non-virtual"><scope>dpp::audit_extra</scope><name>delete_member_days</name></member>
      <member refid="structdpp_1_1audit__extra_1a7b393b645a46875b2a2bc3b4232970dd" prot="public" virt="non-virtual"><scope>dpp::audit_extra</scope><name>id</name></member>
      <member refid="structdpp_1_1audit__extra_1a01c4162bf4f852e6202f60b196f7dae8" prot="public" virt="non-virtual"><scope>dpp::audit_extra</scope><name>members_removed</name></member>
      <member refid="structdpp_1_1audit__extra_1a7b3b7ab18bd801f36448568743498463" prot="public" virt="non-virtual"><scope>dpp::audit_extra</scope><name>message_id</name></member>
      <member refid="structdpp_1_1audit__extra_1a3f9b69d1fada4e5ba0a488dded858288" prot="public" virt="non-virtual"><scope>dpp::audit_extra</scope><name>role_name</name></member>
      <member refid="structdpp_1_1audit__extra_1ae6773d56dd102f899895079daa2c66a9" prot="public" virt="non-virtual"><scope>dpp::audit_extra</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
