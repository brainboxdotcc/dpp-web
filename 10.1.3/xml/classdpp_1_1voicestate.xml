<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1voicestate" kind="class" language="C++" prot="public">
    <compoundname>dpp::voicestate</compoundname>
    <basecompoundref refid="structdpp_1_1json__interface" prot="public" virt="non-virtual">dpp::json_interface&lt; voicestate &gt;</basecompoundref>
    <includes local="no">voicestate.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classdpp_1_1voicestate_1a4e0266b7f1315426bc2ac3def6dd0dc5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct json_interface&lt; voicestate &gt;</definition>
        <argsstring></argsstring>
        <name>json_interface&lt; voicestate &gt;</name>
        <param>
          <type><ref refid="structdpp_1_1json__interface" kindref="compound">json_interface</ref>&lt; <ref refid="classdpp_1_1voicestate" kindref="compound">voicestate</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="177" column="28" bodyfile="include/dpp/voicestate.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1voicestate_1a0ea73d3fd39463142c315005321e28f5" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::voicestate::channel_id</definition>
        <argsstring></argsstring>
        <name>channel_id</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>The channel id this user is connected to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This may be empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="104" column="11" bodyfile="include/dpp/voicestate.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voicestate_1abf58f2ac3357bc012b7bf617309919c9" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dpp::voicestate::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Voice state flags from <ref refid="namespacedpp_1a6a7cc94290184616d0267d751f02d53f" kindref="member">dpp::voicestate_flags</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="119" column="8" bodyfile="include/dpp/voicestate.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voicestate_1ae7a837b367c89d55482d448a4a6eb702" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::voicestate::guild_id</definition>
        <argsstring></argsstring>
        <name>guild_id</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Optional: The guild id this voice state is for. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="97" column="11" bodyfile="include/dpp/voicestate.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voicestate_1a76c063d943a4aae66f15e03b018aeea8" prot="public" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t dpp::voicestate::request_to_speak</definition>
        <argsstring></argsstring>
        <name>request_to_speak</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>The time at which the user requested to speak. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If the user never requested to speak, this is 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="126" column="8" bodyfile="include/dpp/voicestate.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voicestate_1adda1e3192a8dbe103f5b5c29b29ca74b" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::voicestate::session_id</definition>
        <argsstring></argsstring>
        <name>session_id</name>
        <briefdescription>
<para>The session id for this voice state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="114" column="13" bodyfile="include/dpp/voicestate.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voicestate_1a2805d3a80083db939934bcc41c1b9f8e" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t dpp::voicestate::shard_id</definition>
        <argsstring></argsstring>
        <name>shard_id</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Owning shard. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="92" column="9" bodyfile="include/dpp/voicestate.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voicestate_1a2a56a68ec5590ac218711f72893013fd" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::voicestate::user_id</definition>
        <argsstring></argsstring>
        <name>user_id</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>The user id this voice state is for. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="109" column="11" bodyfile="include/dpp/voicestate.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdpp_1_1voicestate_1abc9e2a3f26e10ede0265850255ba2d10" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1voicestate" kindref="compound">voicestate</ref> &amp;</type>
        <definition>voicestate &amp; dpp::voicestate::fill_from_json_impl</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json_impl</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Fill voicestate object from json data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON data to fill from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>voicestate&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="86" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1voicestate_1a2cffc101e4bff3c2aa40f5efc9fee895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::voicestate::voicestate</definition>
        <argsstring>()</argsstring>
        <name>voicestate</name>
        <briefdescription>
<para>Construct a new voicestate object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voicestate_1ad71f9fced773219271db94a9f77712d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual dpp::voicestate::~voicestate</definition>
        <argsstring>()=default</argsstring>
        <name>~voicestate</name>
        <briefdescription>
<para>Destroy the voicestate object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="136" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::json_interface&lt; voicestate  &gt;::build_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>build_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to json string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>std::string Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="68" column="13" bodyfile="include/dpp/json_interface.h" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdpp_1_1voicestate" kindref="compound">voicestate</ref> &amp;</type>
        <definition>voicestate  &amp; dpp::json_interface&lt; voicestate  &gt;::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Convert object from nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T&amp; Reference to self for fluent calling </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="44" column="3" bodyfile="include/dpp/json_interface.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voicestate_1a307d3a8776385f6ab468e838c97099ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::voicestate::is_deaf</definition>
        <argsstring>() const</argsstring>
        <name>is_deaf</name>
        <briefdescription>
<para>Return true if the user is deafened by the server. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="141" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voicestate_1a5b42b2ae9e76fe86bdf73eac208d953d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::voicestate::is_mute</definition>
        <argsstring>() const</argsstring>
        <name>is_mute</name>
        <briefdescription>
<para>Return true if the user is muted by the server. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="146" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voicestate_1ac52f6bca0bf8feb50fc7c3ab9cdc57db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::voicestate::is_self_deaf</definition>
        <argsstring>() const</argsstring>
        <name>is_self_deaf</name>
        <briefdescription>
<para>Return true if user deafened themselves. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="156" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voicestate_1a1ade333534ab9fe0cb18485269ced203" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::voicestate::is_self_mute</definition>
        <argsstring>() const</argsstring>
        <name>is_self_mute</name>
        <briefdescription>
<para>Return true if user muted themselves. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="151" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voicestate_1a631921c8fd04d5b3c1989218b48ef4d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::voicestate::is_suppressed</definition>
        <argsstring>() const</argsstring>
        <name>is_suppressed</name>
        <briefdescription>
<para>Return true if user is suppressed. </para>
        </briefdescription>
        <detaileddescription>
<para>&quot;HELP HELP I&apos;M BEING SUPPRESSED!&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="173" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voicestate_1a5b0fa82d1d55249aeb96fd7119aac5c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::voicestate::self_stream</definition>
        <argsstring>() const</argsstring>
        <name>self_stream</name>
        <briefdescription>
<para>Return true if the user is streaming using &quot;Go Live&quot;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="161" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voicestate_1a6d2114f152b6170f039c096f8a200219" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::voicestate::self_video</definition>
        <argsstring>() const</argsstring>
        <name>self_video</name>
        <briefdescription>
<para>Return true if the user&apos;s camera is enabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="166" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto dpp::json_interface&lt; voicestate  &gt;::to_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>to_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>json Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="56" column="6" bodyfile="include/dpp/json_interface.h" bodystart="56" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents the voice state of a user on a guild These are stored in the <ref refid="classdpp_1_1guild" kindref="compound">dpp::guild</ref> object, and accessible there, or via <ref refid="classdpp_1_1channel_1a915cc4ba3ec7514a684315594255253a" kindref="member">dpp::channel::get_voice_members</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="1">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; voicestate &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; voicestate &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="5">
        <label>dpp::snowflake</label>
        <link refid="classdpp_1_1snowflake"/>
        <childnode refid="6" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>shard_id</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>channel_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>request_to_speak</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>int32_t</label>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; voicestate &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; voicestate &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="7">
        <label>std::string</label>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>time_t</label>
      </node>
      <node id="6">
        <label>uint64_t</label>
      </node>
      <node id="9">
        <label>uint8_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/voicestate.h" line="76" column="1" bodyfile="include/dpp/voicestate.h" bodystart="76" bodyend="174"/>
    <listofallmembers>
      <member refid="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>build_json</name></member>
      <member refid="classdpp_1_1voicestate_1a0ea73d3fd39463142c315005321e28f5" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>channel_id</name></member>
      <member refid="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1voicestate_1abc9e2a3f26e10ede0265850255ba2d10" prot="protected" virt="non-virtual"><scope>dpp::voicestate</scope><name>fill_from_json_impl</name></member>
      <member refid="classdpp_1_1voicestate_1abf58f2ac3357bc012b7bf617309919c9" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>flags</name></member>
      <member refid="classdpp_1_1voicestate_1ae7a837b367c89d55482d448a4a6eb702" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>guild_id</name></member>
      <member refid="classdpp_1_1voicestate_1a307d3a8776385f6ab468e838c97099ed" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>is_deaf</name></member>
      <member refid="classdpp_1_1voicestate_1a5b42b2ae9e76fe86bdf73eac208d953d" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>is_mute</name></member>
      <member refid="classdpp_1_1voicestate_1ac52f6bca0bf8feb50fc7c3ab9cdc57db" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>is_self_deaf</name></member>
      <member refid="classdpp_1_1voicestate_1a1ade333534ab9fe0cb18485269ced203" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>is_self_mute</name></member>
      <member refid="classdpp_1_1voicestate_1a631921c8fd04d5b3c1989218b48ef4d3" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>is_suppressed</name></member>
      <member refid="classdpp_1_1voicestate_1a4e0266b7f1315426bc2ac3def6dd0dc5" prot="protected" virt="non-virtual"><scope>dpp::voicestate</scope><name>json_interface&lt; voicestate &gt;</name></member>
      <member refid="classdpp_1_1voicestate_1a76c063d943a4aae66f15e03b018aeea8" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>request_to_speak</name></member>
      <member refid="classdpp_1_1voicestate_1a5b0fa82d1d55249aeb96fd7119aac5c2" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>self_stream</name></member>
      <member refid="classdpp_1_1voicestate_1a6d2114f152b6170f039c096f8a200219" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>self_video</name></member>
      <member refid="classdpp_1_1voicestate_1adda1e3192a8dbe103f5b5c29b29ca74b" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>session_id</name></member>
      <member refid="classdpp_1_1voicestate_1a2805d3a80083db939934bcc41c1b9f8e" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>shard_id</name></member>
      <member refid="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>to_json</name></member>
      <member refid="classdpp_1_1voicestate_1a2a56a68ec5590ac218711f72893013fd" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>user_id</name></member>
      <member refid="classdpp_1_1voicestate_1a2cffc101e4bff3c2aa40f5efc9fee895" prot="public" virt="non-virtual"><scope>dpp::voicestate</scope><name>voicestate</name></member>
      <member refid="classdpp_1_1voicestate_1ad71f9fced773219271db94a9f77712d6" prot="public" virt="virtual"><scope>dpp::voicestate</scope><name>~voicestate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
