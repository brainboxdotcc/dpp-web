digraph "dpp::sticker"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="dpp::sticker",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Represents stickers received in messages."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="dpp::managed",height=0.2,width=0.4,color="black",URL="$classdpp_1_1managed.html",tooltip="The managed class is the base class for various types that can be stored in a cache that are identifi..."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" id" ,fontname="Helvetica"];
  Node3 [label="uint64_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="dpp::json_interface\l\< sticker \>",height=0.2,width=0.4,color="black",URL="$structdpp_1_1json__interface.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< sticker \>" ,fontname="Helvetica"];
  Node5 [label="dpp::json_interface\< T \>",height=0.2,width=0.4,color="black",URL="$structdpp_1_1json__interface.html",tooltip="Represents an interface for an object that can optionally implement functions for converting to and f..."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" guild_id\npack_id" ,fontname="Helvetica"];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" asset\ndescription\nfilecontent\nfilename\nname\ntags" ,fontname="Helvetica"];
  Node6 [label="std::string",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="std::basic_string\<\l Char \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" type" ,fontname="Helvetica"];
  Node8 [label="sticker_type",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" format_type" ,fontname="Helvetica"];
  Node9 [label="sticker_format",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" available" ,fontname="Helvetica"];
  Node10 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" sticker_user" ,fontname="Helvetica"];
  Node11 [label="dpp::user",height=0.2,width=0.4,color="black",URL="$classdpp_1_1user.html",tooltip="Represents a user on discord. May or may not be a member of a dpp::guild."];
  Node2 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="dpp::json_interface\l\< user \>",height=0.2,width=0.4,color="black",URL="$structdpp_1_1json__interface.html",tooltip=" "];
  Node5 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< user \>" ,fontname="Helvetica"];
  Node6 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" username" ,fontname="Helvetica"];
  Node13 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" avatar" ,fontname="Helvetica"];
  Node13 [label="dpp::utility::iconhash",height=0.2,width=0.4,color="black",URL="$structdpp_1_1utility_1_1iconhash.html",tooltip="Store a 128 bit icon hash (profile picture, server icon etc) as a 128 bit binary value made of two ui..."];
  Node3 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" first\nsecond" ,fontname="Helvetica"];
  Node14 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" flags" ,fontname="Helvetica"];
  Node14 [label="uint32_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" discriminator" ,fontname="Helvetica"];
  Node15 [label="uint16_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node16 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" refcount" ,fontname="Helvetica"];
  Node16 [label="uint8_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node16 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" sort_value" ,fontname="Helvetica"];
}
