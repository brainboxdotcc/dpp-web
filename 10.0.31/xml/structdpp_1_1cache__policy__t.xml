<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1cache__policy__t" kind="struct" language="C++" prot="public">
    <compoundname>dpp::cache_policy_t</compoundname>
    <includes local="no">message.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1cache__policy__t_1a6e1cff39546655ace35c0ebb4e5e7574" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52" kindref="member">cache_policy_setting_t</ref></type>
        <definition>cache_policy_setting_t dpp::cache_policy_t::channel_policy</definition>
        <argsstring></argsstring>
        <name>channel_policy</name>
        <initializer>= <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" kindref="member">cp_aggressive</ref></initializer>
        <briefdescription>
<para>Caching policy for roles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1983" column="24" bodyfile="include/dpp/message.h" bodystart="1983" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1cache__policy__t_1af2691cd3cc93a264f9177f3d164f9546" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52" kindref="member">cache_policy_setting_t</ref></type>
        <definition>cache_policy_setting_t dpp::cache_policy_t::emoji_policy</definition>
        <argsstring></argsstring>
        <name>emoji_policy</name>
        <initializer>= <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" kindref="member">cp_aggressive</ref></initializer>
        <briefdescription>
<para>Caching policy for emojis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1973" column="24" bodyfile="include/dpp/message.h" bodystart="1973" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1cache__policy__t_1af0b33f068a1ef94c831be1eeddab233e" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52" kindref="member">cache_policy_setting_t</ref></type>
        <definition>cache_policy_setting_t dpp::cache_policy_t::guild_policy</definition>
        <argsstring></argsstring>
        <name>guild_policy</name>
        <initializer>= <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" kindref="member">cp_aggressive</ref></initializer>
        <briefdescription>
<para>Caching policy for roles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1988" column="24" bodyfile="include/dpp/message.h" bodystart="1988" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1cache__policy__t_1ab4068b588e7268978fd28299e6538739" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52" kindref="member">cache_policy_setting_t</ref></type>
        <definition>cache_policy_setting_t dpp::cache_policy_t::role_policy</definition>
        <argsstring></argsstring>
        <name>role_policy</name>
        <initializer>= <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" kindref="member">cp_aggressive</ref></initializer>
        <briefdescription>
<para>Caching policy for roles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1978" column="24" bodyfile="include/dpp/message.h" bodystart="1978" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1cache__policy__t_1af54025fb4062c038de9fa20d02101d36" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52" kindref="member">cache_policy_setting_t</ref></type>
        <definition>cache_policy_setting_t dpp::cache_policy_t::user_policy</definition>
        <argsstring></argsstring>
        <name>user_policy</name>
        <initializer>= <ref refid="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" kindref="member">cp_aggressive</ref></initializer>
        <briefdescription>
<para>Caching policy for users and guild members. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1968" column="24" bodyfile="include/dpp/message.h" bodystart="1968" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents the caching policy of the cluster. </para>
    </briefdescription>
    <detaileddescription>
<para>Channels and guilds are always cached as these caches are used internally by the library. The memory usage of these is minimal.</para>
<para>All default to &apos;aggressive&apos; which means to actively attempt to cache, going out of the way to fill the caches completely. On large bots this can take a LOT of RAM. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="1">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>channel_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>guild_policy</edgelabel>
          <edgelabel>role_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/dpp/message.h" line="1964" column="1" bodyfile="include/dpp/message.h" bodystart="1964" bodyend="1989"/>
    <listofallmembers>
      <member refid="structdpp_1_1cache__policy__t_1a6e1cff39546655ace35c0ebb4e5e7574" prot="public" virt="non-virtual"><scope>dpp::cache_policy_t</scope><name>channel_policy</name></member>
      <member refid="structdpp_1_1cache__policy__t_1af2691cd3cc93a264f9177f3d164f9546" prot="public" virt="non-virtual"><scope>dpp::cache_policy_t</scope><name>emoji_policy</name></member>
      <member refid="structdpp_1_1cache__policy__t_1af0b33f068a1ef94c831be1eeddab233e" prot="public" virt="non-virtual"><scope>dpp::cache_policy_t</scope><name>guild_policy</name></member>
      <member refid="structdpp_1_1cache__policy__t_1ab4068b588e7268978fd28299e6538739" prot="public" virt="non-virtual"><scope>dpp::cache_policy_t</scope><name>role_policy</name></member>
      <member refid="structdpp_1_1cache__policy__t_1af54025fb4062c038de9fa20d02101d36" prot="public" virt="non-virtual"><scope>dpp::cache_policy_t</scope><name>user_policy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
