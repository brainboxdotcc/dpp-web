<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1ssl__client" kind="class" language="C++" prot="public">
    <compoundname>dpp::ssl_client</compoundname>
    <derivedcompoundref refid="classdpp_1_1websocket__client" prot="public" virt="non-virtual">dpp::websocket_client</derivedcompoundref>
    <includes local="no">sslclient.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1ae0e5e0799448bf29506bfcc21168d3fa" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::ssl_client::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Input buffer received from openssl </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="52" column="13" bodyfile="include/dpp/sslclient.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1a1f9600d4fd902c74c6d8b748c359eecc" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::ssl_client::obuffer</definition>
        <argsstring></argsstring>
        <name>obuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Output buffer for sending to openssl </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="55" column="13" bodyfile="include/dpp/sslclient.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1a1486b3df6780a842552442a25634fcc9" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dpp::ssl_client::nonblocking</definition>
        <argsstring></argsstring>
        <name>nonblocking</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if in nonblocking mode. The socket switches to nonblocking mode once ReadLoop is called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="60" column="6" bodyfile="include/dpp/sslclient.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1a5d5d88470fa16ed75a3b3ee195265caf" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int dpp::ssl_client::sfd</definition>
        <argsstring></argsstring>
        <name>sfd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw file descriptor of connection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="63" column="5" bodyfile="include/dpp/sslclient.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1afd57f219d186fda6496e966910b771ad" prot="protected" static="no" mutable="no">
        <type>SSL *</type>
        <definition>SSL* dpp::ssl_client::ssl</definition>
        <argsstring></argsstring>
        <name>ssl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OpenSSL session </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="66" column="5" bodyfile="include/dpp/sslclient.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1a5378304f2669fe75092bdd452ae651ff" prot="protected" static="no" mutable="no">
        <type>SSL_CTX *</type>
        <definition>SSL_CTX* dpp::ssl_client::ctx</definition>
        <argsstring></argsstring>
        <name>ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OpenSSL context </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="69" column="9" bodyfile="include/dpp/sslclient.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1a5fc2e7836da5485216419bbf17e49428" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::ssl_client::cipher</definition>
        <argsstring></argsstring>
        <name>cipher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SSL cipher in use </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="72" column="13" bodyfile="include/dpp/sslclient.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1a61f0bbeefa25de686ac93887afa65895" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t dpp::ssl_client::last_tick</definition>
        <argsstring></argsstring>
        <name>last_tick</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For timers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="75" column="8" bodyfile="include/dpp/sslclient.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1a9aab17086711ef6777a01ee0974b5ce8" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::ssl_client::hostname</definition>
        <argsstring></argsstring>
        <name>hostname</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hostname connected to </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="78" column="13" bodyfile="include/dpp/sslclient.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1a53cda56d5d61e3371bd7be2424e7ff07" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::ssl_client::port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Port connected to </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="81" column="13" bodyfile="include/dpp/sslclient.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1a8022a8002cfc6f394016546168ef4085" prot="protected" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t dpp::ssl_client::bytes_out</definition>
        <argsstring></argsstring>
        <name>bytes_out</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bytes out </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="84" column="10" bodyfile="include/dpp/sslclient.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1a7b3bbb4e6a9e271c8f19736b36b71d5d" prot="protected" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t dpp::ssl_client::bytes_in</definition>
        <argsstring></argsstring>
        <name>bytes_in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bytes in </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="87" column="10" bodyfile="include/dpp/sslclient.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1ad2b75ebfaeb8bbe40741a1ad95e58c56" prot="public" static="no" mutable="no">
        <type>std::function&lt; int()&gt;</type>
        <definition>std::function&lt;int()&gt; dpp::ssl_client::custom_readable_fd</definition>
        <argsstring></argsstring>
        <name>custom_readable_fd</name>
        <briefdescription>
<para>Attaching an additional file descriptor to this function will send notifications when there is data to read. </para>
        </briefdescription>
        <detaileddescription>
<para>NOTE: Only hook this if you NEED it as it can increase CPU usage of the thread! Returning -1 means that you don&apos;t want to be notified. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="107" column="15" bodyfile="include/dpp/sslclient.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1a32a0f4e6e46da398d77b33e55e3d4ced" prot="public" static="no" mutable="no">
        <type>std::function&lt; int()&gt;</type>
        <definition>std::function&lt;int()&gt; dpp::ssl_client::custom_writeable_fd</definition>
        <argsstring></argsstring>
        <name>custom_writeable_fd</name>
        <briefdescription>
<para>Attaching an additional file descriptor to this function will send notifications when you are able to write to the socket. </para>
        </briefdescription>
        <detaileddescription>
<para>NOTE: Only hook this if you NEED it as it can increase CPU usage of the thread! You should toggle this to -1 when you do not have anything to write otherwise it&apos;ll keep triggering repeatedly (it is level triggered). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="116" column="15" bodyfile="include/dpp/sslclient.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1aaf27074007db73b13663ab985f2221e8" prot="public" static="no" mutable="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>std::function&lt;void()&gt; dpp::ssl_client::custom_readable_ready</definition>
        <argsstring></argsstring>
        <name>custom_readable_ready</name>
        <briefdescription>
<para>This event will be called when you can read from the custom fd. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="121" column="15" bodyfile="include/dpp/sslclient.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1ssl__client_1a5eac615119a5068c1634e3729752ddb6" prot="public" static="no" mutable="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>std::function&lt;void()&gt; dpp::ssl_client::custom_writeable_ready</definition>
        <argsstring></argsstring>
        <name>custom_writeable_ready</name>
        <briefdescription>
<para>This event will be called when you can write to a custom fd. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="126" column="15" bodyfile="include/dpp/sslclient.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdpp_1_1ssl__client_1a5028e720508fcb82533ce838dcea5f2e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void dpp::ssl_client::one_second_timer</definition>
        <argsstring>()</argsstring>
        <name>one_second_timer</name>
        <reimplementedby refid="classdpp_1_1discord__client_1ae020ca512624a8ef554344a796268936">one_second_timer</reimplementedby>
        <reimplementedby refid="classdpp_1_1discord__voice__client_1ad13b56d904850d77205924d43697f0e4">one_second_timer</reimplementedby>
        <reimplementedby refid="classdpp_1_1websocket__client_1a07ad6e7b32cfe760976d90409d5c47ae">one_second_timer</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called every second </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="90" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1ssl__client_1ab334fef99a32a008cf37a302dca46f7a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void dpp::ssl_client::Connect</definition>
        <argsstring>()</argsstring>
        <name>Connect</name>
        <reimplementedby refid="classdpp_1_1websocket__client_1ae34e803f32da59b03376ffbcfc64d1be">Connect</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start connection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="93" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1ssl__client_1aad4da6489c8f08030ca49c060a23740a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t dpp::ssl_client::get_bytes_out</definition>
        <argsstring>()</argsstring>
        <name>get_bytes_out</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get total bytes sent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="96" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1ssl__client_1afa5d5654ce0b631d07045088ef347418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t dpp::ssl_client::get_bytes_in</definition>
        <argsstring>()</argsstring>
        <name>get_bytes_in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get total bytes received </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="99" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1ssl__client_1a67656fe3b8717d784ff0bdf02290a4f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::ssl_client::ssl_client</definition>
        <argsstring>(const std::string &amp;_hostname, const std::string &amp;_port=&quot;443&quot;)</argsstring>
        <name>ssl_client</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_hostname</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_port</declname>
          <defval>&quot;443&quot;</defval>
        </param>
        <briefdescription>
<para>Connect to a specified host and port. Throws std::runtime_error on fatal error. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_hostname</parametername>
</parameternamelist>
<parameterdescription>
<para>The hostname to connect to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_port</parametername>
</parameternamelist>
<parameterdescription>
<para>the Port number to connect to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1ssl__client_1a17d4e73c74413a5a79a3859615f913e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::ssl_client::read_loop</definition>
        <argsstring>()</argsstring>
        <name>read_loop</name>
        <briefdescription>
<para>Nonblocking I/O loop. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="138" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1ssl__client_1a892b774dc3832123c829d4f3bcef693a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual dpp::ssl_client::~ssl_client</definition>
        <argsstring>()</argsstring>
        <name>~ssl_client</name>
        <briefdescription>
<para>Destroy the <ref refid="classdpp_1_1ssl__client" kindref="compound">ssl_client</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="143" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1ssl__client_1a0100372dd4c32d9faddaf69fffda7cfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool dpp::ssl_client::handle_buffer</definition>
        <argsstring>(std::string &amp;buffer)</argsstring>
        <name>handle_buffer</name>
        <reimplementedby refid="classdpp_1_1websocket__client_1aac9224e26db7b8589fcf9ba312752ca8">handle_buffer</reimplementedby>
        <param>
          <type>std::string &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Handle input from the input buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer content. Will be modified removing any processed front elements </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="149" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1ssl__client_1acdfd527a84156e918dc93420ed0d45b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void dpp::ssl_client::write</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>write</name>
        <reimplementedby refid="classdpp_1_1websocket__client_1a66ca960ed3dddc37340ecc5d32ff0e1c">write</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Write to the output buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be written to the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="155" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1ssl__client_1ae85df4b13fa64d701fb09f2bf44f100e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void dpp::ssl_client::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <reimplementedby refid="classdpp_1_1websocket__client_1a1f21cc8fce27ad72e9414dc9d0acd4d0">close</reimplementedby>
        <briefdescription>
<para>Close SSL connection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="160" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1ssl__client_1a945ccd04f376174a64c0cceffca3bbcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void dpp::ssl_client::log</definition>
        <argsstring>(dpp::loglevel severity, const std::string &amp;msg) const</argsstring>
        <name>log</name>
        <reimplementedby refid="classdpp_1_1discord__client_1a9a7beefc8a761885205fc1a8d0e0954f">log</reimplementedby>
        <param>
          <type><ref refid="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2" kindref="member">dpp::loglevel</ref></type>
          <declname>severity</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Log a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>severity</parametername>
</parameternamelist>
<parameterdescription>
<para>severity of log message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Log message to send </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="168" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements a simple non-blocking SSL stream client. </para>
    </briefdescription>
    <detaileddescription>
<para>Note that although the design is non-blocking the Run() method will execute in an infinite loop until the socket disconnects. This is intended to be run within a std::thread. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
      </node>
      <node id="2">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>SSL *</label>
      </node>
      <node id="7">
        <label>SSL_CTX *</label>
      </node>
      <node id="4">
        <label>bool</label>
      </node>
      <node id="1">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="2" relation="usage">
          <edgelabel>buffer</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>port</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
          <edgelabel>custom_writeable_ready</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>int</label>
      </node>
      <node id="3">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="10">
        <label>function&lt;</label>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>time_t</label>
      </node>
      <node id="9">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/sslclient.h" line="48" column="1" bodyfile="include/dpp/sslclient.h" bodystart="49" bodyend="169"/>
    <listofallmembers>
      <member refid="classdpp_1_1ssl__client_1ae0e5e0799448bf29506bfcc21168d3fa" prot="protected" virt="non-virtual"><scope>dpp::ssl_client</scope><name>buffer</name></member>
      <member refid="classdpp_1_1ssl__client_1a7b3bbb4e6a9e271c8f19736b36b71d5d" prot="protected" virt="non-virtual"><scope>dpp::ssl_client</scope><name>bytes_in</name></member>
      <member refid="classdpp_1_1ssl__client_1a8022a8002cfc6f394016546168ef4085" prot="protected" virt="non-virtual"><scope>dpp::ssl_client</scope><name>bytes_out</name></member>
      <member refid="classdpp_1_1ssl__client_1a5fc2e7836da5485216419bbf17e49428" prot="protected" virt="non-virtual"><scope>dpp::ssl_client</scope><name>cipher</name></member>
      <member refid="classdpp_1_1ssl__client_1ae85df4b13fa64d701fb09f2bf44f100e" prot="public" virt="virtual"><scope>dpp::ssl_client</scope><name>close</name></member>
      <member refid="classdpp_1_1ssl__client_1ab334fef99a32a008cf37a302dca46f7a" prot="protected" virt="virtual"><scope>dpp::ssl_client</scope><name>Connect</name></member>
      <member refid="classdpp_1_1ssl__client_1a5378304f2669fe75092bdd452ae651ff" prot="protected" virt="non-virtual"><scope>dpp::ssl_client</scope><name>ctx</name></member>
      <member refid="classdpp_1_1ssl__client_1ad2b75ebfaeb8bbe40741a1ad95e58c56" prot="public" virt="non-virtual"><scope>dpp::ssl_client</scope><name>custom_readable_fd</name></member>
      <member refid="classdpp_1_1ssl__client_1aaf27074007db73b13663ab985f2221e8" prot="public" virt="non-virtual"><scope>dpp::ssl_client</scope><name>custom_readable_ready</name></member>
      <member refid="classdpp_1_1ssl__client_1a32a0f4e6e46da398d77b33e55e3d4ced" prot="public" virt="non-virtual"><scope>dpp::ssl_client</scope><name>custom_writeable_fd</name></member>
      <member refid="classdpp_1_1ssl__client_1a5eac615119a5068c1634e3729752ddb6" prot="public" virt="non-virtual"><scope>dpp::ssl_client</scope><name>custom_writeable_ready</name></member>
      <member refid="classdpp_1_1ssl__client_1afa5d5654ce0b631d07045088ef347418" prot="public" virt="non-virtual"><scope>dpp::ssl_client</scope><name>get_bytes_in</name></member>
      <member refid="classdpp_1_1ssl__client_1aad4da6489c8f08030ca49c060a23740a" prot="public" virt="non-virtual"><scope>dpp::ssl_client</scope><name>get_bytes_out</name></member>
      <member refid="classdpp_1_1ssl__client_1a0100372dd4c32d9faddaf69fffda7cfc" prot="public" virt="virtual"><scope>dpp::ssl_client</scope><name>handle_buffer</name></member>
      <member refid="classdpp_1_1ssl__client_1a9aab17086711ef6777a01ee0974b5ce8" prot="protected" virt="non-virtual"><scope>dpp::ssl_client</scope><name>hostname</name></member>
      <member refid="classdpp_1_1ssl__client_1a61f0bbeefa25de686ac93887afa65895" prot="protected" virt="non-virtual"><scope>dpp::ssl_client</scope><name>last_tick</name></member>
      <member refid="classdpp_1_1ssl__client_1a945ccd04f376174a64c0cceffca3bbcd" prot="public" virt="virtual"><scope>dpp::ssl_client</scope><name>log</name></member>
      <member refid="classdpp_1_1ssl__client_1a1486b3df6780a842552442a25634fcc9" prot="protected" virt="non-virtual"><scope>dpp::ssl_client</scope><name>nonblocking</name></member>
      <member refid="classdpp_1_1ssl__client_1a1f9600d4fd902c74c6d8b748c359eecc" prot="protected" virt="non-virtual"><scope>dpp::ssl_client</scope><name>obuffer</name></member>
      <member refid="classdpp_1_1ssl__client_1a5028e720508fcb82533ce838dcea5f2e" prot="protected" virt="virtual"><scope>dpp::ssl_client</scope><name>one_second_timer</name></member>
      <member refid="classdpp_1_1ssl__client_1a53cda56d5d61e3371bd7be2424e7ff07" prot="protected" virt="non-virtual"><scope>dpp::ssl_client</scope><name>port</name></member>
      <member refid="classdpp_1_1ssl__client_1a17d4e73c74413a5a79a3859615f913e2" prot="public" virt="non-virtual"><scope>dpp::ssl_client</scope><name>read_loop</name></member>
      <member refid="classdpp_1_1ssl__client_1a5d5d88470fa16ed75a3b3ee195265caf" prot="protected" virt="non-virtual"><scope>dpp::ssl_client</scope><name>sfd</name></member>
      <member refid="classdpp_1_1ssl__client_1afd57f219d186fda6496e966910b771ad" prot="protected" virt="non-virtual"><scope>dpp::ssl_client</scope><name>ssl</name></member>
      <member refid="classdpp_1_1ssl__client_1a67656fe3b8717d784ff0bdf02290a4f3" prot="public" virt="non-virtual"><scope>dpp::ssl_client</scope><name>ssl_client</name></member>
      <member refid="classdpp_1_1ssl__client_1acdfd527a84156e918dc93420ed0d45b8" prot="public" virt="virtual"><scope>dpp::ssl_client</scope><name>write</name></member>
      <member refid="classdpp_1_1ssl__client_1a892b774dc3832123c829d4f3bcef693a" prot="public" virt="virtual"><scope>dpp::ssl_client</scope><name>~ssl_client</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
