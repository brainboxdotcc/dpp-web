<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1activity" kind="class" language="C++" prot="public">
    <compoundname>dpp::activity</compoundname>
    <includes local="no">presence.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1activity_1a1bc7b3fbd7cbf6ef7d520ef80ca223b1" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::activity::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Name of ativity e.g. &quot;Fortnite&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="135" column="13" bodyfile="include/dpp/presence.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1activity_1a6314c58d23a4301b3d7dabc91e472666" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::activity::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>State of activity. e.g. &quot;Waiting in lobby&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="139" column="13" bodyfile="include/dpp/presence.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1activity_1ad1adda3efd20156e122a238c32fb58c6" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::activity::url</definition>
        <argsstring></argsstring>
        <name>url</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>URL. Only applicable for certain sites such a YouTube Alias: details </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="144" column="13" bodyfile="include/dpp/presence.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1activity_1aa796b39d22fb9e5083c820b6803285ba" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2" kindref="member">activity_type</ref></type>
        <definition>activity_type dpp::activity::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Activity type </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="147" column="15" bodyfile="include/dpp/presence.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1activity_1a0f393e44d64caee04effbd9821f13635" prot="public" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t dpp::activity::created_at</definition>
        <argsstring></argsstring>
        <name>created_at</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Time activity was created </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="150" column="8" bodyfile="include/dpp/presence.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1activity_1a3ab31f2d396e1c16e3f5a2036a683c9f" prot="public" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t dpp::activity::start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start time. e.g. when game was started </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="153" column="8" bodyfile="include/dpp/presence.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1activity_1a54cf821d1e457ca1834e53a7bf8de774" prot="public" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t dpp::activity::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>End time, e.g. for songs on spotify </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="156" column="8" bodyfile="include/dpp/presence.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1activity_1aba3ef035ea27dde96a5d45a97a80a29b" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::activity::application_id</definition>
        <argsstring></argsstring>
        <name>application_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creating application (e.g. a linked account on the user&apos;s client) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="159" column="11" bodyfile="include/dpp/presence.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1activity_1a6bd675ea3efb05b3d3906f1df87fd5c8" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dpp::activity::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flags bitmask from activity_flags </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="162" column="9" bodyfile="include/dpp/presence.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1activity_1af8879258ef30113d205348fad6f5d2b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::activity::activity</definition>
        <argsstring>()=default</argsstring>
        <name>activity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1activity_1a05dd85de62a60b6dc2dbce16583f8be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::activity::activity</definition>
        <argsstring>(const activity_type typ, const std::string &amp;nam, const std::string &amp;stat, const std::string &amp;url_)</argsstring>
        <name>activity</name>
        <param>
          <type>const <ref refid="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2" kindref="member">activity_type</ref></type>
          <declname>typ</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>nam</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>stat</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>url_</declname>
        </param>
        <briefdescription>
<para>Construct a new activity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nam</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stat</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url_</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="174" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An activity is a representation of what a user is doing. It might be a game, or a website, or a movie. Whatever. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>activity_type</label>
      </node>
      <node id="1">
        <label>dpp::activity</label>
        <link refid="classdpp_1_1activity"/>
        <childnode refid="2" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>state</edgelabel>
          <edgelabel>url</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>created_at</edgelabel>
          <edgelabel>end</edgelabel>
          <edgelabel>start</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>time_t</label>
      </node>
      <node id="6">
        <label>uint64_t</label>
      </node>
      <node id="7">
        <label>uint8_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/presence.h" line="130" column="1" bodyfile="include/dpp/presence.h" bodystart="130" bodyend="175"/>
    <listofallmembers>
      <member refid="classdpp_1_1activity_1af8879258ef30113d205348fad6f5d2b8" prot="public" virt="non-virtual"><scope>dpp::activity</scope><name>activity</name></member>
      <member refid="classdpp_1_1activity_1a05dd85de62a60b6dc2dbce16583f8be4" prot="public" virt="non-virtual"><scope>dpp::activity</scope><name>activity</name></member>
      <member refid="classdpp_1_1activity_1aba3ef035ea27dde96a5d45a97a80a29b" prot="public" virt="non-virtual"><scope>dpp::activity</scope><name>application_id</name></member>
      <member refid="classdpp_1_1activity_1a0f393e44d64caee04effbd9821f13635" prot="public" virt="non-virtual"><scope>dpp::activity</scope><name>created_at</name></member>
      <member refid="classdpp_1_1activity_1a54cf821d1e457ca1834e53a7bf8de774" prot="public" virt="non-virtual"><scope>dpp::activity</scope><name>end</name></member>
      <member refid="classdpp_1_1activity_1a6bd675ea3efb05b3d3906f1df87fd5c8" prot="public" virt="non-virtual"><scope>dpp::activity</scope><name>flags</name></member>
      <member refid="classdpp_1_1activity_1a1bc7b3fbd7cbf6ef7d520ef80ca223b1" prot="public" virt="non-virtual"><scope>dpp::activity</scope><name>name</name></member>
      <member refid="classdpp_1_1activity_1a3ab31f2d396e1c16e3f5a2036a683c9f" prot="public" virt="non-virtual"><scope>dpp::activity</scope><name>start</name></member>
      <member refid="classdpp_1_1activity_1a6314c58d23a4301b3d7dabc91e472666" prot="public" virt="non-virtual"><scope>dpp::activity</scope><name>state</name></member>
      <member refid="classdpp_1_1activity_1aa796b39d22fb9e5083c820b6803285ba" prot="public" virt="non-virtual"><scope>dpp::activity</scope><name>type</name></member>
      <member refid="classdpp_1_1activity_1ad1adda3efd20156e122a238c32fb58c6" prot="public" virt="non-virtual"><scope>dpp::activity</scope><name>url</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
