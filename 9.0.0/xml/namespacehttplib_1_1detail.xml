<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="namespacehttplib_1_1detail" kind="namespace" language="C++">
    <compoundname>httplib::detail</compoundname>
    <innerclass refid="structhttplib_1_1detail_1_1ci" prot="public">httplib::detail::ci</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacehttplib_1_1detail_1a5c881a9e1290dee8ec75fff73976bbdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;!std::is_array&lt; T &gt;::value, std::unique_ptr&lt; T &gt; &gt;::type</type>
        <definition>std::enable_if&lt;!std::is_array&lt; T &gt;::value, std::unique_ptr&lt; T &gt; &gt;::type httplib::detail::make_unique</definition>
        <argsstring>(Args &amp;&amp;...args)</argsstring>
        <name>make_unique</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="269" column="1" bodyfile="include/dpp/httplib.h" bodystart="269" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="namespacehttplib_1_1detail_1aad476144b9f04e958db83514b8b130ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_array&lt; T &gt;::value, std::unique_ptr&lt; T &gt; &gt;::type</type>
        <definition>std::enable_if&lt; std::is_array&lt; T &gt;::value, std::unique_ptr&lt; T &gt; &gt;::type httplib::detail::make_unique</definition>
        <argsstring>(std::size_t n)</argsstring>
        <name>make_unique</name>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="275" column="1" bodyfile="include/dpp/httplib.h" bodystart="275" bodyend="278"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dpp/httplib.h" line="257" column="1"/>
  </compounddef>
</doxygen>
