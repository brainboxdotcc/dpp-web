<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1interaction__response" kind="struct" language="C++" prot="public">
    <compoundname>dpp::interaction_response</compoundname>
    <includes local="no">slashcommand.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1interaction__response_1a7c06a118113d431b3725b70e12d92f19" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a83479ddaa45166def7719d5511b09d02" kindref="member">interaction_response_type</ref></type>
        <definition>interaction_response_type dpp::interaction_response::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>Response type from <ref refid="namespacedpp_1a83479ddaa45166def7719d5511b09d02" kindref="member">dpp::interaction_response_type</ref>. Should be one of ir_pong, ir_channel_message_with_source, or ir_deferred_channel_message_with_source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="182" column="27" bodyfile="include/dpp/slashcommand.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1interaction__response_1afa292ebb598e2ecbb1d8eb089f415493" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structdpp_1_1message" kindref="compound">message</ref> *</type>
        <definition>struct message* dpp::interaction_response::msg</definition>
        <argsstring></argsstring>
        <name>msg</name>
        <briefdescription>
<para>A message object. This pointer is always valid while the containing <ref refid="structdpp_1_1interaction__response" kindref="compound">interaction_response</ref> exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="188" column="15" bodyfile="include/dpp/slashcommand.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1interaction__response_1a074094acbb739670f92520011cdcff09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::interaction_response::interaction_response</definition>
        <argsstring>()</argsstring>
        <name>interaction_response</name>
        <briefdescription>
<para>Construct a new interaction response object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="193" column="1" bodyfile="src/dpp/slashcommand.cpp" bodystart="297" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1interaction__response_1a50e33b74f32d9e100db207c1ae5f3b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::interaction_response::interaction_response</definition>
        <argsstring>(interaction_response_type t, const struct message &amp;m)</argsstring>
        <name>interaction_response</name>
        <param>
          <type><ref refid="namespacedpp_1a83479ddaa45166def7719d5511b09d02" kindref="member">interaction_response_type</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const struct <ref refid="structdpp_1_1message" kindref="compound">message</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Construct a new interaction response object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of reply </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Message to reply with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1interaction__response_1ac7d7ddd127b1510ddfd2cb4a543699bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1interaction__response" kindref="compound">interaction_response</ref> &amp;</type>
        <definition>interaction_response &amp; dpp::interaction_response::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Fill object properties from JSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON to fill from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structdpp_1_1interaction__response" kindref="compound">interaction_response</ref>&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="209" column="22" bodyfile="src/dpp/slashcommand.cpp" bodystart="310" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1interaction__response_1ac0b038fcda6f46f0b391d32cac1b3df5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::interaction_response::build_json</definition>
        <argsstring>() const</argsstring>
        <name>build_json</name>
        <briefdescription>
<para>Build a json string for this object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::string JSON string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="216" column="13" bodyfile="src/dpp/slashcommand.cpp" bodystart="318" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1interaction__response_1a314950e3ab3b3938a0b9493492d334f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::interaction_response::~interaction_response</definition>
        <argsstring>()</argsstring>
        <name>~interaction_response</name>
        <briefdescription>
<para>Destroy the interaction response object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="221" column="1" bodyfile="src/dpp/slashcommand.cpp" bodystart="301" bodyend="303"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A response to an interaction, used to reply to a command and initiate a message, which can be hidden from others (ephemeral) or visible to all. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="structdpp_1_1interaction__response" kindref="compound">dpp::interaction_response</ref> object wraps a <ref refid="structdpp_1_1message" kindref="compound">dpp::message</ref> object. To set the message as &apos;ephemeral&apos; (e.g. only the command issuer can see it) you should add the <ref refid="namespacedpp_1a0157b2de9cc3cf2f819b8e4d969f84a8a31f151a1f4b4763df16059ff4d88aeaf" kindref="member">dpp::m_ephemeral</ref> flag to the <ref refid="structdpp_1_1message_1a16fca6ff4595e0fcab2305205eb54626" kindref="member">dpp::message::flags</ref> field. e.g.:</para>
<para><computeroutput>mymessage.flags |= <ref refid="namespacedpp_1a0157b2de9cc3cf2f819b8e4d969f84a8a31f151a1f4b4763df16059ff4d88aeaf" kindref="member">dpp::m_ephemeral</ref>;</computeroutput> </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="16">
        <label>bool</label>
      </node>
      <node id="13">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="7" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>guild_id</edgelabel>
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dpp::interaction_response</label>
        <link refid="structdpp_1_1interaction__response"/>
        <childnode refid="2" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>msg</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="4" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>dpp::message</label>
        <link refid="structdpp_1_1message"/>
        <childnode refid="4" relation="usage">
          <edgelabel>channel_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>id</edgelabel>
          <edgelabel>webhook_id</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>author</edgelabel>
          <edgelabel>self_author</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>member</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>content</edgelabel>
          <edgelabel>filecontent</edgelabel>
          <edgelabel>filename</edgelabel>
          <edgelabel>nonce</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>attachments</edgelabel>
          <edgelabel>components</edgelabel>
          <edgelabel>embeds</edgelabel>
          <edgelabel>mention_channels</edgelabel>
          <edgelabel>mention_roles</edgelabel>
          <edgelabel>mentions</edgelabel>
          <edgelabel>reactions</edgelabel>
          <edgelabel>stickers</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>edited</edgelabel>
          <edgelabel>sent</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>mention_everyone</edgelabel>
          <edgelabel>pinned</edgelabel>
          <edgelabel>tts</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>message_reference</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>allowed_mentions</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>dpp::message::allowed_ref</label>
        <link refid="structdpp_1_1message_1_1allowed__ref"/>
        <childnode refid="16" relation="usage">
          <edgelabel>parse_everyone</edgelabel>
          <edgelabel>parse_roles</edgelabel>
          <edgelabel>parse_users</edgelabel>
          <edgelabel>replied_user</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>users</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>dpp::message::message_ref</label>
        <link refid="structdpp_1_1message_1_1message__ref"/>
        <childnode refid="4" relation="usage">
          <edgelabel>channel_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>message_id</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>fail_if_not_exists</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="4" relation="usage">
          <edgelabel>first</edgelabel>
          <edgelabel>second</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>interaction_response_type</label>
      </node>
      <node id="8">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="7">
        <label>std::string</label>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>vector&lt;</label>
      </node>
      <node id="15">
        <label>time_t</label>
      </node>
      <node id="9">
        <label>uint16_t</label>
      </node>
      <node id="11">
        <label>uint32_t</label>
      </node>
      <node id="4">
        <label>uint64_t</label>
      </node>
      <node id="12">
        <label>uint8_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/slashcommand.h" line="175" column="1" bodyfile="include/dpp/slashcommand.h" bodystart="175" bodyend="223"/>
    <listofallmembers>
      <member refid="structdpp_1_1interaction__response_1ac0b038fcda6f46f0b391d32cac1b3df5" prot="public" virt="non-virtual"><scope>dpp::interaction_response</scope><name>build_json</name></member>
      <member refid="structdpp_1_1interaction__response_1ac7d7ddd127b1510ddfd2cb4a543699bb" prot="public" virt="non-virtual"><scope>dpp::interaction_response</scope><name>fill_from_json</name></member>
      <member refid="structdpp_1_1interaction__response_1a074094acbb739670f92520011cdcff09" prot="public" virt="non-virtual"><scope>dpp::interaction_response</scope><name>interaction_response</name></member>
      <member refid="structdpp_1_1interaction__response_1a50e33b74f32d9e100db207c1ae5f3b9c" prot="public" virt="non-virtual"><scope>dpp::interaction_response</scope><name>interaction_response</name></member>
      <member refid="structdpp_1_1interaction__response_1afa292ebb598e2ecbb1d8eb089f415493" prot="public" virt="non-virtual"><scope>dpp::interaction_response</scope><name>msg</name></member>
      <member refid="structdpp_1_1interaction__response_1a7c06a118113d431b3725b70e12d92f19" prot="public" virt="non-virtual"><scope>dpp::interaction_response</scope><name>type</name></member>
      <member refid="structdpp_1_1interaction__response_1a314950e3ab3b3938a0b9493492d334f5" prot="public" virt="non-virtual"><scope>dpp::interaction_response</scope><name>~interaction_response</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
