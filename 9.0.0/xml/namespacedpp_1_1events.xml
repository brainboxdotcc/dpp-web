<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="namespacedpp_1_1events" kind="namespace" language="C++">
    <compoundname>dpp::events</compoundname>
    <innerclass refid="classdpp_1_1events_1_1application__command__create" prot="public">dpp::events::application_command_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1application__command__delete" prot="public">dpp::events::application_command_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1application__command__update" prot="public">dpp::events::application_command_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1channel__create" prot="public">dpp::events::channel_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1channel__delete" prot="public">dpp::events::channel_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1channel__pins__update" prot="public">dpp::events::channel_pins_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1channel__update" prot="public">dpp::events::channel_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1event" prot="public">dpp::events::event</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__ban__add" prot="public">dpp::events::guild_ban_add</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__ban__remove" prot="public">dpp::events::guild_ban_remove</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__create" prot="public">dpp::events::guild_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__delete" prot="public">dpp::events::guild_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__emojis__update" prot="public">dpp::events::guild_emojis_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__integrations__update" prot="public">dpp::events::guild_integrations_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__join__request__delete" prot="public">dpp::events::guild_join_request_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__member__add" prot="public">dpp::events::guild_member_add</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__member__remove" prot="public">dpp::events::guild_member_remove</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__member__update" prot="public">dpp::events::guild_member_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__members__chunk" prot="public">dpp::events::guild_members_chunk</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__role__create" prot="public">dpp::events::guild_role_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__role__delete" prot="public">dpp::events::guild_role_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__role__update" prot="public">dpp::events::guild_role_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__scheduled__event__create" prot="public">dpp::events::guild_scheduled_event_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__scheduled__event__delete" prot="public">dpp::events::guild_scheduled_event_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__scheduled__event__update" prot="public">dpp::events::guild_scheduled_event_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__scheduled__event__user__add" prot="public">dpp::events::guild_scheduled_event_user_add</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__scheduled__event__user__remove" prot="public">dpp::events::guild_scheduled_event_user_remove</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__stickers__update" prot="public">dpp::events::guild_stickers_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__update" prot="public">dpp::events::guild_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1integration__create" prot="public">dpp::events::integration_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1integration__delete" prot="public">dpp::events::integration_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1integration__update" prot="public">dpp::events::integration_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1interaction__create" prot="public">dpp::events::interaction_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1invite__create" prot="public">dpp::events::invite_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1invite__delete" prot="public">dpp::events::invite_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1logger" prot="public">dpp::events::logger</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__create" prot="public">dpp::events::message_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__delete" prot="public">dpp::events::message_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__delete__bulk" prot="public">dpp::events::message_delete_bulk</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__reaction__add" prot="public">dpp::events::message_reaction_add</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__reaction__remove" prot="public">dpp::events::message_reaction_remove</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__reaction__remove__all" prot="public">dpp::events::message_reaction_remove_all</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__reaction__remove__emoji" prot="public">dpp::events::message_reaction_remove_emoji</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__update" prot="public">dpp::events::message_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1presence__update" prot="public">dpp::events::presence_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1ready" prot="public">dpp::events::ready</innerclass>
    <innerclass refid="classdpp_1_1events_1_1resumed" prot="public">dpp::events::resumed</innerclass>
    <innerclass refid="classdpp_1_1events_1_1stage__instance__create" prot="public">dpp::events::stage_instance_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1stage__instance__delete" prot="public">dpp::events::stage_instance_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1stage__instance__update" prot="public">dpp::events::stage_instance_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1thread__create" prot="public">dpp::events::thread_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1thread__delete" prot="public">dpp::events::thread_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1thread__list__sync" prot="public">dpp::events::thread_list_sync</innerclass>
    <innerclass refid="classdpp_1_1events_1_1thread__member__update" prot="public">dpp::events::thread_member_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1thread__members__update" prot="public">dpp::events::thread_members_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1thread__update" prot="public">dpp::events::thread_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1typing__start" prot="public">dpp::events::typing_start</innerclass>
    <innerclass refid="classdpp_1_1events_1_1user__update" prot="public">dpp::events::user_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1voice__server__update" prot="public">dpp::events::voice_server_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1voice__state__update" prot="public">dpp::events::voice_state_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1webhooks__update" prot="public">dpp::events::webhooks_update</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacedpp_1_1events_1abb48b619aaa302ed2ab79d152146902e" prot="public" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex dpp::events::protect_the_loot</definition>
        <argsstring></argsstring>
        <name>protect_the_loot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/events/ready.cpp" line="39" column="12" bodyfile="src/dpp/events/ready.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The events namespace holds the internal event handlers for each websocket event. These are handled internally and also dispatched to the user code if the event is hooked. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/dpp/events/application_command_create.cpp" line="34" column="13"/>
  </compounddef>
</doxygen>
