<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1invite" kind="class" language="C++" prot="public">
    <compoundname>dpp::invite</compoundname>
    <includes local="no">invite.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1invite_1a26f76de18e3f4d24574d49ec96163170" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::invite::code</definition>
        <argsstring></argsstring>
        <name>code</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Invite code </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="35" column="13" bodyfile="include/dpp/invite.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1invite_1a3adbf1eb0e895b46bee120a1d4c24ab0" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::invite::guild_id</definition>
        <argsstring></argsstring>
        <name>guild_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Guild for the invite </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="38" column="11" bodyfile="include/dpp/invite.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1invite_1aedc01d96281305a15b3d23a994927a5c" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::invite::channel_id</definition>
        <argsstring></argsstring>
        <name>channel_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Channel id for invite </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="41" column="11" bodyfile="include/dpp/invite.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1invite_1a6142074754432a855a7e37d731a52f88" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::invite::inviter_id</definition>
        <argsstring></argsstring>
        <name>inviter_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>User ID of invite creator </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="44" column="11" bodyfile="include/dpp/invite.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1invite_1ad9a3073a99b276032dce0e850b21a955" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::invite::target_user_id</definition>
        <argsstring></argsstring>
        <name>target_user_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Target user ID of invite, for invites sent via DM </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="47" column="11" bodyfile="include/dpp/invite.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1invite_1aaaf04b46e869c2f365051c81fd06dcf2" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dpp::invite::target_user_type</definition>
        <argsstring></argsstring>
        <name>target_user_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Target user type (generally this is always 1, &quot;stream&quot;) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="50" column="9" bodyfile="include/dpp/invite.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1invite_1a76dac8c741c2315e6be8733d12856b43" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dpp::invite::approximate_presence_count</definition>
        <argsstring></argsstring>
        <name>approximate_presence_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Approximate number of online users </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="53" column="10" bodyfile="include/dpp/invite.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1invite_1a1eeea3785ede65e9a93640352674a6c3" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dpp::invite::approximate_member_count</definition>
        <argsstring></argsstring>
        <name>approximate_member_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Approximate total users online and offline </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="56" column="10" bodyfile="include/dpp/invite.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1invite_1af48b1a919db49531f09a01f8e8115f64" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dpp::invite::max_age</definition>
        <argsstring></argsstring>
        <name>max_age</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum age of invite </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="59" column="10" bodyfile="include/dpp/invite.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1invite_1a942cafe78963747660ed5309f6747787" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dpp::invite::max_uses</definition>
        <argsstring></argsstring>
        <name>max_uses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of uses </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="62" column="10" bodyfile="include/dpp/invite.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1invite_1a3cbbaea6f39490617d8e6b2e452a4db5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dpp::invite::temporary</definition>
        <argsstring></argsstring>
        <name>temporary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if a temporary invite which grants access for a limited time </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="65" column="6" bodyfile="include/dpp/invite.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1invite_1a4d933ea3a2dc9a442ff711c63339bb1d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dpp::invite::unique</definition>
        <argsstring></argsstring>
        <name>unique</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if this invite should not replace or &quot;attach to&quot; similar invites </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="68" column="6" bodyfile="include/dpp/invite.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1invite_1ad3c1ed34b2256dcbf2dce82436071f8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::invite::invite</definition>
        <argsstring>()</argsstring>
        <name>invite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="72" column="1" bodyfile="src/dpp/invite.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1invite_1a93e926569d8c6df52006c07c427f1601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::invite::~invite</definition>
        <argsstring>()</argsstring>
        <name>~invite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="76" column="1" bodyfile="src/dpp/invite.cpp" bodystart="33" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1invite_1a1b2060938ed618edb951114537269c14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1invite" kindref="compound">invite</ref> &amp;</type>
        <definition>invite &amp; dpp::invite::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read class values from json object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>A json object to read from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="82" column="8" bodyfile="src/dpp/invite.cpp" bodystart="37" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1invite_1ab2efea5e28b135bf39a6a65fac1a02ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::invite::build_json</definition>
        <argsstring>() const</argsstring>
        <name>build_json</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build JSON from this object. <simplesect kind="return"><para>The JSON text of the invite </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="87" column="13" bodyfile="src/dpp/invite.cpp" bodystart="53" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an invite to a discord guild or channel. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="7">
        <label>bool</label>
      </node>
      <node id="1">
        <label>dpp::invite</label>
        <link refid="classdpp_1_1invite"/>
        <childnode refid="2" relation="usage">
          <edgelabel>code</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>channel_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>inviter_id</edgelabel>
          <edgelabel>target_user_id</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>target_user_type</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>approximate_member_count</edgelabel>
          <edgelabel>approximate_presence_count</edgelabel>
          <edgelabel>max_age</edgelabel>
          <edgelabel>max_uses</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>temporary</edgelabel>
          <edgelabel>unique</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>uint32_t</label>
      </node>
      <node id="4">
        <label>uint64_t</label>
      </node>
      <node id="5">
        <label>uint8_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/invite.h" line="31" column="1" bodyfile="include/dpp/invite.h" bodystart="31" bodyend="89"/>
    <listofallmembers>
      <member refid="classdpp_1_1invite_1a1eeea3785ede65e9a93640352674a6c3" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>approximate_member_count</name></member>
      <member refid="classdpp_1_1invite_1a76dac8c741c2315e6be8733d12856b43" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>approximate_presence_count</name></member>
      <member refid="classdpp_1_1invite_1ab2efea5e28b135bf39a6a65fac1a02ca" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>build_json</name></member>
      <member refid="classdpp_1_1invite_1aedc01d96281305a15b3d23a994927a5c" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>channel_id</name></member>
      <member refid="classdpp_1_1invite_1a26f76de18e3f4d24574d49ec96163170" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>code</name></member>
      <member refid="classdpp_1_1invite_1a1b2060938ed618edb951114537269c14" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1invite_1a3adbf1eb0e895b46bee120a1d4c24ab0" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>guild_id</name></member>
      <member refid="classdpp_1_1invite_1ad3c1ed34b2256dcbf2dce82436071f8b" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>invite</name></member>
      <member refid="classdpp_1_1invite_1a6142074754432a855a7e37d731a52f88" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>inviter_id</name></member>
      <member refid="classdpp_1_1invite_1af48b1a919db49531f09a01f8e8115f64" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>max_age</name></member>
      <member refid="classdpp_1_1invite_1a942cafe78963747660ed5309f6747787" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>max_uses</name></member>
      <member refid="classdpp_1_1invite_1ad9a3073a99b276032dce0e850b21a955" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>target_user_id</name></member>
      <member refid="classdpp_1_1invite_1aaaf04b46e869c2f365051c81fd06dcf2" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>target_user_type</name></member>
      <member refid="classdpp_1_1invite_1a3cbbaea6f39490617d8e6b2e452a4db5" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>temporary</name></member>
      <member refid="classdpp_1_1invite_1a4d933ea3a2dc9a442ff711c63339bb1d" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>unique</name></member>
      <member refid="classdpp_1_1invite_1a93e926569d8c6df52006c07c427f1601" prot="public" virt="non-virtual"><scope>dpp::invite</scope><name>~invite</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
