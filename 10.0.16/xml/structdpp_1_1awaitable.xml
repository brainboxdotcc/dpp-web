<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1awaitable" kind="struct" language="C++" prot="public">
    <compoundname>dpp::awaitable</compoundname>
    <includes local="no">coro.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1awaitable_1af0925610441138d6a14436e7f2d0967c" prot="public" static="no" mutable="no">
        <type><ref refid="structdpp_1_1promise" kindref="compound">promise</ref> *</type>
        <definition>promise* dpp::awaitable&lt; T &gt;::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro.h" line="33" column="9" bodyfile="include/dpp/coro.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1awaitable_1a8169c6a6ff27e480c5a21ba16c90f4b4" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1cluster" kindref="compound">cluster</ref> *</type>
        <definition>cluster* dpp::awaitable&lt; T &gt;::bot</definition>
        <argsstring></argsstring>
        <name>bot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro.h" line="34" column="9" bodyfile="include/dpp/coro.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1awaitable_1a62fd1e7f048b5909f47553ba6605ef63" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T dpp::awaitable&lt; T &gt;::api_req</definition>
        <argsstring></argsstring>
        <name>api_req</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro.h" line="35" column="3" bodyfile="include/dpp/coro.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1awaitable_1a4e460170b9be9a970c63e54cf98a92c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dpp::awaitable&lt; T &gt;::awaitable</definition>
        <argsstring>(cluster *cl, T api_call)</argsstring>
        <name>awaitable</name>
        <param>
          <type><ref refid="classdpp_1_1cluster" kindref="compound">cluster</ref> *</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>T</type>
          <declname>api_call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro.h" line="36" column="1" bodyfile="include/dpp/coro.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1awaitable_1a8979bd87023b643a023823b07a973640" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto dpp::awaitable&lt; T &gt;::await_ready</definition>
        <argsstring>() noexcept</argsstring>
        <name>await_ready</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro.h" line="37" column="6" bodyfile="include/dpp/coro.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1awaitable_1ac5592ff1e76d87ed6eb48318bfa86a3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto dpp::awaitable&lt; T &gt;::await_suspend</definition>
        <argsstring>(handle_type handle)</argsstring>
        <name>await_suspend</name>
        <param>
          <type><ref refid="namespacedpp_1a4f13c6a68b674ab0b3e55f6df38b46a2" kindref="member">handle_type</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro.h" line="38" column="6" bodyfile="include/dpp/coro.h" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1awaitable_1af63e82f01c9d79bd1f442a0780281f68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto dpp::awaitable&lt; T &gt;::await_resume</definition>
        <argsstring>()</argsstring>
        <name>await_resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro.h" line="43" column="6" bodyfile="include/dpp/coro.h" bodystart="43" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="28">
        <label>T</label>
      </node>
      <node id="26">
        <label>bool</label>
      </node>
      <node id="18">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="8">
        <label>double</label>
      </node>
      <node id="1">
        <label>dpp::awaitable&lt; T &gt;</label>
        <link refid="structdpp_1_1awaitable"/>
        <childnode refid="2" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>bot</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>api_req</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="18" relation="usage">
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>role_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="4" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>numshards</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>ws_mode</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>terminating</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>on_autocomplete</edgelabel>
          <edgelabel>on_automod_rule_create</edgelabel>
          <edgelabel>on_automod_rule_delete</edgelabel>
          <edgelabel>on_automod_rule_execute</edgelabel>
          <edgelabel>on_automod_rule_update</edgelabel>
          <edgelabel>on_button_click</edgelabel>
          <edgelabel>on_channel_create</edgelabel>
          <edgelabel>on_channel_delete</edgelabel>
          <edgelabel>on_channel_pins_update</edgelabel>
          <edgelabel>on_channel_update</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>dpp::confirmation_callback_t</label>
        <link refid="structdpp_1_1confirmation__callback__t"/>
        <childnode refid="23" relation="usage">
          <edgelabel>http_info</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>bot</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>dpp::http_request_completion_t</label>
        <link refid="structdpp_1_1http__request__completion__t"/>
        <childnode refid="24" relation="usage">
          <edgelabel>headers</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>status</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>error</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>body</edgelabel>
          <edgelabel>ratelimit_bucket</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>ratelimit_limit</edgelabel>
          <edgelabel>ratelimit_remaining</edgelabel>
          <edgelabel>ratelimit_reset_after</edgelabel>
          <edgelabel>ratelimit_retry_after</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>ratelimit_global</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>latency</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="10">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="11" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dpp::promise</label>
        <link refid="structdpp_1_1promise"/>
        <childnode refid="3" relation="usage">
          <edgelabel>bot</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>callback</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="11" relation="usage">
          <edgelabel>first</edgelabel>
          <edgelabel>second</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>event_router_t&lt;</label>
      </node>
      <node id="25">
        <label>http_error</label>
      </node>
      <node id="12">
        <label>dpp::json_interface&lt; user &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; user &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="20">
        <label>condition_variable</label>
      </node>
      <node id="24">
        <label>map&lt;</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>variant&lt; confirmation, message, message_map, user, user_identified, user_map, guild_member, guild_member_map, channel, channel_map, thread_member, thread_member_map, guild, guild_map, guild_command_permissions, guild_command_permissions_map, role, role_map, invite, invite_map, dtemplate, dtemplate_map, emoji, emoji_map, ban, ban_map, voiceregion, voiceregion_map, integration, integration_map, webhook, webhook_map, prune, guild_widget, gateway, interaction, interaction_response, auditlog, slashcommand, slashcommand_map, stage_instance, sticker, sticker_map, sticker_pack, sticker_pack_map, application, application_map, connection, connection_map, thread, thread_map, scheduled_event, scheduled_event_map, event_member, event_member_map, automod_rule, automod_rule_map &gt;</label>
      </node>
      <node id="6">
        <label>time_t</label>
      </node>
      <node id="15">
        <label>uint16_t</label>
      </node>
      <node id="7">
        <label>uint32_t</label>
      </node>
      <node id="11">
        <label>uint64_t</label>
      </node>
      <node id="16">
        <label>uint8_t</label>
      </node>
      <node id="19">
        <label>websocket_protocol_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/coro.h" line="32" column="1" bodyfile="include/dpp/coro.h" bodystart="32" bodyend="44"/>
    <listofallmembers>
      <member refid="structdpp_1_1awaitable_1a62fd1e7f048b5909f47553ba6605ef63" prot="public" virt="non-virtual"><scope>dpp::awaitable</scope><name>api_req</name></member>
      <member refid="structdpp_1_1awaitable_1a8979bd87023b643a023823b07a973640" prot="public" virt="non-virtual"><scope>dpp::awaitable</scope><name>await_ready</name></member>
      <member refid="structdpp_1_1awaitable_1af63e82f01c9d79bd1f442a0780281f68" prot="public" virt="non-virtual"><scope>dpp::awaitable</scope><name>await_resume</name></member>
      <member refid="structdpp_1_1awaitable_1ac5592ff1e76d87ed6eb48318bfa86a3a" prot="public" virt="non-virtual"><scope>dpp::awaitable</scope><name>await_suspend</name></member>
      <member refid="structdpp_1_1awaitable_1a4e460170b9be9a970c63e54cf98a92c0" prot="public" virt="non-virtual"><scope>dpp::awaitable</scope><name>awaitable</name></member>
      <member refid="structdpp_1_1awaitable_1a8169c6a6ff27e480c5a21ba16c90f4b4" prot="public" virt="non-virtual"><scope>dpp::awaitable</scope><name>bot</name></member>
      <member refid="structdpp_1_1awaitable_1af0925610441138d6a14436e7f2d0967c" prot="public" virt="non-virtual"><scope>dpp::awaitable</scope><name>p</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
