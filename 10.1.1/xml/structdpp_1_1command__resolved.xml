<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1command__resolved" kind="struct" language="C++" prot="public">
    <compoundname>dpp::command_resolved</compoundname>
    <includes local="no">appcommand.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1command__resolved_1a253cd8cb71207dbdf0b8f687218f24e3" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">dpp::snowflake</ref>, <ref refid="classdpp_1_1user" kindref="compound">dpp::user</ref> &gt;</type>
        <definition>std::map&lt;dpp::snowflake, dpp::user&gt; dpp::command_resolved::users</definition>
        <argsstring></argsstring>
        <name>users</name>
        <briefdescription>
<para>Resolved users. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdpp_1_1interaction_1ac2a20671ce5da9458c69b2a26d914217" kindref="member">interaction::get_resolved_user</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="654" column="10" bodyfile="include/dpp/appcommand.h" bodystart="654" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__resolved_1a31c6fdc7a7abe57a049534bcc4dccbd3" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">dpp::snowflake</ref>, <ref refid="classdpp_1_1guild__member" kindref="compound">dpp::guild_member</ref> &gt;</type>
        <definition>std::map&lt;dpp::snowflake, dpp::guild_member&gt; dpp::command_resolved::members</definition>
        <argsstring></argsstring>
        <name>members</name>
        <briefdescription>
<para>Resolved guild members. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdpp_1_1interaction_1a65c7c983e42dece3a9152a721d87f039" kindref="member">interaction::get_resolved_member</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="659" column="10" bodyfile="include/dpp/appcommand.h" bodystart="659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__resolved_1af6920610bc77a5aaf75f1610277251d7" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">dpp::snowflake</ref>, <ref refid="classdpp_1_1permission" kindref="compound">permission</ref> &gt;</type>
        <definition>std::map&lt;dpp::snowflake, permission&gt; dpp::command_resolved::member_permissions</definition>
        <argsstring></argsstring>
        <name>member_permissions</name>
        <briefdescription>
<para>Resolved total guild member permissions including channel overwrites, permissions from roles and administrator privileges. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdpp_1_1interaction_1a89ef384ef9f2c2f7bf99c2b5ba0844c3" kindref="member">interaction::get_resolved_permission</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="664" column="10" bodyfile="include/dpp/appcommand.h" bodystart="664" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__resolved_1a6f354275ab39eb9b0771a167fd7af7fc" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">dpp::snowflake</ref>, <ref refid="classdpp_1_1role" kindref="compound">dpp::role</ref> &gt;</type>
        <definition>std::map&lt;dpp::snowflake, dpp::role&gt; dpp::command_resolved::roles</definition>
        <argsstring></argsstring>
        <name>roles</name>
        <briefdescription>
<para>Resolved roles. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdpp_1_1interaction_1a5c94b68ec3e174a9bfd8b16a64dd0fa3" kindref="member">interaction::get_resolved_role</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="669" column="10" bodyfile="include/dpp/appcommand.h" bodystart="669" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__resolved_1a5fc7b8909f13bc77e433fae06706253f" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">dpp::snowflake</ref>, <ref refid="classdpp_1_1channel" kindref="compound">dpp::channel</ref> &gt;</type>
        <definition>std::map&lt;dpp::snowflake, dpp::channel&gt; dpp::command_resolved::channels</definition>
        <argsstring></argsstring>
        <name>channels</name>
        <briefdescription>
<para>Resolved channels. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdpp_1_1interaction_1ae042d9e744e3f2089f1fed575e2d4787" kindref="member">interaction::get_resolved_channel</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="674" column="10" bodyfile="include/dpp/appcommand.h" bodystart="674" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__resolved_1ac5b4d6c2253001d34753016b4209e0f9" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">dpp::snowflake</ref>, <ref refid="structdpp_1_1message" kindref="compound">dpp::message</ref> &gt;</type>
        <definition>std::map&lt;dpp::snowflake, dpp::message&gt; dpp::command_resolved::messages</definition>
        <argsstring></argsstring>
        <name>messages</name>
        <briefdescription>
<para>Resolved messages. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdpp_1_1interaction_1a0c721701103dbac51de5dda49ada848c" kindref="member">interaction::get_resolved_message</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="679" column="10" bodyfile="include/dpp/appcommand.h" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__resolved_1adc6820ef10dcfbba1caa5aa60884aa63" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">dpp::snowflake</ref>, <ref refid="structdpp_1_1attachment" kindref="compound">dpp::attachment</ref> &gt;</type>
        <definition>std::map&lt;dpp::snowflake, dpp::attachment&gt; dpp::command_resolved::attachments</definition>
        <argsstring></argsstring>
        <name>attachments</name>
        <briefdescription>
<para>Resolved attachments. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdpp_1_1interaction_1a3f89d8774aad40fc50bf1b245ffaca79" kindref="member">interaction::get_resolved_attachment</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="684" column="10" bodyfile="include/dpp/appcommand.h" bodystart="684" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Resolved snowflake ids to users, guild members, roles and channels. You can use the <computeroutput>interaction::get_resolved_*</computeroutput> methods to easily get a resolved set. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>dpp::command_resolved</label>
        <link refid="structdpp_1_1command__resolved"/>
        <childnode refid="2" relation="usage">
          <edgelabel>attachments</edgelabel>
          <edgelabel>channels</edgelabel>
          <edgelabel>member_permissions</edgelabel>
          <edgelabel>members</edgelabel>
          <edgelabel>messages</edgelabel>
          <edgelabel>roles</edgelabel>
          <edgelabel>users</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>map&lt;</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/appcommand.h" line="649" column="1" bodyfile="include/dpp/appcommand.h" bodystart="649" bodyend="685"/>
    <listofallmembers>
      <member refid="structdpp_1_1command__resolved_1adc6820ef10dcfbba1caa5aa60884aa63" prot="public" virt="non-virtual"><scope>dpp::command_resolved</scope><name>attachments</name></member>
      <member refid="structdpp_1_1command__resolved_1a5fc7b8909f13bc77e433fae06706253f" prot="public" virt="non-virtual"><scope>dpp::command_resolved</scope><name>channels</name></member>
      <member refid="structdpp_1_1command__resolved_1af6920610bc77a5aaf75f1610277251d7" prot="public" virt="non-virtual"><scope>dpp::command_resolved</scope><name>member_permissions</name></member>
      <member refid="structdpp_1_1command__resolved_1a31c6fdc7a7abe57a049534bcc4dccbd3" prot="public" virt="non-virtual"><scope>dpp::command_resolved</scope><name>members</name></member>
      <member refid="structdpp_1_1command__resolved_1ac5b4d6c2253001d34753016b4209e0f9" prot="public" virt="non-virtual"><scope>dpp::command_resolved</scope><name>messages</name></member>
      <member refid="structdpp_1_1command__resolved_1a6f354275ab39eb9b0771a167fd7af7fc" prot="public" virt="non-virtual"><scope>dpp::command_resolved</scope><name>roles</name></member>
      <member refid="structdpp_1_1command__resolved_1a253cd8cb71207dbdf0b8f687218f24e3" prot="public" virt="non-virtual"><scope>dpp::command_resolved</scope><name>users</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
