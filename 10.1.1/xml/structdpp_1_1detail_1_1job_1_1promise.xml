<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1detail_1_1job_1_1promise" kind="struct" language="C++" prot="public">
    <compoundname>dpp::detail::job::promise</compoundname>
    <includes local="no">job.h</includes>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1detail_1_1job_1_1promise_1ac560471aad076b0ca26eb866f3f7201f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std_coroutine::suspend_never</type>
        <definition>std_coroutine::suspend_never dpp::detail::job::promise&lt; Args &gt;::final_suspend</definition>
        <argsstring>() const noexcept</argsstring>
        <name>final_suspend</name>
        <briefdescription>
<para>Function called when the job is done. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ulink url="https://en.cppreference.com/w/cpp/coroutine/suspend_never">std::suspend_never</ulink> Do not suspend at the end, destroying the handle immediately </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro/job.h" line="87" column="30" bodyfile="include/dpp/coro/job.h" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1detail_1_1job_1_1promise_1a46428baad4bd8c953a21d673006be6ba" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structdpp_1_1job" kindref="compound">dpp::job</ref></type>
        <definition>dpp::job dpp::detail::job::promise&lt; Args &gt;::get_return_object</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get_return_object</name>
        <briefdescription>
<para>Function called to get the job object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>job </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro/job.h" line="105" column="10" bodyfile="include/dpp/coro/job.h" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1detail_1_1job_1_1promise_1ac673475e0e248a467dcbcf991490cdb0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std_coroutine::suspend_never</type>
        <definition>std_coroutine::suspend_never dpp::detail::job::promise&lt; Args &gt;::initial_suspend</definition>
        <argsstring>() const noexcept</argsstring>
        <name>initial_suspend</name>
        <briefdescription>
<para>Function called when the job is started. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ulink url="https://en.cppreference.com/w/cpp/coroutine/suspend_never">std::suspend_never</ulink> Do not suspend at the start, starting the job immediately </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro/job.h" line="96" column="30" bodyfile="include/dpp/coro/job.h" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1detail_1_1job_1_1promise_1a476acfe7b61939075765730961ba71c2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::detail::job::promise&lt; Args &gt;::return_void</definition>
        <argsstring>() const noexcept</argsstring>
        <name>return_void</name>
        <briefdescription>
<para>Function called when the job returns. Does nothing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro/job.h" line="121" column="6" bodyfile="include/dpp/coro/job.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1detail_1_1job_1_1promise_1a3c7c522ce5a0e5a6231970100b6be4fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::detail::job::promise&lt; Args &gt;::unhandled_exception</definition>
        <argsstring>() const</argsstring>
        <name>unhandled_exception</name>
        <briefdescription>
<para>Function called when an exception is thrown and not caught. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Immediately</parametername>
</parameternamelist>
<parameterdescription>
<para>rethrows the exception to the caller / resumer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro/job.h" line="114" column="6" bodyfile="include/dpp/coro/job.h" bodystart="114" bodyend="116"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Coroutine promise type for a job. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dpp/coro/job.h" line="70" column="1" bodyfile="include/dpp/coro/job.h" bodystart="70" bodyend="122"/>
    <listofallmembers>
      <member refid="structdpp_1_1detail_1_1job_1_1promise_1ac560471aad076b0ca26eb866f3f7201f" prot="public" virt="non-virtual"><scope>dpp::detail::job::promise</scope><name>final_suspend</name></member>
      <member refid="structdpp_1_1detail_1_1job_1_1promise_1a46428baad4bd8c953a21d673006be6ba" prot="public" virt="non-virtual"><scope>dpp::detail::job::promise</scope><name>get_return_object</name></member>
      <member refid="structdpp_1_1detail_1_1job_1_1promise_1ac673475e0e248a467dcbcf991490cdb0" prot="public" virt="non-virtual"><scope>dpp::detail::job::promise</scope><name>initial_suspend</name></member>
      <member refid="structdpp_1_1detail_1_1job_1_1promise_1a476acfe7b61939075765730961ba71c2" prot="public" virt="non-virtual"><scope>dpp::detail::job::promise</scope><name>return_void</name></member>
      <member refid="structdpp_1_1detail_1_1job_1_1promise_1a3c7c522ce5a0e5a6231970100b6be4fd" prot="public" virt="non-virtual"><scope>dpp::detail::job::promise</scope><name>unhandled_exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
