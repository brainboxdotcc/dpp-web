<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1detail_1_1task_1_1promise__base_1_1proxy__awaiter" kind="struct" language="C++" prot="public">
    <compoundname>dpp::detail::task::promise_base::proxy_awaiter</compoundname>
    <includes local="no">task.h</includes>
    <templateparamlist>
      <param>
        <type>typename A</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1detail_1_1task_1_1promise__base_1_1proxy__awaiter_1ae8bf858599cca6cb940560aba4b1df44" prot="public" static="no" mutable="no">
        <type>const <ref refid="structdpp_1_1detail_1_1task_1_1promise__base" kindref="compound">task::promise_base</ref> &amp;</type>
        <definition>const task::promise_base&amp; dpp::detail::task::promise_base::proxy_awaiter&lt; A &gt;::promise</definition>
        <argsstring></argsstring>
        <name>promise</name>
        <briefdescription>
<para>The <ref refid="structdpp_1_1detail_1_1task_1_1promise__t" kindref="compound">promise_t</ref> object bound to this proxy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro/task.h" line="581" column="26" bodyfile="include/dpp/coro/task.h" bodystart="581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1detail_1_1task_1_1promise__base_1_1proxy__awaiter_1a7b736cf8304ba64062dbf372f70c9650" prot="public" static="no" mutable="no">
        <type>A</type>
        <definition>A dpp::detail::task::promise_base::proxy_awaiter&lt; A &gt;::awaitable</definition>
        <argsstring></argsstring>
        <name>awaitable</name>
        <briefdescription>
<para>The inner awaitable being awaited. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro/task.h" line="584" column="3" bodyfile="include/dpp/coro/task.h" bodystart="584" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1detail_1_1task_1_1promise__base_1_1proxy__awaiter_1ae596e70a6448d5df9699bd0783e9a5b2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::detail::task::promise_base::proxy_awaiter&lt; A &gt;::await_ready</definition>
        <argsstring>() noexcept(noexcept(awaitable.await_ready()))</argsstring>
        <name>await_ready</name>
        <briefdescription>
<para>Wrapper for the awaitable&apos;s await_ready. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro/task.h" line="587" column="7" bodyfile="include/dpp/coro/task.h" bodystart="587" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1detail_1_1task_1_1promise__base_1_1proxy__awaiter_1adb8f5081099eab73ae38039c769e678b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) dpp::detail::task::promise_base::proxy_awaiter&lt; A &gt;::await_suspend</definition>
        <argsstring>(T &amp;&amp;handle) noexcept(noexcept(awaitable.await_suspend(std::forward&lt; T &gt;(handle))))</argsstring>
        <name>await_suspend</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Wrapper for the awaitable&apos;s await_suspend. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro/task.h" line="593" column="11" bodyfile="include/dpp/coro/task.h" bodystart="593" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1detail_1_1task_1_1promise__base_1_1proxy__awaiter_1a91301c1789bb010eb02e9e973065b734" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) dpp::detail::task::promise_base::proxy_awaiter&lt; A &gt;::await_resume</definition>
        <argsstring>()</argsstring>
        <name>await_resume</name>
        <briefdescription>
<para>Wrapper for the awaitable&apos;s await_resume, throws if the task is cancelled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classdpp_1_1task__cancelled__exception" kindref="compound">dpp::task_cancelled_exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>If the task was cancelled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro/task.h" line="602" column="10" bodyfile="include/dpp/coro/task.h" bodystart="602" bodyend="607"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Proxy awaitable that wraps any co_await inside the task and checks for cancellation on resumption. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structdpp_1_1detail_1_1task_1_1promise__base_1af75819e122ec25faa1523a023b032d39" kindref="member">await_transform</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>A</label>
      </node>
      <node id="4">
        <label>coroutine_handle</label>
      </node>
      <node id="2">
        <label>dpp::detail::task::promise_base</label>
        <link refid="structdpp_1_1detail_1_1task_1_1promise__base"/>
        <childnode refid="3" relation="usage">
          <edgelabel>cancelled</edgelabel>
          <edgelabel>state</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dpp::detail::task::promise_base::proxy_awaiter&lt; A &gt;</label>
        <link refid="structdpp_1_1detail_1_1task_1_1promise__base_1_1proxy__awaiter"/>
        <childnode refid="2" relation="usage">
          <edgelabel>promise</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>awaitable</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>atomic&lt;</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/coro/task.h" line="579" column="1" bodyfile="include/dpp/coro/task.h" bodystart="579" bodyend="608"/>
    <listofallmembers>
      <member refid="structdpp_1_1detail_1_1task_1_1promise__base_1_1proxy__awaiter_1ae596e70a6448d5df9699bd0783e9a5b2" prot="public" virt="non-virtual"><scope>dpp::detail::task::promise_base::proxy_awaiter</scope><name>await_ready</name></member>
      <member refid="structdpp_1_1detail_1_1task_1_1promise__base_1_1proxy__awaiter_1a91301c1789bb010eb02e9e973065b734" prot="public" virt="non-virtual"><scope>dpp::detail::task::promise_base::proxy_awaiter</scope><name>await_resume</name></member>
      <member refid="structdpp_1_1detail_1_1task_1_1promise__base_1_1proxy__awaiter_1adb8f5081099eab73ae38039c769e678b" prot="public" virt="non-virtual"><scope>dpp::detail::task::promise_base::proxy_awaiter</scope><name>await_suspend</name></member>
      <member refid="structdpp_1_1detail_1_1task_1_1promise__base_1_1proxy__awaiter_1a7b736cf8304ba64062dbf372f70c9650" prot="public" virt="non-virtual"><scope>dpp::detail::task::promise_base::proxy_awaiter</scope><name>awaitable</name></member>
      <member refid="structdpp_1_1detail_1_1task_1_1promise__base_1_1proxy__awaiter_1ae8bf858599cca6cb940560aba4b1df44" prot="public" virt="non-virtual"><scope>dpp::detail::task::promise_base::proxy_awaiter</scope><name>promise</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
