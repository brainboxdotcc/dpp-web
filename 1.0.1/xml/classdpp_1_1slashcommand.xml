<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1slashcommand" kind="class" language="C++" prot="public">
    <compoundname>dpp::slashcommand</compoundname>
    <basecompoundref refid="classdpp_1_1managed" prot="public" virt="non-virtual">dpp::managed</basecompoundref>
    <includes local="no">slashcommand.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1slashcommand_1a68823472ad357bc69759212f6ebe1a82" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::slashcommand::application_id</definition>
        <argsstring></argsstring>
        <name>application_id</name>
        <briefdescription>
<para>Application id (usually matches your bots id) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="296" column="11" bodyfile="include/dpp/slashcommand.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1slashcommand_1aba1bc2d7cb8d9f67071aab5c16df964b" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::slashcommand::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>Command name (1-32 chars) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="301" column="13" bodyfile="include/dpp/slashcommand.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1slashcommand_1a9bdfc4a4e6121349903f7ab28010691a" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::slashcommand::description</definition>
        <argsstring></argsstring>
        <name>description</name>
        <briefdescription>
<para>Command description (1-100 chars) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="306" column="13" bodyfile="include/dpp/slashcommand.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1slashcommand_1ad7bf348ca0d07ccd3416656f023d913e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref> &gt;</type>
        <definition>std::vector&lt;command_option&gt; dpp::slashcommand::options</definition>
        <argsstring></argsstring>
        <name>options</name>
        <briefdescription>
<para>Command options (parameters) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="311" column="13" bodyfile="include/dpp/slashcommand.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1managed_1a40bf0c6cc03909910512808fa6caa112" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::managed::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unique ID of object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discord.h" line="44" column="11" bodyfile="include/dpp/discord.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1slashcommand_1add0654f80f31c52fbbf7d1541653a7b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::slashcommand::slashcommand</definition>
        <argsstring>()</argsstring>
        <name>slashcommand</name>
        <briefdescription>
<para>Construct a new slashcommand object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="316" column="1" bodyfile="src/dpp/slashcommand.cpp" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1slashcommand_1aa6f13f22de1b2e26b2ca7976e42e5b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::slashcommand::~slashcommand</definition>
        <argsstring>()</argsstring>
        <name>~slashcommand</name>
        <briefdescription>
<para>Destroy the slashcommand object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="321" column="1" bodyfile="src/dpp/slashcommand.cpp" bodystart="35" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1slashcommand_1a3959f3f3b2709c56e03610e6f774e449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1slashcommand" kindref="compound">slashcommand</ref> &amp;</type>
        <definition>slashcommand &amp; dpp::slashcommand::add_option</definition>
        <argsstring>(const command_option &amp;o)</argsstring>
        <name>add_option</name>
        <param>
          <type>const <ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Add an option (parameter) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o</parametername>
</parameternamelist>
<parameterdescription>
<para>option (parameter) to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>slashcommand&amp; reference to self for chaining of calls </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="329" column="14" bodyfile="src/dpp/slashcommand.cpp" bodystart="148" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1slashcommand_1aba074557679db547ec1a7ae955cd8353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1slashcommand" kindref="compound">slashcommand</ref> &amp;</type>
        <definition>slashcommand &amp; dpp::slashcommand::set_name</definition>
        <argsstring>(const std::string &amp;n)</argsstring>
        <name>set_name</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Set the name of the command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>name of command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>slashcommand&amp; reference to self for chaining of calls </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="337" column="14" bodyfile="src/dpp/slashcommand.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1slashcommand_1a50fc02275a4dcba70a5dacb4ecbd2085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1slashcommand" kindref="compound">slashcommand</ref> &amp;</type>
        <definition>slashcommand &amp; dpp::slashcommand::set_description</definition>
        <argsstring>(const std::string &amp;d)</argsstring>
        <name>set_description</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Set the description of the command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>description </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>slashcommand&amp; reference to self for chaining of calls </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="345" column="14" bodyfile="src/dpp/slashcommand.cpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1slashcommand_1a0b5e048d0df9f02f09ab1117328e0c92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1slashcommand" kindref="compound">slashcommand</ref> &amp;</type>
        <definition>slashcommand &amp; dpp::slashcommand::set_application_id</definition>
        <argsstring>(snowflake i)</argsstring>
        <name>set_application_id</name>
        <param>
          <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Set the application id of the command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>application id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>slashcommand&amp; reference to self for chaining of calls </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="353" column="14" bodyfile="src/dpp/slashcommand.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1slashcommand_1a2295a43bd5defc3a87afa5f0cc0c36af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1slashcommand" kindref="compound">slashcommand</ref> &amp;</type>
        <definition>slashcommand &amp; dpp::slashcommand::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Fill object properties from JSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON to fill from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>slashcommand&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="361" column="14" bodyfile="src/dpp/slashcommand.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1slashcommand_1a540339915ce149aa7631d3977ea1882a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::slashcommand::build_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>build_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Build a json string for this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>True if to include the ID in the JSON </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string JSON string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="369" column="13" bodyfile="src/dpp/slashcommand.cpp" bodystart="45" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an application command, created by your bot either globally, or on a guild. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
      </node>
      <node id="1">
        <label>dpp::slashcommand</label>
        <link refid="classdpp_1_1slashcommand"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="3" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dpp::slashcommand</label>
        <link refid="classdpp_1_1slashcommand"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>description</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>options</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>vector&lt;</label>
      </node>
      <node id="3">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/slashcommand.h" line="291" column="1" bodyfile="include/dpp/slashcommand.h" bodystart="291" bodyend="370"/>
    <listofallmembers>
      <member refid="classdpp_1_1slashcommand_1a3959f3f3b2709c56e03610e6f774e449" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>add_option</name></member>
      <member refid="classdpp_1_1slashcommand_1a68823472ad357bc69759212f6ebe1a82" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>application_id</name></member>
      <member refid="classdpp_1_1slashcommand_1a540339915ce149aa7631d3977ea1882a" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>build_json</name></member>
      <member refid="classdpp_1_1slashcommand_1a9bdfc4a4e6121349903f7ab28010691a" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>description</name></member>
      <member refid="classdpp_1_1slashcommand_1a2295a43bd5defc3a87afa5f0cc0c36af" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1managed_1a40bf0c6cc03909910512808fa6caa112" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>id</name></member>
      <member refid="classdpp_1_1managed_1a31ef760e6aff5631cdaf8425daaf7e6a" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>managed</name></member>
      <member refid="classdpp_1_1slashcommand_1aba1bc2d7cb8d9f67071aab5c16df964b" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>name</name></member>
      <member refid="classdpp_1_1slashcommand_1ad7bf348ca0d07ccd3416656f023d913e" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>options</name></member>
      <member refid="classdpp_1_1slashcommand_1a0b5e048d0df9f02f09ab1117328e0c92" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>set_application_id</name></member>
      <member refid="classdpp_1_1slashcommand_1a50fc02275a4dcba70a5dacb4ecbd2085" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>set_description</name></member>
      <member refid="classdpp_1_1slashcommand_1aba074557679db547ec1a7ae955cd8353" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>set_name</name></member>
      <member refid="classdpp_1_1slashcommand_1add0654f80f31c52fbbf7d1541653a7b0" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>slashcommand</name></member>
      <member refid="classdpp_1_1managed_1a68f95fa01f17991b35920e38df9f7fe9" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>~managed</name></member>
      <member refid="classdpp_1_1slashcommand_1aa6f13f22de1b2e26b2ca7976e42e5b67" prot="public" virt="non-virtual"><scope>dpp::slashcommand</scope><name>~slashcommand</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
