<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1commandhandler" kind="class" language="C++" prot="public">
    <compoundname>dpp::commandhandler</compoundname>
    <includes local="no">commandhandler.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdpp_1_1commandhandler_1ad052feb4e3b69c6bc9cebe8f93cee293" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="namespacedpp_1a66d7fa566081d41a67ec5b3ebd41876e" kindref="member">command_handler</ref> &gt;</type>
        <definition>std::map&lt;std::string, command_handler&gt; dpp::commandhandler::commands</definition>
        <argsstring></argsstring>
        <name>commands</name>
        <briefdescription>
<para>Commands in the handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="40" column="10" bodyfile="include/dpp/commandhandler.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1commandhandler_1acbbac80b9d8fd5b3f82fd5bfc919f9bc" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; dpp::commandhandler::prefixes</definition>
        <argsstring></argsstring>
        <name>prefixes</name>
        <briefdescription>
<para>Valid prefixes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="45" column="13" bodyfile="include/dpp/commandhandler.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1commandhandler_1aae9c36fceee198e5c25d3838c0142dee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::commandhandler::commandhandler</definition>
        <argsstring>()</argsstring>
        <name>commandhandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="49" column="1" bodyfile="src/dpp/commandhandler.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1commandhandler_1a62373f8cdd5b887eb78eb4f4cb265baf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::commandhandler::~commandhandler</definition>
        <argsstring>()</argsstring>
        <name>~commandhandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="52" column="1" bodyfile="src/dpp/commandhandler.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1commandhandler_1a69ce2bb96adb1a658b3a29c37274f2bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1commandhandler" kindref="compound">commandhandler</ref> &amp;</type>
        <definition>commandhandler &amp; dpp::commandhandler::add_prefix</definition>
        <argsstring>(const std::string &amp;prefix)</argsstring>
        <name>add_prefix</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
<para>Add a prefix to the command handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Prefix to be handled by the command handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>commandhandler&amp; reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="60" column="16" bodyfile="src/dpp/commandhandler.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1commandhandler_1a5a8476c0aa4f626dd81bcdf30572431d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1commandhandler" kindref="compound">commandhandler</ref> &amp;</type>
        <definition>commandhandler &amp; dpp::commandhandler::add_command</definition>
        <argsstring>(const std::string &amp;command, command_handler handler)</argsstring>
        <name>add_command</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>command</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a66d7fa566081d41a67ec5b3ebd41876e" kindref="member">command_handler</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Add a command to the command handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>Command to be handled. Note that if any one of your prefixes is &quot;/&quot; this will attempt to register a global command using the API and you will receive notification of this command via an interaction event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Handler function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>commandhandler&amp; reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="72" column="16" bodyfile="src/dpp/commandhandler.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1commandhandler_1acecd44c69a7cee36d1d12aa5b0354d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::commandhandler::route</definition>
        <argsstring>(const class dpp::message &amp;msg)</argsstring>
        <name>route</name>
        <param>
          <type>const class <ref refid="structdpp_1_1message" kindref="compound">dpp::message</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Route a command from the on_message_create function. Call this method from within your on_message_create with the received <ref refid="structdpp_1_1message" kindref="compound">dpp::message</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>message to parse </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="81" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1commandhandler_1a2ccd8d92a255ec95563b45c6102d192e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::commandhandler::route</definition>
        <argsstring>(const class dpp::command_interaction &amp;cmd)</argsstring>
        <name>route</name>
        <param>
          <type>const class <ref refid="structdpp_1_1command__interaction" kindref="compound">dpp::command_interaction</ref> &amp;</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Route a command from the on_interaction_create function. Call this method from yuor on_interaction_create with the recieved <ref refid="structdpp_1_1command__interaction" kindref="compound">dpp::command_interaction</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>command interaction to parse </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="90" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1commandhandler_1a0a1135844039bb1a28e1656023be9692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::commandhandler::reply</definition>
        <argsstring>(const dpp::message &amp;m)</argsstring>
        <name>reply</name>
        <param>
          <type>const <ref refid="structdpp_1_1message" kindref="compound">dpp::message</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Reply to a message. You should use this method rather than <ref refid="classdpp_1_1cluster_1a080a8cefc6ceb0b882fdb6fe70c078a6" kindref="member">cluster::message_create</ref> as the way you reply varies between slash commands and message commands. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>message to reply with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="99" column="6" bodyfile="src/dpp/commandhandler.cpp" bodystart="55" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The commandhandler class represents a group of commands, prefixed or slash commands with handling functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dpp/commandhandler.h" line="35" column="1" bodyfile="include/dpp/commandhandler.h" bodystart="35" bodyend="100"/>
    <listofallmembers>
      <member refid="classdpp_1_1commandhandler_1a5a8476c0aa4f626dd81bcdf30572431d" prot="public" virt="non-virtual"><scope>dpp::commandhandler</scope><name>add_command</name></member>
      <member refid="classdpp_1_1commandhandler_1a69ce2bb96adb1a658b3a29c37274f2bb" prot="public" virt="non-virtual"><scope>dpp::commandhandler</scope><name>add_prefix</name></member>
      <member refid="classdpp_1_1commandhandler_1aae9c36fceee198e5c25d3838c0142dee" prot="public" virt="non-virtual"><scope>dpp::commandhandler</scope><name>commandhandler</name></member>
      <member refid="classdpp_1_1commandhandler_1ad052feb4e3b69c6bc9cebe8f93cee293" prot="private" virt="non-virtual"><scope>dpp::commandhandler</scope><name>commands</name></member>
      <member refid="classdpp_1_1commandhandler_1acbbac80b9d8fd5b3f82fd5bfc919f9bc" prot="private" virt="non-virtual"><scope>dpp::commandhandler</scope><name>prefixes</name></member>
      <member refid="classdpp_1_1commandhandler_1a0a1135844039bb1a28e1656023be9692" prot="public" virt="non-virtual"><scope>dpp::commandhandler</scope><name>reply</name></member>
      <member refid="classdpp_1_1commandhandler_1acecd44c69a7cee36d1d12aa5b0354d0d" prot="public" virt="non-virtual"><scope>dpp::commandhandler</scope><name>route</name></member>
      <member refid="classdpp_1_1commandhandler_1a2ccd8d92a255ec95563b45c6102d192e" prot="public" virt="non-virtual"><scope>dpp::commandhandler</scope><name>route</name></member>
      <member refid="classdpp_1_1commandhandler_1a62373f8cdd5b887eb78eb4f4cb265baf" prot="public" virt="non-virtual"><scope>dpp::commandhandler</scope><name>~commandhandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
