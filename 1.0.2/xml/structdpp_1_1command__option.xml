<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1command__option" kind="struct" language="C++" prot="public">
    <compoundname>dpp::command_option</compoundname>
    <includes local="no">slashcommand.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1command__option_1adbb960edfa14ae19545d64397a785ab3" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1abc401d86119c6443bf72d736857c1a58" kindref="member">command_option_type</ref></type>
        <definition>command_option_type dpp::command_option::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>Option type (what type of value is accepted) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="103" column="21" bodyfile="include/dpp/slashcommand.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__option_1ac2d487bd055fecbe1c566742def38bb7" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::command_option::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>Option name (1-32 chars) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="104" column="13" bodyfile="include/dpp/slashcommand.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__option_1a82debcf96e4265cf7d8ea6b2aa47e481" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::command_option::description</definition>
        <argsstring></argsstring>
        <name>description</name>
        <briefdescription>
<para>Option description (1-100 chars) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="105" column="13" bodyfile="include/dpp/slashcommand.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__option_1ad203ab30a75ce7508f565f5821301bdb" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dpp::command_option::required</definition>
        <argsstring></argsstring>
        <name>required</name>
        <briefdescription>
<para>True if this is a mandatory parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="106" column="6" bodyfile="include/dpp/slashcommand.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__option_1a05f44f181203ed332696b789c4ef7c6f" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structdpp_1_1command__option__choice" kindref="compound">command_option_choice</ref> &gt;</type>
        <definition>std::vector&lt;command_option_choice&gt; dpp::command_option::choices</definition>
        <argsstring></argsstring>
        <name>choices</name>
        <briefdescription>
<para>List of choices for multiple choice command. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="107" column="13" bodyfile="include/dpp/slashcommand.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__option_1a0f238f1e8bb393b2c37b47c6fb564952" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref> &gt;</type>
        <definition>std::vector&lt;command_option&gt; dpp::command_option::options</definition>
        <argsstring></argsstring>
        <name>options</name>
        <briefdescription>
<para>Sub-commands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="108" column="13" bodyfile="include/dpp/slashcommand.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1command__option_1a7b9a89420e48ccd85cfdc6deaae63e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::command_option::command_option</definition>
        <argsstring>()=default</argsstring>
        <name>command_option</name>
        <briefdescription>
<para>Construct a new command option object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1command__option_1a7059a6049828707b2eda2c5a649aeb79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::command_option::command_option</definition>
        <argsstring>(command_option_type t, const std::string &amp;name, const std::string &amp;description, bool required=false)</argsstring>
        <name>command_option</name>
        <param>
          <type><ref refid="namespacedpp_1abc401d86119c6443bf72d736857c1a58" kindref="member">command_option_type</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>description</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>required</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Construct a new command option object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Option type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Option name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>Option description </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>required</parametername>
</parameternamelist>
<parameterdescription>
<para>True if this is a mandatory parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1command__option_1a760d208354981f2866d6788b67dc4026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref> &amp;</type>
        <definition>command_option &amp; dpp::command_option::add_choice</definition>
        <argsstring>(const command_option_choice &amp;o)</argsstring>
        <name>add_choice</name>
        <param>
          <type>const <ref refid="structdpp_1_1command__option__choice" kindref="compound">command_option_choice</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Add a multiple choice option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o</parametername>
</parameternamelist>
<parameterdescription>
<para>choice to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref>&amp; returns a reference to self for chaining of calls </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="131" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1command__option_1aa5c54bbb1e3cf93a9e18ea21f789cf2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref> &amp;</type>
        <definition>command_option &amp; dpp::command_option::add_option</definition>
        <argsstring>(const command_option &amp;o)</argsstring>
        <name>add_option</name>
        <param>
          <type>const <ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Add a sub-command option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub-command option to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref>&amp; return a reference to self for chaining of calls </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="139" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Each command option is a command line parameter. It can have a type (see <ref refid="namespacedpp_1abc401d86119c6443bf72d736857c1a58" kindref="member">dpp::command_option_type</ref>), a name, a description, can be required or optional, and can have zero or more choices (for multiple choice), plus options. Adding options acts like sub-commands and can contain more options. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>bool</label>
      </node>
      <node id="2">
        <label>command_option_type</label>
      </node>
      <node id="1">
        <label>dpp::command_option</label>
        <link refid="structdpp_1_1command__option"/>
        <childnode refid="2" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>description</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>required</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>choices</edgelabel>
          <edgelabel>options</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>vector&lt;</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/slashcommand.h" line="102" column="1" bodyfile="include/dpp/slashcommand.h" bodystart="102" bodyend="140"/>
    <listofallmembers>
      <member refid="structdpp_1_1command__option_1a760d208354981f2866d6788b67dc4026" prot="public" virt="non-virtual"><scope>dpp::command_option</scope><name>add_choice</name></member>
      <member refid="structdpp_1_1command__option_1aa5c54bbb1e3cf93a9e18ea21f789cf2c" prot="public" virt="non-virtual"><scope>dpp::command_option</scope><name>add_option</name></member>
      <member refid="structdpp_1_1command__option_1a05f44f181203ed332696b789c4ef7c6f" prot="public" virt="non-virtual"><scope>dpp::command_option</scope><name>choices</name></member>
      <member refid="structdpp_1_1command__option_1a7b9a89420e48ccd85cfdc6deaae63e50" prot="public" virt="non-virtual"><scope>dpp::command_option</scope><name>command_option</name></member>
      <member refid="structdpp_1_1command__option_1a7059a6049828707b2eda2c5a649aeb79" prot="public" virt="non-virtual"><scope>dpp::command_option</scope><name>command_option</name></member>
      <member refid="structdpp_1_1command__option_1a82debcf96e4265cf7d8ea6b2aa47e481" prot="public" virt="non-virtual"><scope>dpp::command_option</scope><name>description</name></member>
      <member refid="structdpp_1_1command__option_1ac2d487bd055fecbe1c566742def38bb7" prot="public" virt="non-virtual"><scope>dpp::command_option</scope><name>name</name></member>
      <member refid="structdpp_1_1command__option_1a0f238f1e8bb393b2c37b47c6fb564952" prot="public" virt="non-virtual"><scope>dpp::command_option</scope><name>options</name></member>
      <member refid="structdpp_1_1command__option_1ad203ab30a75ce7508f565f5821301bdb" prot="public" virt="non-virtual"><scope>dpp::command_option</scope><name>required</name></member>
      <member refid="structdpp_1_1command__option_1adbb960edfa14ae19545d64397a785ab3" prot="public" virt="non-virtual"><scope>dpp::command_option</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
