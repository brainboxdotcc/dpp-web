digraph "dpp::command_interaction"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="dpp::command_interaction",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Details of a command within an interaction. This subobject represents the application command associa..."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" id" ,fontname="Helvetica"];
  Node2 [label="uint64_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" name" ,fontname="Helvetica"];
  Node3 [label="std::string",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="std::basic_string\<\l Char \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" resolved" ,fontname="Helvetica"];
  Node5 [label="dpp::command_resolved",height=0.2,width=0.4,color="black",URL="$structdpp_1_1command__resolved.html",tooltip="Resolved snowflake ids to usernames. TODO: Needs implementation. Not needed something that functions ..."];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" options" ,fontname="Helvetica"];
  Node6 [label="vector\<",height=0.2,width=0.4,color="grey75",tooltip=" "];
}
