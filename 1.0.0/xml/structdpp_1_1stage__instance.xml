<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1stage__instance" kind="struct" language="C++" prot="public">
    <compoundname>dpp::stage_instance</compoundname>
    <includes local="no">stage_instance.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1stage__instance_1ad12ef15d7e00007b1c38cee84603cb19" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::stage_instance::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>The id of this Stage instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stage_instance.h" line="36" column="11" bodyfile="include/dpp/stage_instance.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1stage__instance_1ac78c5c60945f082d1b42ba3c81b43217" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::stage_instance::guild_id</definition>
        <argsstring></argsstring>
        <name>guild_id</name>
        <briefdescription>
<para>The guild id of the associated Stage channel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stage_instance.h" line="38" column="11" bodyfile="include/dpp/stage_instance.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1stage__instance_1a21bda7ddd059504607abca421e747c94" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::stage_instance::channel_id</definition>
        <argsstring></argsstring>
        <name>channel_id</name>
        <briefdescription>
<para>The id of the associated Stage channel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stage_instance.h" line="40" column="11" bodyfile="include/dpp/stage_instance.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1stage__instance_1ae373539ed2656ca14f306cb00465158a" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::stage_instance::topic</definition>
        <argsstring></argsstring>
        <name>topic</name>
        <briefdescription>
<para>The topic of the Stage instance (1-120 characters) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stage_instance.h" line="42" column="13" bodyfile="include/dpp/stage_instance.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1stage__instance_1ae198d6dba53766e0375c1705165ddca7" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a29954c9dfc5a906346177226d036a418" kindref="member">stage_privacy_level</ref></type>
        <definition>stage_privacy_level dpp::stage_instance::privacy_level</definition>
        <argsstring></argsstring>
        <name>privacy_level</name>
        <briefdescription>
<para>The privacy level of the Stage instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stage_instance.h" line="44" column="21" bodyfile="include/dpp/stage_instance.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1stage__instance_1aae76dc45493e1430bfdd6473d773de1f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dpp::stage_instance::discoverable_disabled</definition>
        <argsstring></argsstring>
        <name>discoverable_disabled</name>
        <briefdescription>
<para>Whether or not Stage Discovery is disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stage_instance.h" line="46" column="6" bodyfile="include/dpp/stage_instance.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1stage__instance_1a5ef48a926a1e604a0bcf8f53d27521c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::stage_instance::stage_instance</definition>
        <argsstring>()</argsstring>
        <name>stage_instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stage_instance.h" line="51" column="1" bodyfile="src/dpp/stage_instance.cpp" bodystart="31" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1stage__instance_1a88af3a5f8cead59a98c9ae7a695695a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::stage_instance::~stage_instance</definition>
        <argsstring>()=default</argsstring>
        <name>~stage_instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stage_instance.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1stage__instance_1aa0f2f5070d37d060856eeb78ee06254b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1stage__instance" kindref="compound">stage_instance</ref> &amp;</type>
        <definition>stage_instance &amp; dpp::stage_instance::fill_from_json</definition>
        <argsstring>(const nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stage_instance.h" line="63" column="16" bodyfile="src/dpp/stage_instance.cpp" bodystart="40" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1stage__instance_1a6508584b765bd8df29575325973f9bf5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string const</type>
        <definition>std::string const dpp::stage_instance::build_json</definition>
        <argsstring>() const</argsstring>
        <name>build_json</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stage_instance.h" line="70" column="19" bodyfile="src/dpp/stage_instance.cpp" bodystart="51" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6">
        <label>bool</label>
      </node>
      <node id="1">
        <label>dpp::stage_instance</label>
        <link refid="structdpp_1_1stage__instance"/>
        <childnode refid="2" relation="usage">
          <edgelabel>channel_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>topic</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>privacy_level</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>discoverable_disabled</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>stage_privacy_level</label>
      </node>
      <node id="4">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/stage_instance.h" line="33" column="1" bodyfile="include/dpp/stage_instance.h" bodystart="33" bodyend="71"/>
    <listofallmembers>
      <member refid="structdpp_1_1stage__instance_1a6508584b765bd8df29575325973f9bf5" prot="public" virt="non-virtual"><scope>dpp::stage_instance</scope><name>build_json</name></member>
      <member refid="structdpp_1_1stage__instance_1a21bda7ddd059504607abca421e747c94" prot="public" virt="non-virtual"><scope>dpp::stage_instance</scope><name>channel_id</name></member>
      <member refid="structdpp_1_1stage__instance_1aae76dc45493e1430bfdd6473d773de1f" prot="public" virt="non-virtual"><scope>dpp::stage_instance</scope><name>discoverable_disabled</name></member>
      <member refid="structdpp_1_1stage__instance_1aa0f2f5070d37d060856eeb78ee06254b" prot="public" virt="non-virtual"><scope>dpp::stage_instance</scope><name>fill_from_json</name></member>
      <member refid="structdpp_1_1stage__instance_1ac78c5c60945f082d1b42ba3c81b43217" prot="public" virt="non-virtual"><scope>dpp::stage_instance</scope><name>guild_id</name></member>
      <member refid="structdpp_1_1stage__instance_1ad12ef15d7e00007b1c38cee84603cb19" prot="public" virt="non-virtual"><scope>dpp::stage_instance</scope><name>id</name></member>
      <member refid="structdpp_1_1stage__instance_1ae198d6dba53766e0375c1705165ddca7" prot="public" virt="non-virtual"><scope>dpp::stage_instance</scope><name>privacy_level</name></member>
      <member refid="structdpp_1_1stage__instance_1a5ef48a926a1e604a0bcf8f53d27521c3" prot="public" virt="non-virtual"><scope>dpp::stage_instance</scope><name>stage_instance</name></member>
      <member refid="structdpp_1_1stage__instance_1ae373539ed2656ca14f306cb00465158a" prot="public" virt="non-virtual"><scope>dpp::stage_instance</scope><name>topic</name></member>
      <member refid="structdpp_1_1stage__instance_1a88af3a5f8cead59a98c9ae7a695695a7" prot="public" virt="non-virtual"><scope>dpp::stage_instance</scope><name>~stage_instance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
