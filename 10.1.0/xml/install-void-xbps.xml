<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="install-void-xbps" kind="page">
    <compoundname>install-void-xbps</compoundname>
    <title>Installing from XBPS (Void Linux)</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>To install <ulink url="https://github.com/void-linux/void-packages/blob/master/srcpkgs/dpp/template">D++ from XBPS source packages collection</ulink>, follow the step below (as root):</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">xbps-install<sp/>-Sy<sp/>dpp-devel</highlight></codeline>
</programlisting></para>
<para>This will install D++ development files and related libraries</para>
<para>You will now be able to use D++ by including its library on the command line:</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">g++<sp/>mybot.cpp<sp/>-o<sp/>mybot<sp/>-ldpp</highlight></codeline>
</programlisting></para>
<para><para><simplesect kind="note"><para>Compiling your bot with a raw <computeroutput>g++</computeroutput> command is not advised in any real project, and the example above should be used only as a test. From here, you should learn to create a bot in D++ by moving on to <ref refid="buildcmake" kindref="compound">Building a Discord Bot Using CMake (UNIX)</ref> or if you have not yet created a token for your bot, <ref refid="creating-a-bot-application" kindref="compound">Creating a Bot Token</ref> - If you are having trouble setting up CMake, you can try <ulink url="https://github.com/brainboxdotcc/templatebot">our template cmake bot project</ulink>.</para>
</simplesect>
</para>
 </para>
    </detaileddescription>
    <location file="docpages/install/install-void-xbps.md"/>
  </compounddef>
</doxygen>
