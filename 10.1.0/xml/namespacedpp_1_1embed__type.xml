<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="namespacedpp_1_1embed__type" kind="namespace" language="C++">
    <compoundname>dpp::embed_type</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacedpp_1_1embed__type_1a0dcbd746be0d87674f228c25d677afc4" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string dpp::embed_type::emt_article</definition>
        <argsstring></argsstring>
        <name>emt_article</name>
        <initializer>= &quot;article&quot;</initializer>
        <briefdescription>
<para>Article. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1754" column="19" bodyfile="include/dpp/message.h" bodystart="1754" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1_1embed__type_1afd9b5dcc8b8a19bd15e10a9d6172583e" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string dpp::embed_type::emt_automod</definition>
        <argsstring></argsstring>
        <name>emt_automod</name>
        <initializer>= &quot;auto_moderation_message&quot;</initializer>
        <briefdescription>
<para>Auto moderation filter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1764" column="19" bodyfile="include/dpp/message.h" bodystart="1764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1_1embed__type_1a7fdb5d16df353c6b49360312f55f2635" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string dpp::embed_type::emt_gifv</definition>
        <argsstring></argsstring>
        <name>emt_gifv</name>
        <initializer>= &quot;gifv&quot;</initializer>
        <briefdescription>
<para>Animated gif. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1749" column="19" bodyfile="include/dpp/message.h" bodystart="1749" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1_1embed__type_1af29e7d824c439c942b1368dc062acb4c" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string dpp::embed_type::emt_image</definition>
        <argsstring></argsstring>
        <name>emt_image</name>
        <initializer>= &quot;image&quot;</initializer>
        <briefdescription>
<para>Image. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1739" column="19" bodyfile="include/dpp/message.h" bodystart="1739" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1_1embed__type_1a4ba6eefd11e5a71ba71cd88a2fbb6f11" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string dpp::embed_type::emt_link</definition>
        <argsstring></argsstring>
        <name>emt_link</name>
        <initializer>= &quot;link&quot;</initializer>
        <briefdescription>
<para>Link URL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1759" column="19" bodyfile="include/dpp/message.h" bodystart="1759" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1_1embed__type_1a3b4603837d99748accdf78eb8f5af513" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string dpp::embed_type::emt_rich</definition>
        <argsstring></argsstring>
        <name>emt_rich</name>
        <initializer>= &quot;rich&quot;</initializer>
        <briefdescription>
<para>Rich text. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1734" column="19" bodyfile="include/dpp/message.h" bodystart="1734" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1_1embed__type_1ab52c3b0ffdd666989752dbc5d1085f55" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string dpp::embed_type::emt_video</definition>
        <argsstring></argsstring>
        <name>emt_video</name>
        <initializer>= &quot;video&quot;</initializer>
        <briefdescription>
<para>Video link. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1744" column="19" bodyfile="include/dpp/message.h" bodystart="1744" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents possible values for the <ref refid="structdpp_1_1embed" kindref="compound">dpp::embed</ref> type field. These are loosely defined by the API docs and do not influence how the client renders embeds. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>The only type a bot can send is <ref refid="namespacedpp_1_1embed__type_1a3b4603837d99748accdf78eb8f5af513" kindref="member">dpp::embed_type::emt_rich</ref>. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/dpp/message.h" line="1730" column="1"/>
  </compounddef>
</doxygen>
