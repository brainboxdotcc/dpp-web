<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classhttplib_1_1_client" kind="class" language="C++" prot="public">
    <compoundname>httplib::Client</compoundname>
    <includes local="no">httplib.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhttplib_1_1_client_1a166c5565aa3dc674e4bdac3df8259576" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classhttplib_1_1_client_impl" kindref="compound">ClientImpl</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ClientImpl&gt; httplib::Client::cli_</definition>
        <argsstring></argsstring>
        <name>cli_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1363" column="19" bodyfile="include/dpp/httplib.h" bodystart="1363" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhttplib_1_1_client_1acab4a18625dddcb10db1f909e40f1fc1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>httplib::Client::Client</definition>
        <argsstring>(const char *scheme_host_port)</argsstring>
        <name>Client</name>
        <param>
          <type>const char *</type>
          <declname>scheme_host_port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1168" column="12" bodyfile="src/dpp/httplib.cpp" bodystart="5754" bodyend="5755"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ab8dbf72575b6f745efec170c0124f90b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>httplib::Client::Client</definition>
        <argsstring>(const char *scheme_host_port, const std::string &amp;client_cert_path, const std::string &amp;client_key_path)</argsstring>
        <name>Client</name>
        <param>
          <type>const char *</type>
          <declname>scheme_host_port</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>client_cert_path</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>client_key_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1170" column="12" bodyfile="src/dpp/httplib.cpp" bodystart="5757" bodyend="5797"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ac1e3fe4d5dc168033b8654f2f2f3b56a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>httplib::Client::Client</definition>
        <argsstring>(const std::string &amp;host, int port)</argsstring>
        <name>Client</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1175" column="12" bodyfile="src/dpp/httplib.cpp" bodystart="5799" bodyend="5800"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a3070ee4faee48d3b668e39df82450b53" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>httplib::Client::Client</definition>
        <argsstring>(const std::string &amp;host, int port, const std::string &amp;client_cert_path, const std::string &amp;client_key_path)</argsstring>
        <name>Client</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>client_cert_path</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>client_key_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1177" column="12" bodyfile="src/dpp/httplib.cpp" bodystart="5802" bodyend="5806"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a0efae6b84c68ded689ef31e0dd856f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>httplib::Client::~Client</definition>
        <argsstring>()</argsstring>
        <name>~Client</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1181" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a98220aab6695ad08bba0b93842665946" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Client::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1183" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="5810" bodyend="5812"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1af1c3efa6ddaff4911c5a568e583961a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1185" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5814" bodyend="5814"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1aa68471660716c8380ea501faa63894b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, const Headers &amp;headers)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1186" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5815" bodyend="5817"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ab00a7c063bbf1b5a8f9b47be5d890833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, Progress progress)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ac816c86c4eb6af0ee03fb35059631b3c" kindref="member">Progress</ref></type>
          <declname>progress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1187" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5818" bodyend="5820"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a457abfcc0c9d8a4f8f4a1a1c0ee615f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, const Headers &amp;headers, Progress progress)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ac816c86c4eb6af0ee03fb35059631b3c" kindref="member">Progress</ref></type>
          <declname>progress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1188" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5821" bodyend="5824"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a6552ae064751240b4006429c4ab4e717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, ContentReceiver content_receiver)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>content_receiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1189" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5825" bodyend="5827"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ac8ce2c864eb5a17f0ebbe25a0976d8ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, const Headers &amp;headers, ContentReceiver content_receiver)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>content_receiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1190" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5828" bodyend="5831"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a2fa7cf4c1a89303668a421ff85747c5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, ContentReceiver content_receiver, Progress progress)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>content_receiver</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ac816c86c4eb6af0ee03fb35059631b3c" kindref="member">Progress</ref></type>
          <declname>progress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1192" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5832" bodyend="5835"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a4ad7eed26c001118ea745e1b8f7347f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, const Headers &amp;headers, ContentReceiver content_receiver, Progress progress)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>content_receiver</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ac816c86c4eb6af0ee03fb35059631b3c" kindref="member">Progress</ref></type>
          <declname>progress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1194" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5836" bodyend="5840"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1aba66cb5bda5f68982f748c853247c709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, ResponseHandler response_handler, ContentReceiver content_receiver)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad81ce13409edba1589c0b076b2dfab74" kindref="member">ResponseHandler</ref></type>
          <declname>response_handler</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>content_receiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1196" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5841" bodyend="5845"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a95ee9c69533d277e09545b3f31e1e651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, const Headers &amp;headers, ResponseHandler response_handler, ContentReceiver content_receiver)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad81ce13409edba1589c0b076b2dfab74" kindref="member">ResponseHandler</ref></type>
          <declname>response_handler</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>content_receiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1198" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5846" bodyend="5851"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a041d4735855646c0aa728245f3f6ddac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, const Headers &amp;headers, ResponseHandler response_handler, ContentReceiver content_receiver, Progress progress)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad81ce13409edba1589c0b076b2dfab74" kindref="member">ResponseHandler</ref></type>
          <declname>response_handler</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>content_receiver</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ac816c86c4eb6af0ee03fb35059631b3c" kindref="member">Progress</ref></type>
          <declname>progress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1201" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5857" bodyend="5862"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a74411a22eafb4085a54348a4e14a5083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, ResponseHandler response_handler, ContentReceiver content_receiver, Progress progress)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad81ce13409edba1589c0b076b2dfab74" kindref="member">ResponseHandler</ref></type>
          <declname>response_handler</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>content_receiver</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ac816c86c4eb6af0ee03fb35059631b3c" kindref="member">Progress</ref></type>
          <declname>progress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1204" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5852" bodyend="5856"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ad7fb77aacfcb62f3a75e0313b523aca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, const Params &amp;params, const Headers &amp;headers, Progress progress=nullptr)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a51ce06867e711ba5095eff9d606e802e" kindref="member">Params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ac816c86c4eb6af0ee03fb35059631b3c" kindref="member">Progress</ref></type>
          <declname>progress</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1207" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5863" bodyend="5866"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a80c56b694236e36c45d7412069eafd47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, const Params &amp;params, const Headers &amp;headers, ContentReceiver content_receiver, Progress progress=nullptr)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a51ce06867e711ba5095eff9d606e802e" kindref="member">Params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>content_receiver</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ac816c86c4eb6af0ee03fb35059631b3c" kindref="member">Progress</ref></type>
          <declname>progress</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1209" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5867" bodyend="5871"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a91b4139f8918501fcb715a133d9fbed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Get</definition>
        <argsstring>(const char *path, const Params &amp;params, const Headers &amp;headers, ResponseHandler response_handler, ContentReceiver content_receiver, Progress progress=nullptr)</argsstring>
        <name>Get</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a51ce06867e711ba5095eff9d606e802e" kindref="member">Params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad81ce13409edba1589c0b076b2dfab74" kindref="member">ResponseHandler</ref></type>
          <declname>response_handler</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ad7425937de0bafb891b0b7cae87dc368" kindref="member">ContentReceiver</ref></type>
          <declname>content_receiver</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1ac816c86c4eb6af0ee03fb35059631b3c" kindref="member">Progress</ref></type>
          <declname>progress</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1211" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5872" bodyend="5878"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a4e02dc9525dca2ecf4629011928eab4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Head</definition>
        <argsstring>(const char *path)</argsstring>
        <name>Head</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1215" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5880" bodyend="5880"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a762bb15acfad34fbb735867249446dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Head</definition>
        <argsstring>(const char *path, const Headers &amp;headers)</argsstring>
        <name>Head</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1216" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5881" bodyend="5883"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1adf2501e2908cb1b058cf80dd991141a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1218" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5885" bodyend="5885"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a87e50d91d66f61f8c1d609a56276b7a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path, const char *body, size_t content_length, const char *content_type)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1219" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5886" bodyend="5889"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ae499ee284d48148d657652693ff49f0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path, const Headers &amp;headers, const char *body, size_t content_length, const char *content_type)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1221" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5890" bodyend="5894"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1aaacf38a9a93011ce753712bab0c1b5a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path, const std::string &amp;body, const char *content_type)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1223" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5895" bodyend="5898"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a1613b783d682eeb179faed969f8aca54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path, const Headers &amp;headers, const std::string &amp;body, const char *content_type)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1225" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5899" bodyend="5902"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a3290364a5ca72fed19f04afc28d62823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path, size_t content_length, ContentProvider content_provider, const char *content_type)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1aa14ad56981e64fa7d4972a812866fa22" kindref="member">ContentProvider</ref></type>
          <declname>content_provider</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1227" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5903" bodyend="5908"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1af545fdde5ae28ad83c04354ec2642b33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path, ContentProviderWithoutLength content_provider, const char *content_type)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1a42a80bc400ea2d522021461ca6df2fb6" kindref="member">ContentProviderWithoutLength</ref></type>
          <declname>content_provider</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1229" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5909" bodyend="5913"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ac74cf4e2608971a411985f3d6cd25c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path, const Headers &amp;headers, size_t content_length, ContentProvider content_provider, const char *content_type)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1aa14ad56981e64fa7d4972a812866fa22" kindref="member">ContentProvider</ref></type>
          <declname>content_provider</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1231" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5914" bodyend="5920"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ab79919d21544ed954816104bf0cb7609" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path, const Headers &amp;headers, ContentProviderWithoutLength content_provider, const char *content_type)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1a42a80bc400ea2d522021461ca6df2fb6" kindref="member">ContentProviderWithoutLength</ref></type>
          <declname>content_provider</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1233" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5921" bodyend="5925"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1af4ab38e7bf2c7e9dc3b42decef3b3c83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path, const Params &amp;params)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a51ce06867e711ba5095eff9d606e802e" kindref="member">Params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1236" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5926" bodyend="5928"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a5d2688aec4509a9fd6a7c18fba2ee1b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path, const Headers &amp;headers, const Params &amp;params)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a51ce06867e711ba5095eff9d606e802e" kindref="member">Params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1237" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5929" bodyend="5932"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a86f5d31eed9dcc601e085f2cf131506a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path, const MultipartFormDataItems &amp;items)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1aa11ee6a4c1dff67ab2a75631d9c43705" kindref="member">MultipartFormDataItems</ref> &amp;</type>
          <declname>items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1238" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5933" bodyend="5936"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a41af31144e683ed653e77d9c1bb4bbc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path, const Headers &amp;headers, const MultipartFormDataItems &amp;items)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1aa11ee6a4c1dff67ab2a75631d9c43705" kindref="member">MultipartFormDataItems</ref> &amp;</type>
          <declname>items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1239" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5937" bodyend="5940"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a9d8f84722f0e9856d014991583715c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Post</definition>
        <argsstring>(const char *path, const Headers &amp;headers, const MultipartFormDataItems &amp;items, const std::string &amp;boundary)</argsstring>
        <name>Post</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1aa11ee6a4c1dff67ab2a75631d9c43705" kindref="member">MultipartFormDataItems</ref> &amp;</type>
          <declname>items</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>boundary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1241" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5941" bodyend="5945"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ab3215c5479d00bc8b7e47c7c972cd65b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Put</definition>
        <argsstring>(const char *path)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1243" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5946" bodyend="5946"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a629f37e2d42f1a9373dbd56cad4ed056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Put</definition>
        <argsstring>(const char *path, const char *body, size_t content_length, const char *content_type)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1244" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5947" bodyend="5950"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a6caaf3873ad368e3c7af558cbbb8e22f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Put</definition>
        <argsstring>(const char *path, const Headers &amp;headers, const char *body, size_t content_length, const char *content_type)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1246" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5951" bodyend="5955"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a01b576f14d61b1b6c2dab437860393f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Put</definition>
        <argsstring>(const char *path, const std::string &amp;body, const char *content_type)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1248" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5956" bodyend="5959"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a086a6c86a5a4417f447e2cf6ee93ca54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Put</definition>
        <argsstring>(const char *path, const Headers &amp;headers, const std::string &amp;body, const char *content_type)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1250" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5960" bodyend="5963"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a3ee9ccc0c8d7c37511be6352294a6822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Put</definition>
        <argsstring>(const char *path, size_t content_length, ContentProvider content_provider, const char *content_type)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1aa14ad56981e64fa7d4972a812866fa22" kindref="member">ContentProvider</ref></type>
          <declname>content_provider</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1252" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5964" bodyend="5969"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ae544545cd77db3ee037567fe87f05cd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Put</definition>
        <argsstring>(const char *path, ContentProviderWithoutLength content_provider, const char *content_type)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1a42a80bc400ea2d522021461ca6df2fb6" kindref="member">ContentProviderWithoutLength</ref></type>
          <declname>content_provider</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1254" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5970" bodyend="5974"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a187d1012f645b1d86594b40daad481d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Put</definition>
        <argsstring>(const char *path, const Headers &amp;headers, size_t content_length, ContentProvider content_provider, const char *content_type)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1aa14ad56981e64fa7d4972a812866fa22" kindref="member">ContentProvider</ref></type>
          <declname>content_provider</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1256" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5975" bodyend="5981"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ad52894c9d2d9021a514f118de2acac72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Put</definition>
        <argsstring>(const char *path, const Headers &amp;headers, ContentProviderWithoutLength content_provider, const char *content_type)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1a42a80bc400ea2d522021461ca6df2fb6" kindref="member">ContentProviderWithoutLength</ref></type>
          <declname>content_provider</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1258" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5982" bodyend="5986"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a05751d17d63d5b2389022fb131273d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Put</definition>
        <argsstring>(const char *path, const Params &amp;params)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a51ce06867e711ba5095eff9d606e802e" kindref="member">Params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1261" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5987" bodyend="5989"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a28b64a3e142f795f498806aec7cbad3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Put</definition>
        <argsstring>(const char *path, const Headers &amp;headers, const Params &amp;params)</argsstring>
        <name>Put</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a51ce06867e711ba5095eff9d606e802e" kindref="member">Params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1262" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5990" bodyend="5993"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a41bea22e9dc5e293eb36c6df7a78011c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Patch</definition>
        <argsstring>(const char *path)</argsstring>
        <name>Patch</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1263" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5994" bodyend="5994"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a70cbbd267ed795f825e18d0593f026c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Patch</definition>
        <argsstring>(const char *path, const char *body, size_t content_length, const char *content_type)</argsstring>
        <name>Patch</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1264" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5995" bodyend="5998"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1af642a968193cabbee3d4cbcf0ca98210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Patch</definition>
        <argsstring>(const char *path, const Headers &amp;headers, const char *body, size_t content_length, const char *content_type)</argsstring>
        <name>Patch</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1266" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="5999" bodyend="6003"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a6dc7bfe893fa4a50ca9abd2b4c8a4379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Patch</definition>
        <argsstring>(const char *path, const std::string &amp;body, const char *content_type)</argsstring>
        <name>Patch</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1268" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6004" bodyend="6007"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ac7e3460813b2c20234ec60b65efc1f00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Patch</definition>
        <argsstring>(const char *path, const Headers &amp;headers, const std::string &amp;body, const char *content_type)</argsstring>
        <name>Patch</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1270" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6008" bodyend="6011"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ad4b733b5e39342fd14a263301eb2fd33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Patch</definition>
        <argsstring>(const char *path, size_t content_length, ContentProvider content_provider, const char *content_type)</argsstring>
        <name>Patch</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1aa14ad56981e64fa7d4972a812866fa22" kindref="member">ContentProvider</ref></type>
          <declname>content_provider</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1272" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6012" bodyend="6017"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a86d404df4030bf2b9c45cfb62a9ab862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Patch</definition>
        <argsstring>(const char *path, ContentProviderWithoutLength content_provider, const char *content_type)</argsstring>
        <name>Patch</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1a42a80bc400ea2d522021461ca6df2fb6" kindref="member">ContentProviderWithoutLength</ref></type>
          <declname>content_provider</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1274" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6018" bodyend="6022"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1adee53fb80ddd431cc75c76d7244ac9b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Patch</definition>
        <argsstring>(const char *path, const Headers &amp;headers, size_t content_length, ContentProvider content_provider, const char *content_type)</argsstring>
        <name>Patch</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1aa14ad56981e64fa7d4972a812866fa22" kindref="member">ContentProvider</ref></type>
          <declname>content_provider</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1276" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6023" bodyend="6029"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a52e2eb9bfd98df07a3451f95c84518b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Patch</definition>
        <argsstring>(const char *path, const Headers &amp;headers, ContentProviderWithoutLength content_provider, const char *content_type)</argsstring>
        <name>Patch</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1a42a80bc400ea2d522021461ca6df2fb6" kindref="member">ContentProviderWithoutLength</ref></type>
          <declname>content_provider</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1278" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6030" bodyend="6034"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a4c950e4e1e55511f98a82b683fc5719b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Delete</definition>
        <argsstring>(const char *path)</argsstring>
        <name>Delete</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1282" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6035" bodyend="6035"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1aedd169e3087f1711ab56b62d56ef5467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Delete</definition>
        <argsstring>(const char *path, const Headers &amp;headers)</argsstring>
        <name>Delete</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1283" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6036" bodyend="6038"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ae023ebeeb54bab391d0c9195472bd751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Delete</definition>
        <argsstring>(const char *path, const char *body, size_t content_length, const char *content_type)</argsstring>
        <name>Delete</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1284" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6039" bodyend="6042"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ae0c08a509268da0d687b89572409b2cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Delete</definition>
        <argsstring>(const char *path, const Headers &amp;headers, const char *body, size_t content_length, const char *content_type)</argsstring>
        <name>Delete</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>content_length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1286" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6043" bodyend="6047"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a5412423089a44781f672777d70399e43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Delete</definition>
        <argsstring>(const char *path, const std::string &amp;body, const char *content_type)</argsstring>
        <name>Delete</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1288" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6048" bodyend="6051"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1afd63d1b156fdda53ec5c0dede1332de2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Delete</definition>
        <argsstring>(const char *path, const Headers &amp;headers, const std::string &amp;body, const char *content_type)</argsstring>
        <name>Delete</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1290" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6052" bodyend="6056"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1aee039968945d6f36ee41d9bbf7292aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Options</definition>
        <argsstring>(const char *path)</argsstring>
        <name>Options</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1293" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6057" bodyend="6057"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1acadc8ffe211ce83dcb30cf2778ea854c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::Options</definition>
        <argsstring>(const char *path, const Headers &amp;headers)</argsstring>
        <name>Options</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref> &amp;</type>
          <declname>headers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1294" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6058" bodyend="6060"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a2fc142bf82d7cfd8e00fec72fd4b0483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool httplib::Client::send</definition>
        <argsstring>(Request &amp;req, Response &amp;res, Error &amp;error)</argsstring>
        <name>send</name>
        <param>
          <type><ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structhttplib_1_1_response" kindref="compound">Response</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type><ref refid="namespacehttplib_1a46ff5da925971ebebf2c5693e367f24a" kindref="member">Error</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1296" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6062" bodyend="6064"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ac5f8cc61fdf28bdcc2f42ae7be4876ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhttplib_1_1_result" kindref="compound">Result</ref></type>
        <definition>Result httplib::Client::send</definition>
        <argsstring>(const Request &amp;req)</argsstring>
        <name>send</name>
        <param>
          <type>const <ref refid="structhttplib_1_1_request" kindref="compound">Request</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1297" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6066" bodyend="6066"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a957657b5e4eed5143bc9e864c85f4e49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t httplib::Client::is_socket_open</definition>
        <argsstring>() const</argsstring>
        <name>is_socket_open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1299" column="10" bodyfile="src/dpp/httplib.cpp" bodystart="6068" bodyend="6068"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a7f62962b9cf2b4ccfb8b1e56f7b1c73e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1301" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6070" bodyend="6070"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a3b3421fe564e5a23d0e852a32b26d180" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_default_headers</definition>
        <argsstring>(Headers headers)</argsstring>
        <name>set_default_headers</name>
        <param>
          <type><ref refid="namespacehttplib_1a6fb30cf4bb44485bee38481e46ab8dc5" kindref="member">Headers</ref></type>
          <declname>headers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1303" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6072" bodyend="6074"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1aae0313741e38d07ca71f35a15ae4ef7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_address_family</definition>
        <argsstring>(int family)</argsstring>
        <name>set_address_family</name>
        <param>
          <type>int</type>
          <declname>family</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1305" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6076" bodyend="6078"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a7761c3a60043f36fed08e37f49ac7ec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_tcp_nodelay</definition>
        <argsstring>(bool on)</argsstring>
        <name>set_tcp_nodelay</name>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1306" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6080" bodyend="6080"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ad9a4b2b48a8846edcf2d8ac0a0b43b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_socket_options</definition>
        <argsstring>(SocketOptions socket_options)</argsstring>
        <name>set_socket_options</name>
        <param>
          <type><ref refid="namespacehttplib_1a02305f842f48963eb2ed425ee5d1655d" kindref="member">SocketOptions</ref></type>
          <declname>socket_options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1307" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6082" bodyend="6084"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a1a2ec5ab22fc35e8eb6ff743f25f7c8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_connection_timeout</definition>
        <argsstring>(time_t sec, time_t usec=0)</argsstring>
        <name>set_connection_timeout</name>
        <param>
          <type>time_t</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>usec</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1309" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6086" bodyend="6088"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a2538d8e239e241f965b19ed61b444473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Rep</type>
          </param>
          <param>
            <type>class Period</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void httplib::Client::set_connection_timeout</definition>
        <argsstring>(const std::chrono::duration&lt; Rep, Period &gt; &amp;duration)</argsstring>
        <name>set_connection_timeout</name>
        <param>
          <type>const std::chrono::duration&lt; Rep, Period &gt; &amp;</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1312" column="3" bodyfile="src/dpp/httplib.cpp" bodystart="6091" bodyend="6094"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a04f4d6222d258e9f7a6e35b8e52d2f07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_read_timeout</definition>
        <argsstring>(time_t sec, time_t usec=0)</argsstring>
        <name>set_read_timeout</name>
        <param>
          <type>time_t</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>usec</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1314" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6096" bodyend="6098"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a89ed7656f66578acbf33f88171eda244" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Rep</type>
          </param>
          <param>
            <type>class Period</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void httplib::Client::set_read_timeout</definition>
        <argsstring>(const std::chrono::duration&lt; Rep, Period &gt; &amp;duration)</argsstring>
        <name>set_read_timeout</name>
        <param>
          <type>const std::chrono::duration&lt; Rep, Period &gt; &amp;</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1316" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6102" bodyend="6104"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1aa50122e280b7ee8a2b7ae99b1188c20c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_write_timeout</definition>
        <argsstring>(time_t sec, time_t usec=0)</argsstring>
        <name>set_write_timeout</name>
        <param>
          <type>time_t</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>usec</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1318" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6106" bodyend="6108"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1aa90bff441f435eabe7463944652164bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Rep</type>
          </param>
          <param>
            <type>class Period</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void httplib::Client::set_write_timeout</definition>
        <argsstring>(const std::chrono::duration&lt; Rep, Period &gt; &amp;duration)</argsstring>
        <name>set_write_timeout</name>
        <param>
          <type>const std::chrono::duration&lt; Rep, Period &gt; &amp;</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1320" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6112" bodyend="6114"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a478aff2fd8576ee494fa70b146a90cb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_basic_auth</definition>
        <argsstring>(const char *username, const char *password)</argsstring>
        <name>set_basic_auth</name>
        <param>
          <type>const char *</type>
          <declname>username</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>password</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1322" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6116" bodyend="6118"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ab490d6018a13164ef806ff7d3a84fd96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_bearer_token_auth</definition>
        <argsstring>(const char *token)</argsstring>
        <name>set_bearer_token_auth</name>
        <param>
          <type>const char *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1323" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6119" bodyend="6121"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a7bb8cf9f88dfcdb3b0e424f83e1d54dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_keep_alive</definition>
        <argsstring>(bool on)</argsstring>
        <name>set_keep_alive</name>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1328" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6129" bodyend="6129"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a9a8292a1d7fbf1fc003d97a0acc75515" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_follow_location</definition>
        <argsstring>(bool on)</argsstring>
        <name>set_follow_location</name>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1329" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6130" bodyend="6132"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ae7adbe1d5f58cfb7d95482312f0637a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_compress</definition>
        <argsstring>(bool on)</argsstring>
        <name>set_compress</name>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1331" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6134" bodyend="6134"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a9204d9b115ffc45a7c6d3d7abe28981f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_decompress</definition>
        <argsstring>(bool on)</argsstring>
        <name>set_decompress</name>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1333" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6136" bodyend="6136"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1aae9e2b107c5ab4587fac92efc6203a7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_interface</definition>
        <argsstring>(const char *intf)</argsstring>
        <name>set_interface</name>
        <param>
          <type>const char *</type>
          <declname>intf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1335" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6138" bodyend="6140"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1acbef30816a206d8f7c275dd2e907e890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_proxy</definition>
        <argsstring>(const char *host, int port)</argsstring>
        <name>set_proxy</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1337" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6142" bodyend="6144"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a06a397696cab14e2d19adf2032b72c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_proxy_basic_auth</definition>
        <argsstring>(const char *username, const char *password)</argsstring>
        <name>set_proxy_basic_auth</name>
        <param>
          <type>const char *</type>
          <declname>username</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>password</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1338" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6145" bodyend="6148"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1a9ecf743d06a7f6f3e1458dc527549adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_proxy_bearer_token_auth</definition>
        <argsstring>(const char *token)</argsstring>
        <name>set_proxy_bearer_token_auth</name>
        <param>
          <type>const char *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1339" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6149" bodyend="6151"/>
      </memberdef>
      <memberdef kind="function" id="classhttplib_1_1_client_1ad613d950415ffe6c83b7bf72fac5e537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void httplib::Client::set_logger</definition>
        <argsstring>(Logger logger)</argsstring>
        <name>set_logger</name>
        <param>
          <type><ref refid="namespacehttplib_1a45a8a23366055bec6273922974cff156" kindref="member">Logger</ref></type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httplib.h" line="1348" column="8" bodyfile="src/dpp/httplib.cpp" bodystart="6165" bodyend="6165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dpp/httplib.h" line="1165" column="1" bodyfile="include/dpp/httplib.h" bodystart="1165" bodyend="1368"/>
    <listofallmembers>
      <member refid="classhttplib_1_1_client_1a166c5565aa3dc674e4bdac3df8259576" prot="private" virt="non-virtual"><scope>httplib::Client</scope><name>cli_</name></member>
      <member refid="classhttplib_1_1_client_1acab4a18625dddcb10db1f909e40f1fc1" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Client</name></member>
      <member refid="classhttplib_1_1_client_1ab8dbf72575b6f745efec170c0124f90b" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Client</name></member>
      <member refid="classhttplib_1_1_client_1ac1e3fe4d5dc168033b8654f2f2f3b56a" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Client</name></member>
      <member refid="classhttplib_1_1_client_1a3070ee4faee48d3b668e39df82450b53" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Client</name></member>
      <member refid="classhttplib_1_1_client_1a4c950e4e1e55511f98a82b683fc5719b" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Delete</name></member>
      <member refid="classhttplib_1_1_client_1aedd169e3087f1711ab56b62d56ef5467" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Delete</name></member>
      <member refid="classhttplib_1_1_client_1ae023ebeeb54bab391d0c9195472bd751" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Delete</name></member>
      <member refid="classhttplib_1_1_client_1ae0c08a509268da0d687b89572409b2cf" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Delete</name></member>
      <member refid="classhttplib_1_1_client_1a5412423089a44781f672777d70399e43" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Delete</name></member>
      <member refid="classhttplib_1_1_client_1afd63d1b156fdda53ec5c0dede1332de2" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Delete</name></member>
      <member refid="classhttplib_1_1_client_1af1c3efa6ddaff4911c5a568e583961a4" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1aa68471660716c8380ea501faa63894b8" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1ab00a7c063bbf1b5a8f9b47be5d890833" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1a457abfcc0c9d8a4f8f4a1a1c0ee615f3" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1a6552ae064751240b4006429c4ab4e717" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1ac8ce2c864eb5a17f0ebbe25a0976d8ad" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1a2fa7cf4c1a89303668a421ff85747c5a" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1a4ad7eed26c001118ea745e1b8f7347f5" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1aba66cb5bda5f68982f748c853247c709" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1a95ee9c69533d277e09545b3f31e1e651" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1a041d4735855646c0aa728245f3f6ddac" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1a74411a22eafb4085a54348a4e14a5083" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1ad7fb77aacfcb62f3a75e0313b523aca7" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1a80c56b694236e36c45d7412069eafd47" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1a91b4139f8918501fcb715a133d9fbed5" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Get</name></member>
      <member refid="classhttplib_1_1_client_1a4e02dc9525dca2ecf4629011928eab4c" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Head</name></member>
      <member refid="classhttplib_1_1_client_1a762bb15acfad34fbb735867249446dd0" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Head</name></member>
      <member refid="classhttplib_1_1_client_1a957657b5e4eed5143bc9e864c85f4e49" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>is_socket_open</name></member>
      <member refid="classhttplib_1_1_client_1a98220aab6695ad08bba0b93842665946" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>is_valid</name></member>
      <member refid="classhttplib_1_1_client_1aee039968945d6f36ee41d9bbf7292aa8" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Options</name></member>
      <member refid="classhttplib_1_1_client_1acadc8ffe211ce83dcb30cf2778ea854c" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Options</name></member>
      <member refid="classhttplib_1_1_client_1a41bea22e9dc5e293eb36c6df7a78011c" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Patch</name></member>
      <member refid="classhttplib_1_1_client_1a70cbbd267ed795f825e18d0593f026c5" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Patch</name></member>
      <member refid="classhttplib_1_1_client_1af642a968193cabbee3d4cbcf0ca98210" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Patch</name></member>
      <member refid="classhttplib_1_1_client_1a6dc7bfe893fa4a50ca9abd2b4c8a4379" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Patch</name></member>
      <member refid="classhttplib_1_1_client_1ac7e3460813b2c20234ec60b65efc1f00" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Patch</name></member>
      <member refid="classhttplib_1_1_client_1ad4b733b5e39342fd14a263301eb2fd33" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Patch</name></member>
      <member refid="classhttplib_1_1_client_1a86d404df4030bf2b9c45cfb62a9ab862" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Patch</name></member>
      <member refid="classhttplib_1_1_client_1adee53fb80ddd431cc75c76d7244ac9b0" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Patch</name></member>
      <member refid="classhttplib_1_1_client_1a52e2eb9bfd98df07a3451f95c84518b9" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Patch</name></member>
      <member refid="classhttplib_1_1_client_1adf2501e2908cb1b058cf80dd991141a6" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1a87e50d91d66f61f8c1d609a56276b7a6" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1ae499ee284d48148d657652693ff49f0c" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1aaacf38a9a93011ce753712bab0c1b5a3" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1a1613b783d682eeb179faed969f8aca54" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1a3290364a5ca72fed19f04afc28d62823" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1af545fdde5ae28ad83c04354ec2642b33" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1ac74cf4e2608971a411985f3d6cd25c1a" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1ab79919d21544ed954816104bf0cb7609" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1af4ab38e7bf2c7e9dc3b42decef3b3c83" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1a5d2688aec4509a9fd6a7c18fba2ee1b4" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1a86f5d31eed9dcc601e085f2cf131506a" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1a41af31144e683ed653e77d9c1bb4bbc9" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1a9d8f84722f0e9856d014991583715c95" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Post</name></member>
      <member refid="classhttplib_1_1_client_1ab3215c5479d00bc8b7e47c7c972cd65b" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_client_1a629f37e2d42f1a9373dbd56cad4ed056" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_client_1a6caaf3873ad368e3c7af558cbbb8e22f" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_client_1a01b576f14d61b1b6c2dab437860393f5" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_client_1a086a6c86a5a4417f447e2cf6ee93ca54" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_client_1a3ee9ccc0c8d7c37511be6352294a6822" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_client_1ae544545cd77db3ee037567fe87f05cd6" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_client_1a187d1012f645b1d86594b40daad481d6" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_client_1ad52894c9d2d9021a514f118de2acac72" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_client_1a05751d17d63d5b2389022fb131273d79" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_client_1a28b64a3e142f795f498806aec7cbad3c" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>Put</name></member>
      <member refid="classhttplib_1_1_client_1a2fc142bf82d7cfd8e00fec72fd4b0483" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>send</name></member>
      <member refid="classhttplib_1_1_client_1ac5f8cc61fdf28bdcc2f42ae7be4876ba" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>send</name></member>
      <member refid="classhttplib_1_1_client_1aae0313741e38d07ca71f35a15ae4ef7e" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_address_family</name></member>
      <member refid="classhttplib_1_1_client_1a478aff2fd8576ee494fa70b146a90cb8" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_basic_auth</name></member>
      <member refid="classhttplib_1_1_client_1ab490d6018a13164ef806ff7d3a84fd96" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_bearer_token_auth</name></member>
      <member refid="classhttplib_1_1_client_1ae7adbe1d5f58cfb7d95482312f0637a1" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_compress</name></member>
      <member refid="classhttplib_1_1_client_1a1a2ec5ab22fc35e8eb6ff743f25f7c8f" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_connection_timeout</name></member>
      <member refid="classhttplib_1_1_client_1a2538d8e239e241f965b19ed61b444473" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_connection_timeout</name></member>
      <member refid="classhttplib_1_1_client_1a9204d9b115ffc45a7c6d3d7abe28981f" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_decompress</name></member>
      <member refid="classhttplib_1_1_client_1a3b3421fe564e5a23d0e852a32b26d180" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_default_headers</name></member>
      <member refid="classhttplib_1_1_client_1a9a8292a1d7fbf1fc003d97a0acc75515" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_follow_location</name></member>
      <member refid="classhttplib_1_1_client_1aae9e2b107c5ab4587fac92efc6203a7d" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_interface</name></member>
      <member refid="classhttplib_1_1_client_1a7bb8cf9f88dfcdb3b0e424f83e1d54dc" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_keep_alive</name></member>
      <member refid="classhttplib_1_1_client_1ad613d950415ffe6c83b7bf72fac5e537" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_logger</name></member>
      <member refid="classhttplib_1_1_client_1acbef30816a206d8f7c275dd2e907e890" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_proxy</name></member>
      <member refid="classhttplib_1_1_client_1a06a397696cab14e2d19adf2032b72c38" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_proxy_basic_auth</name></member>
      <member refid="classhttplib_1_1_client_1a9ecf743d06a7f6f3e1458dc527549adc" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_proxy_bearer_token_auth</name></member>
      <member refid="classhttplib_1_1_client_1a04f4d6222d258e9f7a6e35b8e52d2f07" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_read_timeout</name></member>
      <member refid="classhttplib_1_1_client_1a89ed7656f66578acbf33f88171eda244" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_read_timeout</name></member>
      <member refid="classhttplib_1_1_client_1ad9a4b2b48a8846edcf2d8ac0a0b43b27" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_socket_options</name></member>
      <member refid="classhttplib_1_1_client_1a7761c3a60043f36fed08e37f49ac7ec0" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_tcp_nodelay</name></member>
      <member refid="classhttplib_1_1_client_1aa50122e280b7ee8a2b7ae99b1188c20c" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_write_timeout</name></member>
      <member refid="classhttplib_1_1_client_1aa90bff441f435eabe7463944652164bb" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>set_write_timeout</name></member>
      <member refid="classhttplib_1_1_client_1a7f62962b9cf2b4ccfb8b1e56f7b1c73e" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>stop</name></member>
      <member refid="classhttplib_1_1_client_1a0efae6b84c68ded689ef31e0dd856f6a" prot="public" virt="non-virtual"><scope>httplib::Client</scope><name>~Client</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
