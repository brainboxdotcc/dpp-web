<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4" kind="struct" language="C++" prot="public">
    <compoundname>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</compoundname>
    <basecompoundref refid="structformatter_3_01std_1_1tm_00_01_char_01_4" prot="public" virt="non-virtual">formatter&lt; std::tm, Char &gt;</basecompoundref>
    <includes local="no">chrono.h</includes>
    <templateparamlist>
      <param>
        <type>typename Char</type>
      </param>
      <param>
        <type>typename Duration</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4_1a8898f445d0746802466f9656269c31a1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const Char</type>
        <definition>constexpr const Char formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;::default_specs</definition>
        <argsstring>[]</argsstring>
        <name>default_specs</name>
        <initializer>= {&apos;%&apos;, &apos;F&apos;, &apos; &apos;, &apos;%&apos;, &apos;T&apos;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="2006" column="31" bodyfile="include/dpp/fmt/chrono.h" bodystart="2006" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4_1ab5427d990dadee68e7a7f06213451832" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FMT_CONSTEXPR</type>
        <definition>FMT_CONSTEXPR formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;::formatter</definition>
        <argsstring>()</argsstring>
        <name>formatter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="1990" column="17" bodyfile="include/dpp/fmt/chrono.h" bodystart="1990" bodyend="1993"/>
      </memberdef>
      <memberdef kind="function" id="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4_1a77575b6aa0596de28a0ed1518ca1721b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ParseContext</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR auto</type>
        <definition>FMT_CONSTEXPR auto formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;::parse</definition>
        <argsstring>(ParseContext &amp;ctx) -&gt; decltype(ctx.begin())</argsstring>
        <name>parse</name>
        <param>
          <type>ParseContext &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="1996" column="22" bodyfile="include/dpp/fmt/chrono.h" bodystart="1996" bodyend="1998"/>
      </memberdef>
      <memberdef kind="function" id="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4_1a2c0358f7d70d8567e5ffc017ead1f996" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FormatContext</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;::format</definition>
        <argsstring>(std::chrono::time_point&lt; std::chrono::system_clock &gt; val, FormatContext &amp;ctx) const -&gt; decltype(ctx.out())</argsstring>
        <name>format</name>
        <param>
          <type>std::chrono::time_point&lt; std::chrono::system_clock &gt;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>FormatContext &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="2001" column="8" bodyfile="include/dpp/fmt/chrono.h" bodystart="2001" bodyend="2004"/>
      </memberdef>
      <memberdef kind="function" id="structformatter_3_01std_1_1tm_00_01_char_01_4_1a0222d68c5e1ca97550eecb6cf60abed0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FormatContext</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto formatter&lt; std::tm, Char &gt;::format</definition>
        <argsstring>(const std::tm &amp;tm, FormatContext &amp;ctx) const -&gt; decltype(ctx.out())</argsstring>
        <name>format</name>
        <param>
          <type>const std::tm &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>FormatContext &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="2049" column="8" bodyfile="include/dpp/fmt/chrono.h" bodystart="2049" bodyend="2061"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structformatter_3_01std_1_1tm_00_01_char_01_4_1af60061db23592a957a3b7ce4be308b46" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename It</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR auto</type>
        <definition>FMT_CONSTEXPR auto formatter&lt; std::tm, Char &gt;::do_parse</definition>
        <argsstring>(It begin, It end, bool with_default=false) -&gt; It</argsstring>
        <name>do_parse</name>
        <param>
          <type>It</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>It</type>
          <declname>end</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_default</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/fmt/chrono.h" line="2026" column="22" bodyfile="include/dpp/fmt/chrono.h" bodystart="2026" bodyend="2040"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</label>
        <link refid="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>formatter&lt; std::tm, Char &gt;</label>
        <link refid="structformatter_3_01std_1_1tm_00_01_char_01_4"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</label>
        <link refid="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>default_specs</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>formatter&lt; std::tm, Char &gt;</label>
        <link refid="structformatter_3_01std_1_1tm_00_01_char_01_4"/>
      </node>
      <node id="3">
        <label>static constexpr const Char</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/fmt/chrono.h" line="1988" column="1" bodyfile="include/dpp/fmt/chrono.h" bodystart="1989" bodyend="2007"/>
    <listofallmembers>
      <member refid="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4_1a8898f445d0746802466f9656269c31a1" prot="public" virt="non-virtual"><scope>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</scope><name>default_specs</name></member>
      <member refid="structformatter_3_01std_1_1tm_00_01_char_01_4_1af60061db23592a957a3b7ce4be308b46" prot="protected" virt="non-virtual"><scope>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</scope><name>do_parse</name></member>
      <member refid="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4_1a2c0358f7d70d8567e5ffc017ead1f996" prot="public" virt="non-virtual"><scope>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</scope><name>format</name></member>
      <member refid="structformatter_3_01std_1_1tm_00_01_char_01_4_1a0222d68c5e1ca97550eecb6cf60abed0" prot="public" virt="non-virtual" ambiguityscope="formatter&lt; std::tm, Char &gt;::"><scope>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</scope><name>format</name></member>
      <member refid="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4_1ab5427d990dadee68e7a7f06213451832" prot="public" virt="non-virtual"><scope>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</scope><name>formatter</name></member>
      <member refid="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4_1a77575b6aa0596de28a0ed1518ca1721b" prot="public" virt="non-virtual"><scope>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</scope><name>parse</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
