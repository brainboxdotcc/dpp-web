<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1onboarding" kind="struct" language="C++" prot="public">
    <compoundname>dpp::onboarding</compoundname>
    <basecompoundref refid="structdpp_1_1json__interface" prot="public" virt="non-virtual">dpp::json_interface&lt; onboarding &gt;</basecompoundref>
    <includes local="no">guild.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structdpp_1_1onboarding_1afecbb1e7c6d3c31b88d655ffd70fe9f1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct json_interface&lt; onboarding &gt;</definition>
        <argsstring></argsstring>
        <name>json_interface&lt; onboarding &gt;</name>
        <param>
          <type><ref refid="structdpp_1_1json__interface" kindref="compound">json_interface</ref>&lt; <ref refid="structdpp_1_1onboarding" kindref="compound">onboarding</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1940" column="6" bodyfile="include/dpp/guild.h" bodystart="1948" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1onboarding_1ab6c12c371f98f4fedb7eff02b9a2a5b7" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref> &gt;</type>
        <definition>std::vector&lt;snowflake&gt; dpp::onboarding::default_channel_ids</definition>
        <argsstring></argsstring>
        <name>default_channel_ids</name>
        <briefdescription>
<para>Channel IDs that members get opted into automatically. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1980" column="13" bodyfile="include/dpp/guild.h" bodystart="1980" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1onboarding_1aa93c4e0e285417bea2a430be79894044" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dpp::onboarding::enabled</definition>
        <argsstring></argsstring>
        <name>enabled</name>
        <briefdescription>
<para>Whether onboarding is enabled in the guild. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1990" column="6" bodyfile="include/dpp/guild.h" bodystart="1990" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1onboarding_1a97bfd107f1a88e30349357f67da8aa7e" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::onboarding::guild_id</definition>
        <argsstring></argsstring>
        <name>guild_id</name>
        <briefdescription>
<para>ID of the guild this onboarding is part of. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1970" column="11" bodyfile="include/dpp/guild.h" bodystart="1970" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1onboarding_1ae3d9e7cc64867f0b586fc157c37aaeb5" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a33441226d2ef32001d99891aa9ed5a20" kindref="member">onboarding_mode</ref></type>
        <definition>onboarding_mode dpp::onboarding::mode</definition>
        <argsstring></argsstring>
        <name>mode</name>
        <briefdescription>
<para>Current mode of onboarding (defaults to <ref refid="namespacedpp_1a33441226d2ef32001d99891aa9ed5a20a54d375e5d80311d2811110872d30cf2b" kindref="member">dpp::gom_default</ref>) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1985" column="17" bodyfile="include/dpp/guild.h" bodystart="1985" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1onboarding_1a85cfd0e143a04b9e8de2bbb9dbbaac7a" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structdpp_1_1onboarding__prompt" kindref="compound">onboarding_prompt</ref> &gt;</type>
        <definition>std::vector&lt;onboarding_prompt&gt; dpp::onboarding::prompts</definition>
        <argsstring></argsstring>
        <name>prompts</name>
        <briefdescription>
<para>Prompts shown during onboarding and in customize community. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1975" column="13" bodyfile="include/dpp/guild.h" bodystart="1975" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structdpp_1_1onboarding_1a8e45110306b2a2370a7d0cef5c150381" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1onboarding" kindref="compound">onboarding</ref> &amp;</type>
        <definition>onboarding &amp; dpp::onboarding::fill_from_json_impl</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json_impl</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Read class values from json object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>A json object to read from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1956" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1onboarding_1ab158eff56a8fd67d532ddd9c17c67a68" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacedpp_1ae9134a9d8edf8adcb87e979bb7a7343e" kindref="member">json</ref></type>
        <definition>json dpp::onboarding::to_json_impl</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>to_json_impl</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Build the json for this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>include the id in the JSON </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>json data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1964" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1onboarding_1a9b582f07cc56795deac91093a559a9be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::onboarding::onboarding</definition>
        <argsstring>()</argsstring>
        <name>onboarding</name>
        <briefdescription>
<para>Construct a new onboarding object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1995" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1onboarding_1a5a4688b856b7b078071baf1378010841" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual dpp::onboarding::~onboarding</definition>
        <argsstring>()=default</argsstring>
        <name>~onboarding</name>
        <briefdescription>
<para>Destroy the onboarding object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="2000" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::json_interface&lt; onboarding  &gt;::build_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>build_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to json string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>std::string Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="68" column="13" bodyfile="include/dpp/json_interface.h" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdpp_1_1onboarding" kindref="compound">onboarding</ref> &amp;</type>
        <definition>onboarding  &amp; dpp::json_interface&lt; onboarding  &gt;::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Convert object from nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T&amp; Reference to self for fluent calling </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="44" column="3" bodyfile="include/dpp/json_interface.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1onboarding_1a6b81ac0ced323104c0e5d2bc6bb04590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1onboarding" kindref="compound">onboarding</ref> &amp;</type>
        <definition>onboarding &amp; dpp::onboarding::set_enabled</definition>
        <argsstring>(const bool is_enabled)</argsstring>
        <name>set_enabled</name>
        <param>
          <type>const bool</type>
          <declname>is_enabled</declname>
        </param>
        <briefdescription>
<para>Set the enabling of this onboarding object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>bool Whether onboarding is enabled in the guild </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to self, so these method calls may be chained </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="2024" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1onboarding_1a3ed0704a28c75b1d5527c95ace0203b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1onboarding" kindref="compound">onboarding</ref> &amp;</type>
        <definition>onboarding &amp; dpp::onboarding::set_guild_id</definition>
        <argsstring>(const snowflake id)</argsstring>
        <name>set_guild_id</name>
        <param>
          <type>const <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Set guild_id of this onboarding object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Guild ID to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to self, so these method calls may be chained </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="2008" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1onboarding_1a3bad9082e8ffb79595f40072ef32108c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1onboarding" kindref="compound">onboarding</ref> &amp;</type>
        <definition>onboarding &amp; dpp::onboarding::set_mode</definition>
        <argsstring>(const onboarding_mode m)</argsstring>
        <name>set_mode</name>
        <param>
          <type>const <ref refid="namespacedpp_1a33441226d2ef32001d99891aa9ed5a20" kindref="member">onboarding_mode</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Set the mode of this onboarding object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>onboarding_mode Mode to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to self, so these method calls may be chained </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="2016" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto dpp::json_interface&lt; onboarding  &gt;::to_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>to_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>json Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="56" column="6" bodyfile="include/dpp/json_interface.h" bodystart="56" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a guild&apos;s onboarding flow. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="1">
        <label>dpp::onboarding</label>
        <link refid="structdpp_1_1onboarding"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; onboarding &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; onboarding &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>bool</label>
      </node>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="1">
        <label>dpp::onboarding</label>
        <link refid="structdpp_1_1onboarding"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>default_channel_ids</edgelabel>
          <edgelabel>prompts</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>mode</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>enabled</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>dpp::snowflake</label>
        <link refid="classdpp_1_1snowflake"/>
        <childnode refid="5" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; onboarding &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; onboarding &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>onboarding_mode</label>
      </node>
      <node id="6">
        <label>vector&lt;</label>
      </node>
      <node id="5">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/guild.h" line="1946" column="1" bodyfile="include/dpp/guild.h" bodystart="1946" bodyend="2025"/>
    <listofallmembers>
      <member refid="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" virt="non-virtual"><scope>dpp::onboarding</scope><name>build_json</name></member>
      <member refid="structdpp_1_1onboarding_1ab6c12c371f98f4fedb7eff02b9a2a5b7" prot="public" virt="non-virtual"><scope>dpp::onboarding</scope><name>default_channel_ids</name></member>
      <member refid="structdpp_1_1onboarding_1aa93c4e0e285417bea2a430be79894044" prot="public" virt="non-virtual"><scope>dpp::onboarding</scope><name>enabled</name></member>
      <member refid="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" virt="non-virtual"><scope>dpp::onboarding</scope><name>fill_from_json</name></member>
      <member refid="structdpp_1_1onboarding_1a8e45110306b2a2370a7d0cef5c150381" prot="protected" virt="non-virtual"><scope>dpp::onboarding</scope><name>fill_from_json_impl</name></member>
      <member refid="structdpp_1_1onboarding_1a97bfd107f1a88e30349357f67da8aa7e" prot="public" virt="non-virtual"><scope>dpp::onboarding</scope><name>guild_id</name></member>
      <member refid="structdpp_1_1onboarding_1afecbb1e7c6d3c31b88d655ffd70fe9f1" prot="protected" virt="non-virtual"><scope>dpp::onboarding</scope><name>json_interface&lt; onboarding &gt;</name></member>
      <member refid="structdpp_1_1onboarding_1ae3d9e7cc64867f0b586fc157c37aaeb5" prot="public" virt="non-virtual"><scope>dpp::onboarding</scope><name>mode</name></member>
      <member refid="structdpp_1_1onboarding_1a9b582f07cc56795deac91093a559a9be" prot="public" virt="non-virtual"><scope>dpp::onboarding</scope><name>onboarding</name></member>
      <member refid="structdpp_1_1onboarding_1a85cfd0e143a04b9e8de2bbb9dbbaac7a" prot="public" virt="non-virtual"><scope>dpp::onboarding</scope><name>prompts</name></member>
      <member refid="structdpp_1_1onboarding_1a6b81ac0ced323104c0e5d2bc6bb04590" prot="public" virt="non-virtual"><scope>dpp::onboarding</scope><name>set_enabled</name></member>
      <member refid="structdpp_1_1onboarding_1a3ed0704a28c75b1d5527c95ace0203b7" prot="public" virt="non-virtual"><scope>dpp::onboarding</scope><name>set_guild_id</name></member>
      <member refid="structdpp_1_1onboarding_1a3bad9082e8ffb79595f40072ef32108c" prot="public" virt="non-virtual"><scope>dpp::onboarding</scope><name>set_mode</name></member>
      <member refid="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" virt="non-virtual"><scope>dpp::onboarding</scope><name>to_json</name></member>
      <member refid="structdpp_1_1onboarding_1ab158eff56a8fd67d532ddd9c17c67a68" prot="protected" virt="non-virtual"><scope>dpp::onboarding</scope><name>to_json_impl</name></member>
      <member refid="structdpp_1_1onboarding_1a5a4688b856b7b078071baf1378010841" prot="public" virt="virtual"><scope>dpp::onboarding</scope><name>~onboarding</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
