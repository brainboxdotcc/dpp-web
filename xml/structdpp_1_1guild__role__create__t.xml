<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1guild__role__create__t" kind="struct" prot="public">
    <compoundname>dpp::guild_role_create_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1guild__role__create__t_1abf1677c16593fd8c6c8f9914d8c2292d" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::guild_role_create_t::creating_guild</definition>
        <argsstring></argsstring>
        <name>creating_guild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="373" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1guild__role__create__t_1a2f07681bfc59700b451764013a9d4e13" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1role" kindref="compound">role</ref> *</type>
        <definition>role* dpp::guild_role_create_t::created</definition>
        <argsstring></argsstring>
        <name>created</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="374" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1guild__role__create__t_1a50cdbe87074042b4922b4b44ba3bbc4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::guild_role_create_t::guild_role_create_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>guild_role_create_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="372" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="109" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Guild role create. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10894">
        <label>dpp::guild_role_create_t</label>
        <link refid="structdpp_1_1guild__role__create__t"/>
        <childnode refid="10895" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10895">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10975">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="10913">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="10912" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="10905" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="10914" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="10916" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="10919" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="10898" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="10922" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="10909">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="10910" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="10911" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="10939">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10954">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="10940">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="10987">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="10904" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="10988" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="10898" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="10990">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="10904" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10991" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10980">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="10967">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="10916">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="10917" relation="public-inheritance">
        </childnode>
        <childnode refid="10918" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="10919" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="10920" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="10898" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="10921" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="10925">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="10969">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="10941">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="10971">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="10993">
        <label>region</label>
      </node>
      <node id="10981">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="10907">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="10995">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="10904" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="10920" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="10898" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="10900" relation="usage">
          <edgelabel>shard</edgelabel>
        </childnode>
      </node>
      <node id="10922">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="10923" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="10924" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="10925" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="10926" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="10927" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="10928" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="10929" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="10930" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="10931" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="10932" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="10933" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="10934" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="10935" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="10936" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="10937" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="10938" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="10939" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="10940" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="10941" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="10942" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="10943" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="10944" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="10945" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="10946" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="10947" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="10948" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="10949" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="10950" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="10951" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="10952" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="10953" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="10954" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="10955" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="10956" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="10957" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="10958" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="10959" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="10960" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="10961" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="10962" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="10963" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="10964" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="10965" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="10966" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="10967" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="10968" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="10969" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="10970" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="10971" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="10972" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="10973" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="10974" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="10975" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="10976" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="10977" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="10978" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="10979" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="10980" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="10981" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="10982" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="10983" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="10991">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="10905" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="10904" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="10920" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="10898" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="10992" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="10929">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="10936">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="10978">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="10904">
        <label>uint64_t</label>
      </node>
      <node id="10973">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10970">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10956">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="10950">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="10938">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="10927">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10946">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="10896">
        <label>dpp::guild_role_create_t</label>
        <link refid="structdpp_1_1guild__role__create__t"/>
        <childnode refid="10897" relation="public-inheritance">
        </childnode>
        <childnode refid="10989" relation="usage">
          <edgelabel>creating_guild</edgelabel>
        </childnode>
        <childnode refid="10996" relation="usage">
          <edgelabel>created</edgelabel>
        </childnode>
      </node>
      <node id="10963">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="10960">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10983">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="10918">
        <label>uint16_t</label>
      </node>
      <node id="10948">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="10905">
        <label>time_t</label>
      </node>
      <node id="10899">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="10982">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="10959">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="10988">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="10901" relation="public-inheritance">
        </childnode>
        <childnode refid="10904" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="10905" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="10913" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="10919" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="10898" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="10908" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="10985" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="10921">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="10904" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="10958">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="10947">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="10912">
        <label>double</label>
      </node>
      <node id="10902">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="10903" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="10904" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="10905" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="10906" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="10907" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="10908" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="10898" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="10909" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="10957">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10979">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="10919">
        <label>uint32_t</label>
      </node>
      <node id="10977">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="10897">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="10898" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="10900" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="10996">
        <label>dpp::role</label>
        <link refid="classdpp_1_1role"/>
        <childnode refid="10917" relation="public-inheritance">
        </childnode>
        <childnode refid="10904" relation="usage">
          <edgelabel>integration_id</edgelabel>
          <edgelabel>bot_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>permissions</edgelabel>
        </childnode>
        <childnode refid="10919" relation="usage">
          <edgelabel>colour</edgelabel>
        </childnode>
        <childnode refid="10920" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>position</edgelabel>
        </childnode>
        <childnode refid="10898" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="10920">
        <label>uint8_t</label>
      </node>
      <node id="10962">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="10994">
        <label>std::map&lt; snowflake, dpp::voicestate &gt;</label>
        <childnode refid="10904" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10995" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10915">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="10901">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="10902" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10914">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="10915" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="10931">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="10943">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="10928">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="10951">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="10953">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="10986">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="10904" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10987" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10903">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="10945">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10900">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="10901" relation="public-inheritance">
        </childnode>
        <childnode refid="10912" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="10904" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="10905" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="10913" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="10984" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="10919" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="10908" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="10898" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="10985" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="10986" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="10952">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="10910">
        <label>SSL *</label>
      </node>
      <node id="10917">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="10904" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="10965">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="10966">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="10974">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="10911">
        <label>SSL_CTX *</label>
      </node>
      <node id="10961">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="10984">
        <label>mutex</label>
      </node>
      <node id="10972">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10930">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="10949">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="10955">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="10968">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="10908">
        <label>bool</label>
      </node>
      <node id="10906">
        <label>SOCKET</label>
      </node>
      <node id="10989">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="10917" relation="public-inheritance">
        </childnode>
        <childnode refid="10904" relation="usage">
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="10990" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="10993" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="10918" relation="usage">
          <edgelabel>shard_id</edgelabel>
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
        </childnode>
        <childnode refid="10919" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="10920" relation="usage">
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>verification_level</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>premium_tier</edgelabel>
        </childnode>
        <childnode refid="10898" relation="usage">
          <edgelabel>vanity_url_code</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="10994" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
        <childnode refid="10992" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="10921" relation="usage">
          <edgelabel>splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
        </childnode>
      </node>
      <node id="10944">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="10976">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="10934">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="10926">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10923">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="10942">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="10964">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="10924">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="10937">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="10933">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="10992">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="10904" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10985">
        <label>native_handle_type</label>
      </node>
      <node id="10935">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10898">
        <label>std::string</label>
        <childnode refid="10899" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10932">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="367" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="367" bodyend="375"/>
    <listofallmembers>
      <member refid="structdpp_1_1guild__role__create__t_1a2f07681bfc59700b451764013a9d4e13" prot="public" virt="non-virtual"><scope>dpp::guild_role_create_t</scope><name>created</name></member>
      <member refid="structdpp_1_1guild__role__create__t_1abf1677c16593fd8c6c8f9914d8c2292d" prot="public" virt="non-virtual"><scope>dpp::guild_role_create_t</scope><name>creating_guild</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::guild_role_create_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::guild_role_create_t</scope><name>from</name></member>
      <member refid="structdpp_1_1guild__role__create__t_1a50cdbe87074042b4922b4b44ba3bbc4b" prot="public" virt="non-virtual"><scope>dpp::guild_role_create_t</scope><name>guild_role_create_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::guild_role_create_t</scope><name>raw_event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
