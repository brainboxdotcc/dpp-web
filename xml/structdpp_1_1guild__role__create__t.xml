<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1guild__role__create__t" kind="struct" prot="public">
    <compoundname>dpp::guild_role_create_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1guild__role__create__t_1abf1677c16593fd8c6c8f9914d8c2292d" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::guild_role_create_t::creating_guild</definition>
        <argsstring></argsstring>
        <name>creating_guild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="373" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1guild__role__create__t_1a2f07681bfc59700b451764013a9d4e13" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1role" kindref="compound">role</ref> *</type>
        <definition>role* dpp::guild_role_create_t::created</definition>
        <argsstring></argsstring>
        <name>created</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="374" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1guild__role__create__t_1a50cdbe87074042b4922b4b44ba3bbc4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::guild_role_create_t::guild_role_create_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>guild_role_create_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="372" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="109" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Guild role create. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="11060">
        <label>dpp::guild_role_create_t</label>
        <link refid="structdpp_1_1guild__role__create__t"/>
        <childnode refid="11061" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11061">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11141">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="11079">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="11078" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="11071" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="11080" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="11082" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="11085" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="11064" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="11088" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="11075">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="11076" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="11077" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="11105">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11120">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="11106">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="11153">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="11070" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11154" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="11064" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="11156">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="11070" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11157" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11146">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="11133">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="11082">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="11083" relation="public-inheritance">
        </childnode>
        <childnode refid="11084" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="11085" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11086" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="11064" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="11087" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="11091">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="11135">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="11107">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="11137">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="11159">
        <label>region</label>
      </node>
      <node id="11147">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="11073">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="11161">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="11070" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11086" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11064" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="11066" relation="usage">
          <edgelabel>shard</edgelabel>
        </childnode>
      </node>
      <node id="11088">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="11089" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="11090" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="11091" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="11092" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="11093" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="11094" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="11095" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="11096" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="11097" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="11098" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="11099" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="11100" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="11101" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="11102" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="11103" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="11104" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="11105" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="11106" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="11107" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="11108" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="11109" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="11110" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="11111" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="11112" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="11113" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="11114" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="11115" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="11116" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="11117" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="11118" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="11119" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="11120" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="11121" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="11122" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="11123" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="11124" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="11125" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="11126" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="11127" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="11128" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="11129" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="11130" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="11131" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="11132" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="11133" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="11134" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="11135" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="11136" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="11137" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="11138" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="11139" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="11140" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="11141" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="11142" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="11143" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="11144" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="11145" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="11146" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="11147" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="11148" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="11149" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="11157">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="11071" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="11070" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="11086" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11064" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="11158" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="11095">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="11102">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="11144">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="11070">
        <label>uint64_t</label>
      </node>
      <node id="11139">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11136">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11122">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="11116">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="11104">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="11093">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11112">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="11062">
        <label>dpp::guild_role_create_t</label>
        <link refid="structdpp_1_1guild__role__create__t"/>
        <childnode refid="11063" relation="public-inheritance">
        </childnode>
        <childnode refid="11155" relation="usage">
          <edgelabel>creating_guild</edgelabel>
        </childnode>
        <childnode refid="11162" relation="usage">
          <edgelabel>created</edgelabel>
        </childnode>
      </node>
      <node id="11129">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="11126">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11149">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="11084">
        <label>uint16_t</label>
      </node>
      <node id="11114">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="11071">
        <label>time_t</label>
      </node>
      <node id="11065">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="11148">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11125">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="11154">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="11067" relation="public-inheritance">
        </childnode>
        <childnode refid="11070" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11071" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="11079" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="11085" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="11064" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="11074" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="11151" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="11087">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="11070" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="11124">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="11113">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="11078">
        <label>double</label>
      </node>
      <node id="11068">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="11069" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="11070" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="11071" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="11072" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="11073" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="11074" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="11064" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="11075" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="11123">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11145">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="11085">
        <label>uint32_t</label>
      </node>
      <node id="11143">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="11063">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="11064" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="11066" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="11162">
        <label>dpp::role</label>
        <link refid="classdpp_1_1role"/>
        <childnode refid="11083" relation="public-inheritance">
        </childnode>
        <childnode refid="11070" relation="usage">
          <edgelabel>integration_id</edgelabel>
          <edgelabel>bot_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>permissions</edgelabel>
        </childnode>
        <childnode refid="11085" relation="usage">
          <edgelabel>colour</edgelabel>
        </childnode>
        <childnode refid="11086" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>position</edgelabel>
        </childnode>
        <childnode refid="11064" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="11086">
        <label>uint8_t</label>
      </node>
      <node id="11128">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="11160">
        <label>std::map&lt; snowflake, dpp::voicestate &gt;</label>
        <childnode refid="11070" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11161" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11081">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="11067">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="11068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11080">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="11081" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="11097">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="11109">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="11094">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="11117">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="11119">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="11152">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="11070" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11153" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11069">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="11111">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11066">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="11067" relation="public-inheritance">
        </childnode>
        <childnode refid="11078" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="11070" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="11071" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="11079" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="11150" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="11085" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="11074" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="11064" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="11151" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="11152" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="11118">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="11076">
        <label>SSL *</label>
      </node>
      <node id="11083">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="11070" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="11131">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="11132">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="11140">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="11077">
        <label>SSL_CTX *</label>
      </node>
      <node id="11127">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="11150">
        <label>mutex</label>
      </node>
      <node id="11138">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11096">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="11115">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="11121">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="11134">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="11074">
        <label>bool</label>
      </node>
      <node id="11072">
        <label>SOCKET</label>
      </node>
      <node id="11155">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="11083" relation="public-inheritance">
        </childnode>
        <childnode refid="11070" relation="usage">
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="11156" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="11159" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="11084" relation="usage">
          <edgelabel>shard_id</edgelabel>
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
        </childnode>
        <childnode refid="11085" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="11086" relation="usage">
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>verification_level</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>premium_tier</edgelabel>
        </childnode>
        <childnode refid="11064" relation="usage">
          <edgelabel>vanity_url_code</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="11160" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
        <childnode refid="11158" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="11087" relation="usage">
          <edgelabel>splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
        </childnode>
      </node>
      <node id="11110">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="11142">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="11100">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11092">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11089">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="11108">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11130">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="11090">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="11103">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="11099">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="11158">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="11070" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11151">
        <label>native_handle_type</label>
      </node>
      <node id="11101">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11064">
        <label>std::string</label>
        <childnode refid="11065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11098">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="367" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="367" bodyend="375"/>
    <listofallmembers>
      <member refid="structdpp_1_1guild__role__create__t_1a2f07681bfc59700b451764013a9d4e13" prot="public" virt="non-virtual"><scope>dpp::guild_role_create_t</scope><name>created</name></member>
      <member refid="structdpp_1_1guild__role__create__t_1abf1677c16593fd8c6c8f9914d8c2292d" prot="public" virt="non-virtual"><scope>dpp::guild_role_create_t</scope><name>creating_guild</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::guild_role_create_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::guild_role_create_t</scope><name>from</name></member>
      <member refid="structdpp_1_1guild__role__create__t_1a50cdbe87074042b4922b4b44ba3bbc4b" prot="public" virt="non-virtual"><scope>dpp::guild_role_create_t</scope><name>guild_role_create_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::guild_role_create_t</scope><name>raw_event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
