<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1presence__update__t" kind="struct" prot="public">
    <compoundname>dpp::presence_update_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1presence__update__t_1ac71a4f4b0110e3d6c51525242abb9813" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1presence" kindref="compound">presence</ref></type>
        <definition>presence dpp::presence_update_t::rich_presence</definition>
        <argsstring></argsstring>
        <name>rich_presence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="571" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1presence__update__t_1a6c58850853d61ab933e0fc5abb29ad15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::presence_update_t::presence_update_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>presence_update_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="570" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="123" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Presence update. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="13305">
        <label>dpp::presence_update_t</label>
        <link refid="structdpp_1_1presence__update__t"/>
        <childnode refid="13306" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13306">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13386">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="13324">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="13323" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="13316" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="13325" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="13327" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="13330" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="13309" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="13333" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="13320">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="13321" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="13322" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="13350">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13365">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="13351">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="13398">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="13315" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="13399" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="13309" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="13391">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="13378">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="13327">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="13328" relation="public-inheritance">
        </childnode>
        <childnode refid="13329" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="13330" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="13331" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="13309" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="13332" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="13336">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="13380">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="13352">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="13382">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="13392">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="13318">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="13333">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="13334" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="13335" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="13336" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="13337" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="13338" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="13339" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="13340" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="13341" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="13342" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="13343" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="13344" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="13345" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="13346" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="13347" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="13348" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="13349" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="13350" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="13351" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="13352" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="13353" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="13354" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="13355" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="13356" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="13357" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="13358" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="13359" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="13360" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="13361" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="13362" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="13363" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="13364" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="13365" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="13366" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="13367" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="13368" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="13369" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="13370" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="13371" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="13372" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="13373" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="13374" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="13375" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="13376" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="13377" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="13378" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="13379" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="13380" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="13381" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="13382" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="13383" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="13384" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="13385" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="13386" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="13387" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="13388" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="13389" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="13390" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="13391" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="13392" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="13393" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="13394" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="13340">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="13347">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="13389">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="13315">
        <label>uint64_t</label>
      </node>
      <node id="13384">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13403">
        <label>activity_type</label>
      </node>
      <node id="13381">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13367">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="13361">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="13349">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="13338">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13307">
        <label>dpp::presence_update_t</label>
        <link refid="structdpp_1_1presence__update__t"/>
        <childnode refid="13308" relation="public-inheritance">
        </childnode>
        <childnode refid="13400" relation="usage">
          <edgelabel>rich_presence</edgelabel>
        </childnode>
      </node>
      <node id="13357">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="13400">
        <label>dpp::presence</label>
        <link refid="classdpp_1_1presence"/>
        <childnode refid="13315" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="13401" relation="usage">
          <edgelabel>activities</edgelabel>
        </childnode>
        <childnode refid="13331" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="13374">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="13371">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13394">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="13329">
        <label>uint16_t</label>
      </node>
      <node id="13359">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="13316">
        <label>time_t</label>
      </node>
      <node id="13310">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="13393">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="13370">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="13399">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="13312" relation="public-inheritance">
        </childnode>
        <childnode refid="13315" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="13316" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="13324" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="13330" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="13309" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="13319" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="13396" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="13332">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="13315" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="13369">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="13358">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="13323">
        <label>double</label>
      </node>
      <node id="13313">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="13314" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="13315" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="13316" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="13317" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="13318" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="13319" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="13309" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="13320" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="13368">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13390">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="13330">
        <label>uint32_t</label>
      </node>
      <node id="13388">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="13308">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="13309" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="13311" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="13331">
        <label>uint8_t</label>
      </node>
      <node id="13373">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="13326">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="13312">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="13313" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13325">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="13326" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="13342">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="13354">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="13339">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="13362">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="13364">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="13397">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="13315" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="13398" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13314">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="13356">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13311">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="13312" relation="public-inheritance">
        </childnode>
        <childnode refid="13323" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="13315" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="13316" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="13324" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="13395" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="13330" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="13319" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="13309" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="13396" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="13397" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="13363">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="13321">
        <label>SSL *</label>
      </node>
      <node id="13328">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="13315" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="13376">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="13377">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="13385">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="13322">
        <label>SSL_CTX *</label>
      </node>
      <node id="13372">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="13395">
        <label>mutex</label>
      </node>
      <node id="13383">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13341">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="13360">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="13366">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="13379">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="13319">
        <label>bool</label>
      </node>
      <node id="13317">
        <label>SOCKET</label>
      </node>
      <node id="13401">
        <label>std::vector&lt; dpp::activity &gt;</label>
        <childnode refid="13402" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13402">
        <label>dpp::activity</label>
        <link refid="classdpp_1_1activity"/>
        <childnode refid="13315" relation="usage">
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="13316" relation="usage">
          <edgelabel>created_at</edgelabel>
          <edgelabel>end</edgelabel>
          <edgelabel>start</edgelabel>
        </childnode>
        <childnode refid="13403" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="13331" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="13309" relation="usage">
          <edgelabel>url</edgelabel>
          <edgelabel>state</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="13355">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="13387">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="13345">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="13337">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13334">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="13353">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="13375">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="13335">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="13348">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="13344">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="13396">
        <label>native_handle_type</label>
      </node>
      <node id="13346">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13309">
        <label>std::string</label>
        <childnode refid="13310" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13343">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="565" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="565" bodyend="572"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::presence_update_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::presence_update_t</scope><name>from</name></member>
      <member refid="structdpp_1_1presence__update__t_1a6c58850853d61ab933e0fc5abb29ad15" prot="public" virt="non-virtual"><scope>dpp::presence_update_t</scope><name>presence_update_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::presence_update_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1presence__update__t_1ac71a4f4b0110e3d6c51525242abb9813" prot="public" virt="non-virtual"><scope>dpp::presence_update_t</scope><name>rich_presence</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
