<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1detail_1_1task__chain__final__awaiter" kind="struct" language="C++" prot="public">
    <compoundname>dpp::detail::task_chain_final_awaiter</compoundname>
    <includes local="no">coro.h</includes>
    <templateparamlist>
      <param>
        <type>typename ReturnType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1detail_1_1task__chain__final__awaiter_1a5869244dfa577d83897be57693875279" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::detail::task_chain_final_awaiter&lt; ReturnType &gt;::await_ready</definition>
        <argsstring>() noexcept</argsstring>
        <name>await_ready</name>
        <briefdescription>
<para>Always suspend at the end of the task. This allows us to clean up and resume the parent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro.h" line="226" column="6" bodyfile="include/dpp/coro.h" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1detail_1_1task__chain__final__awaiter_1a995cf8648c21c8a822a9e4e79edcefa6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::detail::task_chain_final_awaiter&lt; ReturnType &gt;::await_suspend</definition>
        <argsstring>(detail::task_handle&lt; ReturnType &gt; handle) noexcept</argsstring>
        <name>await_suspend</name>
        <param>
          <type><ref refid="namespacedpp_1_1detail_1a5cc8642d79d28ea2cac1825b42685dfa" kindref="member">detail::task_handle</ref>&lt; ReturnType &gt;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro.h" line="235" column="6" bodyfile="include/dpp/coro.h" bodystart="373" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1detail_1_1task__chain__final__awaiter_1ad283115fd3719b4d70178ee66e5d0bda" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::detail::task_chain_final_awaiter&lt; ReturnType &gt;::await_resume</definition>
        <argsstring>() noexcept</argsstring>
        <name>await_resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro.h" line="240" column="6" bodyfile="include/dpp/coro.h" bodystart="240" bodyend="240"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The object automatically co_await-ed at the end of a task. Ensures nested task chains are resolved, and the promise cleans up if it needs to. </para>
    </briefdescription>
    <detaileddescription>
<para>Awaitable returned from <ref refid="structdpp_1_1detail_1_1task__promise" kindref="compound">task_promise</ref>&apos;s final_suspend. Resumes the parent and cleans up its handle if needed. </para>
    </detaileddescription>
    <location file="include/dpp/coro.h" line="222" column="1" bodyfile="include/dpp/coro.h" bodystart="222" bodyend="241"/>
    <listofallmembers>
      <member refid="structdpp_1_1detail_1_1task__chain__final__awaiter_1a5869244dfa577d83897be57693875279" prot="public" virt="non-virtual"><scope>dpp::detail::task_chain_final_awaiter</scope><name>await_ready</name></member>
      <member refid="structdpp_1_1detail_1_1task__chain__final__awaiter_1ad283115fd3719b4d70178ee66e5d0bda" prot="public" virt="non-virtual"><scope>dpp::detail::task_chain_final_awaiter</scope><name>await_resume</name></member>
      <member refid="structdpp_1_1detail_1_1task__chain__final__awaiter_1a995cf8648c21c8a822a9e4e79edcefa6" prot="public" virt="non-virtual"><scope>dpp::detail::task_chain_final_awaiter</scope><name>await_suspend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
