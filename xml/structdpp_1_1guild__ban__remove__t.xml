<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1guild__ban__remove__t" kind="struct" prot="public">
    <compoundname>dpp::guild_ban_remove_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1guild__ban__remove__t_1a36e11ccbbeb7a605d1b8360769c71f7c" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::guild_ban_remove_t::unbanning_guild</definition>
        <argsstring></argsstring>
        <name>unbanning_guild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="707" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="707" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1guild__ban__remove__t_1abe971ff5e9717d7c5226304e8e43e92c" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1user" kindref="compound">user</ref></type>
        <definition>user dpp::guild_ban_remove_t::unbanned</definition>
        <argsstring></argsstring>
        <name>unbanned</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="708" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="708" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1guild__ban__remove__t_1a96b984d6584eb2dc6a9d16d3c4c671f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::guild_ban_remove_t::guild_ban_remove_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>guild_ban_remove_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="706" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="136" bodyend="136"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Guild ban remove. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="9824">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
      <node id="9823">
        <label>dpp::guild_ban_remove_t</label>
        <link refid="structdpp_1_1guild__ban__remove__t"/>
        <childnode refid="9824" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9904">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="9842">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="9841" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="9834" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="9843" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="9845" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="9848" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="9827" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="9851" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="9838">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="9839" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="9840" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="9868">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9883">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="9869">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="9916">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="9833" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="9917" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="9827" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="9919">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="9833" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="9920" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="9909">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="9896">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="9845">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="9846" relation="public-inheritance">
        </childnode>
        <childnode refid="9847" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="9848" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="9849" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="9827" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="9850" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="9854">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="9898">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="9870">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="9900">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="9922">
        <label>region</label>
      </node>
      <node id="9910">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="9836">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="9924">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="9833" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="9849" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="9827" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="9829" relation="usage">
          <edgelabel>shard</edgelabel>
        </childnode>
      </node>
      <node id="9851">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="9852" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="9853" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="9854" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="9855" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="9856" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="9857" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="9858" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="9859" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="9860" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="9861" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="9862" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="9863" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="9864" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="9865" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="9866" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="9867" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="9868" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="9869" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="9870" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="9871" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="9872" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="9873" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="9874" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="9875" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="9876" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="9877" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="9878" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="9879" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="9880" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="9881" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="9882" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="9883" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="9884" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="9885" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="9886" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="9887" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="9888" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="9889" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="9890" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="9891" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="9892" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="9893" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="9894" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="9895" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="9896" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="9897" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="9898" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="9899" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="9900" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="9901" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="9902" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="9903" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="9904" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="9905" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="9906" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="9907" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="9908" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="9909" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="9910" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="9911" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="9912" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="9920">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="9834" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="9833" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="9849" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="9827" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="9921" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="9858">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="9865">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="9907">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="9833">
        <label>uint64_t</label>
      </node>
      <node id="9902">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9899">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9885">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="9879">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="9867">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="9856">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9875">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="9892">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="9889">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9912">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="9847">
        <label>uint16_t</label>
      </node>
      <node id="9877">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="9834">
        <label>time_t</label>
      </node>
      <node id="9828">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="9911">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="9888">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="9917">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="9830" relation="public-inheritance">
        </childnode>
        <childnode refid="9833" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="9834" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="9842" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="9848" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="9827" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="9837" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="9914" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="9850">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="9833" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="9887">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="9876">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="9841">
        <label>double</label>
      </node>
      <node id="9831">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="9832" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="9833" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="9834" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="9835" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="9836" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="9837" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="9827" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="9838" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="9886">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9908">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="9848">
        <label>uint32_t</label>
      </node>
      <node id="9906">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="9826">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="9827" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="9829" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="9849">
        <label>uint8_t</label>
      </node>
      <node id="9891">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="9923">
        <label>std::map&lt; snowflake, dpp::voicestate &gt;</label>
        <childnode refid="9833" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="9924" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="9844">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="9830">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="9831" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9843">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="9844" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="9860">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="9872">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="9857">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="9880">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="9882">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="9915">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="9833" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="9916" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="9832">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="9874">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9829">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="9830" relation="public-inheritance">
        </childnode>
        <childnode refid="9841" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="9833" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="9834" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="9842" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="9913" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="9848" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="9837" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="9827" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="9914" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="9915" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="9881">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="9839">
        <label>SSL *</label>
      </node>
      <node id="9846">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="9833" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="9894">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="9895">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="9825">
        <label>dpp::guild_ban_remove_t</label>
        <link refid="structdpp_1_1guild__ban__remove__t"/>
        <childnode refid="9826" relation="public-inheritance">
        </childnode>
        <childnode refid="9918" relation="usage">
          <edgelabel>unbanning_guild</edgelabel>
        </childnode>
        <childnode refid="9845" relation="usage">
          <edgelabel>unbanned</edgelabel>
        </childnode>
      </node>
      <node id="9903">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="9840">
        <label>SSL_CTX *</label>
      </node>
      <node id="9890">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="9913">
        <label>mutex</label>
      </node>
      <node id="9901">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9859">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="9878">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="9884">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="9897">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="9837">
        <label>bool</label>
      </node>
      <node id="9835">
        <label>SOCKET</label>
      </node>
      <node id="9918">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="9846" relation="public-inheritance">
        </childnode>
        <childnode refid="9833" relation="usage">
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="9919" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="9922" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="9847" relation="usage">
          <edgelabel>shard_id</edgelabel>
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
        </childnode>
        <childnode refid="9848" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="9849" relation="usage">
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>verification_level</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>premium_tier</edgelabel>
        </childnode>
        <childnode refid="9827" relation="usage">
          <edgelabel>vanity_url_code</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="9923" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
        <childnode refid="9921" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="9850" relation="usage">
          <edgelabel>splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
        </childnode>
      </node>
      <node id="9873">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="9905">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="9863">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="9855">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9852">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="9871">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="9893">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="9853">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="9866">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="9862">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="9921">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="9833" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="9914">
        <label>native_handle_type</label>
      </node>
      <node id="9864">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9827">
        <label>std::string</label>
        <childnode refid="9828" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9861">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="701" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="701" bodyend="709"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::guild_ban_remove_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::guild_ban_remove_t</scope><name>from</name></member>
      <member refid="structdpp_1_1guild__ban__remove__t_1a96b984d6584eb2dc6a9d16d3c4c671f5" prot="public" virt="non-virtual"><scope>dpp::guild_ban_remove_t</scope><name>guild_ban_remove_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::guild_ban_remove_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1guild__ban__remove__t_1abe971ff5e9717d7c5226304e8e43e92c" prot="public" virt="non-virtual"><scope>dpp::guild_ban_remove_t</scope><name>unbanned</name></member>
      <member refid="structdpp_1_1guild__ban__remove__t_1a36e11ccbbeb7a605d1b8360769c71f7c" prot="public" virt="non-virtual"><scope>dpp::guild_ban_remove_t</scope><name>unbanning_guild</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
