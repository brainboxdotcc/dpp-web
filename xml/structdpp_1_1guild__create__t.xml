<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1guild__create__t" kind="struct" prot="public">
    <compoundname>dpp::guild_create_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1guild__create__t_1abb3c477c6ae0c204c48ff21c4f582771" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::guild_create_t::created</definition>
        <argsstring></argsstring>
        <name>created</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="452" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1guild__create__t_1aa01c8bb6c3624eeb4d3de063623ec6cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::guild_create_t::guild_create_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>guild_create_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="451" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="113" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Create guild. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="9937">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
      <node id="9936">
        <label>dpp::guild_create_t</label>
        <link refid="structdpp_1_1guild__create__t"/>
        <childnode refid="9937" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10017">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="9955">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="9954" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="9947" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="9956" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="9958" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="9961" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="9940" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="9964" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="9951">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="9952" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="9953" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="9981">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9996">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="9982">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="10029">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="9946" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="10030" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="9940" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="10032">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="9946" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10033" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10022">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="10009">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="9958">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="9959" relation="public-inheritance">
        </childnode>
        <childnode refid="9960" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="9961" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="9962" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="9940" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="9963" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="9967">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="10011">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="9983">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="10013">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="10035">
        <label>region</label>
      </node>
      <node id="10023">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="9949">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="10037">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="9946" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="9962" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="9940" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="9942" relation="usage">
          <edgelabel>shard</edgelabel>
        </childnode>
      </node>
      <node id="9964">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="9965" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="9966" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="9967" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="9968" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="9969" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="9970" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="9971" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="9972" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="9973" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="9974" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="9975" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="9976" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="9977" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="9978" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="9979" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="9980" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="9981" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="9982" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="9983" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="9984" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="9985" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="9986" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="9987" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="9988" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="9989" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="9990" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="9991" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="9992" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="9993" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="9994" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="9995" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="9996" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="9997" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="9998" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="9999" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="10000" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="10001" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="10002" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="10003" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="10004" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="10005" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="10006" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="10007" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="10008" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="10009" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="10010" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="10011" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="10012" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="10013" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="10014" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="10015" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="10016" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="10017" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="10018" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="10019" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="10020" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="10021" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="10022" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="10023" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="10024" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="10025" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="10033">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="9947" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="9946" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="9962" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="9940" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="10034" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="9971">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="9978">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="10020">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="9946">
        <label>uint64_t</label>
      </node>
      <node id="10015">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10012">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9998">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="9992">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="9980">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="9969">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9988">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="10005">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="10002">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10025">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="9960">
        <label>uint16_t</label>
      </node>
      <node id="9990">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="9947">
        <label>time_t</label>
      </node>
      <node id="9941">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="10024">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="10001">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="10030">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="9943" relation="public-inheritance">
        </childnode>
        <childnode refid="9946" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="9947" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="9955" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="9961" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="9940" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="9950" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="10027" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="9963">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="9946" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="10000">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="9989">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="9954">
        <label>double</label>
      </node>
      <node id="9944">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="9945" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="9946" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="9947" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="9948" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="9949" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="9950" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="9940" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="9951" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="9999">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10021">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="9961">
        <label>uint32_t</label>
      </node>
      <node id="10019">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="9939">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="9940" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="9942" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="9962">
        <label>uint8_t</label>
      </node>
      <node id="10004">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="10036">
        <label>std::map&lt; snowflake, dpp::voicestate &gt;</label>
        <childnode refid="9946" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10037" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="9957">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="9943">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="9944" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9956">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="9957" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="9973">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="9985">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="9970">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="9993">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="9995">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="10028">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="9946" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10029" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="9945">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="9987">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9942">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="9943" relation="public-inheritance">
        </childnode>
        <childnode refid="9954" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="9946" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="9947" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="9955" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="10026" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="9961" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="9950" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="9940" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="10027" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="10028" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="9994">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="9952">
        <label>SSL *</label>
      </node>
      <node id="9959">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="9946" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="10007">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="10008">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="9938">
        <label>dpp::guild_create_t</label>
        <link refid="structdpp_1_1guild__create__t"/>
        <childnode refid="9939" relation="public-inheritance">
        </childnode>
        <childnode refid="10031" relation="usage">
          <edgelabel>created</edgelabel>
        </childnode>
      </node>
      <node id="10016">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="9953">
        <label>SSL_CTX *</label>
      </node>
      <node id="10003">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="10026">
        <label>mutex</label>
      </node>
      <node id="10014">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9972">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="9991">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="9997">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="10010">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="9950">
        <label>bool</label>
      </node>
      <node id="9948">
        <label>SOCKET</label>
      </node>
      <node id="10031">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="9959" relation="public-inheritance">
        </childnode>
        <childnode refid="9946" relation="usage">
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="10032" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="10035" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="9960" relation="usage">
          <edgelabel>shard_id</edgelabel>
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
        </childnode>
        <childnode refid="9961" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="9962" relation="usage">
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>verification_level</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>premium_tier</edgelabel>
        </childnode>
        <childnode refid="9940" relation="usage">
          <edgelabel>vanity_url_code</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="10036" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
        <childnode refid="10034" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="9963" relation="usage">
          <edgelabel>splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
        </childnode>
      </node>
      <node id="9986">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="10018">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="9976">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="9968">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9965">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="9984">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="10006">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="9966">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="9979">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="9975">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="10034">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="9946" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10027">
        <label>native_handle_type</label>
      </node>
      <node id="9977">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="9940">
        <label>std::string</label>
        <childnode refid="9941" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9974">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="446" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="446" bodyend="453"/>
    <listofallmembers>
      <member refid="structdpp_1_1guild__create__t_1abb3c477c6ae0c204c48ff21c4f582771" prot="public" virt="non-virtual"><scope>dpp::guild_create_t</scope><name>created</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::guild_create_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::guild_create_t</scope><name>from</name></member>
      <member refid="structdpp_1_1guild__create__t_1aa01c8bb6c3624eeb4d3de063623ec6cb" prot="public" virt="non-virtual"><scope>dpp::guild_create_t</scope><name>guild_create_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::guild_create_t</scope><name>raw_event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
