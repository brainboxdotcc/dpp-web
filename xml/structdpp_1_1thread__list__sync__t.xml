<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1thread__list__sync__t" kind="struct" prot="public">
    <compoundname>dpp::thread_list_sync_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1thread__list__sync__t_1abbf38daac2b090e9f2fb587caa33f574" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::thread_list_sync_t::updating_guild</definition>
        <argsstring></argsstring>
        <name>updating_guild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="790" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="790" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1thread__list__sync__t_1a8fb0f184795e5cd99e764ce518d32eb8" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classdpp_1_1channel" kindref="compound">channel</ref> &gt;</type>
        <definition>std::vector&lt;channel&gt; dpp::thread_list_sync_t::threads</definition>
        <argsstring></argsstring>
        <name>threads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="791" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="791" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1thread__list__sync__t_1a31bf68ed2826d2dedd431b88a164b8d2" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structdpp_1_1thread__member" kindref="compound">thread_member</ref> &gt;</type>
        <definition>std::vector&lt;thread_member&gt; dpp::thread_list_sync_t::members</definition>
        <argsstring></argsstring>
        <name>members</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="792" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="792" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1thread__list__sync__t_1a8d1209cbdca8b01143488f3550af094b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::thread_list_sync_t::thread_list_sync_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>thread_list_sync_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="789" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="145" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Thread List Sync. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="14420">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
      <node id="14419">
        <label>dpp::thread_list_sync_t</label>
        <link refid="structdpp_1_1thread__list__sync__t"/>
        <childnode refid="14420" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14500">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="14438">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="14437" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="14430" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="14439" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="14441" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="14444" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="14423" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="14447" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="14434">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="14435" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="14436" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="14464">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14479">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="14465">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="14512">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="14429" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="14513" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="14423" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="14515">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="14429" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14516" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14505">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="14492">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="14441">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="14442" relation="public-inheritance">
        </childnode>
        <childnode refid="14443" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="14444" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="14445" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="14423" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="14446" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="14450">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="14494">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="14466">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="14496">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="14526">
        <label>std::vector&lt; dpp::permission_overwrite &gt;</label>
        <childnode refid="14527" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14518">
        <label>region</label>
      </node>
      <node id="14521">
        <label>std::vector&lt; dpp::thread_member &gt;</label>
        <childnode refid="14522" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14506">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="14432">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="14520">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="14429" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="14445" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="14423" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="14425" relation="usage">
          <edgelabel>shard</edgelabel>
        </childnode>
      </node>
      <node id="14447">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="14448" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="14449" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="14450" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="14451" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="14452" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="14453" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="14454" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="14455" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="14456" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="14457" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="14458" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="14459" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="14460" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="14461" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="14462" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="14463" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="14464" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="14465" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="14466" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="14467" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="14468" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="14469" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="14470" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="14471" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="14472" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="14473" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="14474" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="14475" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="14476" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="14477" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="14478" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="14479" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="14480" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="14481" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="14482" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="14483" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="14484" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="14485" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="14486" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="14487" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="14488" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="14489" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="14490" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="14491" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="14492" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="14493" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="14494" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="14495" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="14496" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="14497" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="14498" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="14499" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="14500" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="14501" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="14502" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="14503" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="14504" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="14505" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="14506" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="14507" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="14508" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="14516">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="14430" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="14429" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="14445" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="14423" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="14517" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="14454">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="14523">
        <label>std::vector&lt; dpp::channel &gt;</label>
        <childnode refid="14524" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14461">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="14503">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="14429">
        <label>uint64_t</label>
      </node>
      <node id="14498">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14495">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14481">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="14525">
        <label>dpp::thread_metadata</label>
        <link refid="structdpp_1_1thread__metadata"/>
        <childnode refid="14430" relation="usage">
          <edgelabel>archive_timestamp</edgelabel>
        </childnode>
        <childnode refid="14443" relation="usage">
          <edgelabel>auto_archive_duration</edgelabel>
        </childnode>
        <childnode refid="14433" relation="usage">
          <edgelabel>archived</edgelabel>
          <edgelabel>locked</edgelabel>
        </childnode>
      </node>
      <node id="14475">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="14463">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="14452">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14471">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="14488">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="14485">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14508">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="14443">
        <label>uint16_t</label>
      </node>
      <node id="14473">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="14430">
        <label>time_t</label>
      </node>
      <node id="14424">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="14507">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="14484">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="14513">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="14426" relation="public-inheritance">
        </childnode>
        <childnode refid="14429" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="14430" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="14438" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="14444" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="14423" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="14433" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="14510" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="14446">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="14429" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="14483">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="14472">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="14437">
        <label>double</label>
      </node>
      <node id="14427">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="14428" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="14429" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="14430" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="14431" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="14432" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="14433" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="14423" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="14434" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="14482">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14504">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="14444">
        <label>uint32_t</label>
      </node>
      <node id="14502">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="14422">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="14423" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="14425" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="14445">
        <label>uint8_t</label>
      </node>
      <node id="14487">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="14519">
        <label>std::map&lt; snowflake, dpp::voicestate &gt;</label>
        <childnode refid="14429" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14520" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14440">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="14426">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="14427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14439">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="14440" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="14421">
        <label>dpp::thread_list_sync_t</label>
        <link refid="structdpp_1_1thread__list__sync__t"/>
        <childnode refid="14422" relation="public-inheritance">
        </childnode>
        <childnode refid="14514" relation="usage">
          <edgelabel>updating_guild</edgelabel>
        </childnode>
        <childnode refid="14521" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="14523" relation="usage">
          <edgelabel>threads</edgelabel>
        </childnode>
      </node>
      <node id="14456">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="14468">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="14453">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="14476">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="14478">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="14511">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="14429" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14512" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14428">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="14470">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14425">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="14426" relation="public-inheritance">
        </childnode>
        <childnode refid="14437" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="14429" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="14430" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="14438" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="14509" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="14444" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="14433" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="14423" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="14510" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="14511" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="14477">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="14435">
        <label>SSL *</label>
      </node>
      <node id="14442">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="14429" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="14490">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="14524">
        <label>dpp::channel</label>
        <link refid="classdpp_1_1channel"/>
        <childnode refid="14442" relation="public-inheritance">
        </childnode>
        <childnode refid="14525" relation="usage">
          <edgelabel>metadata</edgelabel>
        </childnode>
        <childnode refid="14430" relation="usage">
          <edgelabel>last_pin_timestamp</edgelabel>
        </childnode>
        <childnode refid="14429" relation="usage">
          <edgelabel>parent_id</edgelabel>
          <edgelabel>last_message_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
        </childnode>
        <childnode refid="14443" relation="usage">
          <edgelabel>rate_limit_per_user</edgelabel>
          <edgelabel>position</edgelabel>
        </childnode>
        <childnode refid="14423" relation="usage">
          <edgelabel>topic</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="14445" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>user_limit</edgelabel>
          <edgelabel>message_count</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="14517" relation="usage">
          <edgelabel>recipients</edgelabel>
        </childnode>
        <childnode refid="14526" relation="usage">
          <edgelabel>permission_overwrites</edgelabel>
        </childnode>
      </node>
      <node id="14491">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="14499">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="14436">
        <label>SSL_CTX *</label>
      </node>
      <node id="14486">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="14509">
        <label>mutex</label>
      </node>
      <node id="14497">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14527">
        <label>dpp::permission_overwrite</label>
        <link refid="structdpp_1_1permission__overwrite"/>
        <childnode refid="14429" relation="usage">
          <edgelabel>allow</edgelabel>
          <edgelabel>deny</edgelabel>
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="14445" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="14455">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="14474">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="14480">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="14493">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="14433">
        <label>bool</label>
      </node>
      <node id="14431">
        <label>SOCKET</label>
      </node>
      <node id="14514">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="14442" relation="public-inheritance">
        </childnode>
        <childnode refid="14429" relation="usage">
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="14515" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="14518" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="14443" relation="usage">
          <edgelabel>shard_id</edgelabel>
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
        </childnode>
        <childnode refid="14444" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="14445" relation="usage">
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>verification_level</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>premium_tier</edgelabel>
        </childnode>
        <childnode refid="14423" relation="usage">
          <edgelabel>vanity_url_code</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="14519" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
        <childnode refid="14517" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="14446" relation="usage">
          <edgelabel>splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
        </childnode>
      </node>
      <node id="14469">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="14501">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="14459">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="14451">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14448">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="14467">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="14489">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="14449">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="14462">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="14458">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="14517">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="14429" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14510">
        <label>native_handle_type</label>
      </node>
      <node id="14460">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14522">
        <label>dpp::thread_member</label>
        <link refid="structdpp_1_1thread__member"/>
        <childnode refid="14430" relation="usage">
          <edgelabel>joined</edgelabel>
        </childnode>
        <childnode refid="14429" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="14444" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="14423">
        <label>std::string</label>
        <childnode refid="14424" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14457">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="783" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="783" bodyend="793"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::thread_list_sync_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::thread_list_sync_t</scope><name>from</name></member>
      <member refid="structdpp_1_1thread__list__sync__t_1a31bf68ed2826d2dedd431b88a164b8d2" prot="public" virt="non-virtual"><scope>dpp::thread_list_sync_t</scope><name>members</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::thread_list_sync_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1thread__list__sync__t_1a8d1209cbdca8b01143488f3550af094b" prot="public" virt="non-virtual"><scope>dpp::thread_list_sync_t</scope><name>thread_list_sync_t</name></member>
      <member refid="structdpp_1_1thread__list__sync__t_1a8fb0f184795e5cd99e764ce518d32eb8" prot="public" virt="non-virtual"><scope>dpp::thread_list_sync_t</scope><name>threads</name></member>
      <member refid="structdpp_1_1thread__list__sync__t_1abbf38daac2b090e9f2fb587caa33f574" prot="public" virt="non-virtual"><scope>dpp::thread_list_sync_t</scope><name>updating_guild</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
