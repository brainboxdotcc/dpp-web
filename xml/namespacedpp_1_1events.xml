<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="namespacedpp_1_1events" kind="namespace" language="C++">
    <compoundname>dpp::events</compoundname>
    <innerclass refid="classdpp_1_1events_1_1automod__rule__create" prot="public">dpp::events::automod_rule_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1automod__rule__delete" prot="public">dpp::events::automod_rule_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1automod__rule__execute" prot="public">dpp::events::automod_rule_execute</innerclass>
    <innerclass refid="classdpp_1_1events_1_1automod__rule__update" prot="public">dpp::events::automod_rule_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1channel__create" prot="public">dpp::events::channel_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1channel__delete" prot="public">dpp::events::channel_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1channel__pins__update" prot="public">dpp::events::channel_pins_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1channel__update" prot="public">dpp::events::channel_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1entitlement__create" prot="public">dpp::events::entitlement_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1entitlement__delete" prot="public">dpp::events::entitlement_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1entitlement__update" prot="public">dpp::events::entitlement_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1event" prot="public">dpp::events::event</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__audit__log__entry__create" prot="public">dpp::events::guild_audit_log_entry_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__ban__add" prot="public">dpp::events::guild_ban_add</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__ban__remove" prot="public">dpp::events::guild_ban_remove</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__create" prot="public">dpp::events::guild_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__delete" prot="public">dpp::events::guild_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__emojis__update" prot="public">dpp::events::guild_emojis_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__integrations__update" prot="public">dpp::events::guild_integrations_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__join__request__delete" prot="public">dpp::events::guild_join_request_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__member__add" prot="public">dpp::events::guild_member_add</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__member__remove" prot="public">dpp::events::guild_member_remove</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__member__update" prot="public">dpp::events::guild_member_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__members__chunk" prot="public">dpp::events::guild_members_chunk</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__role__create" prot="public">dpp::events::guild_role_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__role__delete" prot="public">dpp::events::guild_role_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__role__update" prot="public">dpp::events::guild_role_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__scheduled__event__create" prot="public">dpp::events::guild_scheduled_event_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__scheduled__event__delete" prot="public">dpp::events::guild_scheduled_event_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__scheduled__event__update" prot="public">dpp::events::guild_scheduled_event_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__scheduled__event__user__add" prot="public">dpp::events::guild_scheduled_event_user_add</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__scheduled__event__user__remove" prot="public">dpp::events::guild_scheduled_event_user_remove</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__stickers__update" prot="public">dpp::events::guild_stickers_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1guild__update" prot="public">dpp::events::guild_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1integration__create" prot="public">dpp::events::integration_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1integration__delete" prot="public">dpp::events::integration_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1integration__update" prot="public">dpp::events::integration_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1interaction__create" prot="public">dpp::events::interaction_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1invite__create" prot="public">dpp::events::invite_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1invite__delete" prot="public">dpp::events::invite_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1logger" prot="public">dpp::events::logger</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__create" prot="public">dpp::events::message_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__delete" prot="public">dpp::events::message_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__delete__bulk" prot="public">dpp::events::message_delete_bulk</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__poll__vote__add" prot="public">dpp::events::message_poll_vote_add</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__poll__vote__remove" prot="public">dpp::events::message_poll_vote_remove</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__reaction__add" prot="public">dpp::events::message_reaction_add</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__reaction__remove" prot="public">dpp::events::message_reaction_remove</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__reaction__remove__all" prot="public">dpp::events::message_reaction_remove_all</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__reaction__remove__emoji" prot="public">dpp::events::message_reaction_remove_emoji</innerclass>
    <innerclass refid="classdpp_1_1events_1_1message__update" prot="public">dpp::events::message_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1presence__update" prot="public">dpp::events::presence_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1ready" prot="public">dpp::events::ready</innerclass>
    <innerclass refid="classdpp_1_1events_1_1resumed" prot="public">dpp::events::resumed</innerclass>
    <innerclass refid="classdpp_1_1events_1_1stage__instance__create" prot="public">dpp::events::stage_instance_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1stage__instance__delete" prot="public">dpp::events::stage_instance_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1stage__instance__update" prot="public">dpp::events::stage_instance_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1thread__create" prot="public">dpp::events::thread_create</innerclass>
    <innerclass refid="classdpp_1_1events_1_1thread__delete" prot="public">dpp::events::thread_delete</innerclass>
    <innerclass refid="classdpp_1_1events_1_1thread__list__sync" prot="public">dpp::events::thread_list_sync</innerclass>
    <innerclass refid="classdpp_1_1events_1_1thread__member__update" prot="public">dpp::events::thread_member_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1thread__members__update" prot="public">dpp::events::thread_members_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1thread__update" prot="public">dpp::events::thread_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1typing__start" prot="public">dpp::events::typing_start</innerclass>
    <innerclass refid="classdpp_1_1events_1_1user__update" prot="public">dpp::events::user_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1voice__server__update" prot="public">dpp::events::voice_server_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1voice__state__update" prot="public">dpp::events::voice_state_update</innerclass>
    <innerclass refid="classdpp_1_1events_1_1webhooks__update" prot="public">dpp::events::webhooks_update</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacedpp_1_1events_1aa33d90e75c1ac9ada8fbdb560d040f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string DPP_EXPORT</type>
        <definition>std::string DPP_EXPORT dpp::events::internal_handle_interaction</definition>
        <argsstring>(cluster *creator, uint16_t shard_id, json &amp;d, const std::string &amp;raw, bool from_webhook)</argsstring>
        <name>internal_handle_interaction</name>
        <param>
          <type><ref refid="classdpp_1_1cluster" kindref="compound">cluster</ref> *</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>shard_id</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1ae9134a9d8edf8adcb87e979bb7a7343e" kindref="member">json</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>from_webhook</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="80" column="24" declfile="include/dpp/dispatcher.h" declline="80" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Route interaction event. </para>
    </briefdescription>
    <detaileddescription>
<para>The events namespace holds the internal event handlers for each websocket event. These are handled internally and also dispatched to the user code if the event is hooked.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>creator</parametername>
</parameternamelist>
<parameterdescription>
<para>Creating cluster </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shard_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Shard ID or 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON data for the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw JSON string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from_webhook</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the interaction comes from a webhook </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>JSON interaction response, only valid when from_webhook is true </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/dpp/dispatcher.h" line="79" column="1"/>
  </compounddef>
</doxygen>
