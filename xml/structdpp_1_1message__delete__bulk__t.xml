<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1message__delete__bulk__t" kind="struct" prot="public">
    <compoundname>dpp::message_delete_bulk_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1message__delete__bulk__t_1a64b47d0bdbbfbd08f2dfd4f61944efda" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::message_delete_bulk_t::deleting_guild</definition>
        <argsstring></argsstring>
        <name>deleting_guild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="486" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1message__delete__bulk__t_1aa8fb42cb1b7f751bcbad1964d48cb759" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1user" kindref="compound">user</ref> *</type>
        <definition>user* dpp::message_delete_bulk_t::deleting_user</definition>
        <argsstring></argsstring>
        <name>deleting_user</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="487" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1message__delete__bulk__t_1a26ba3d82ef9ea2a0b5f4cc6c7332f0df" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1channel" kindref="compound">channel</ref> *</type>
        <definition>channel* dpp::message_delete_bulk_t::deleting_channel</definition>
        <argsstring></argsstring>
        <name>deleting_channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="488" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1message__delete__bulk__t_1a34eaf5cc7e14267633070399ece6c235" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref> &gt;</type>
        <definition>std::vector&lt;snowflake&gt; dpp::message_delete_bulk_t::deleted</definition>
        <argsstring></argsstring>
        <name>deleted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="489" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1message__delete__bulk__t_1a07ab83e88b6cf91e218c5da9e09cdfe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::message_delete_bulk_t::message_delete_bulk_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>message_delete_bulk_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="485" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="116" bodyend="116"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Message delete bulk. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="12462">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
      <node id="12461">
        <label>dpp::message_delete_bulk_t</label>
        <link refid="structdpp_1_1message__delete__bulk__t"/>
        <childnode refid="12462" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12542">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="12480">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="12479" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="12472" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="12481" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="12483" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="12486" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="12465" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="12489" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="12476">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="12477" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="12478" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="12506">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12521">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="12507">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="12554">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="12471" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12555" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="12465" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="12557">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="12471" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="12558" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12547">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="12534">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="12483">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="12484" relation="public-inheritance">
        </childnode>
        <childnode refid="12485" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="12486" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12487" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="12465" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="12488" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="12492">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="12536">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="12508">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="12538">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="12565">
        <label>std::vector&lt; dpp::permission_overwrite &gt;</label>
        <childnode refid="12566" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12560">
        <label>region</label>
      </node>
      <node id="12548">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="12474">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="12562">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="12471" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12487" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12465" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="12467" relation="usage">
          <edgelabel>shard</edgelabel>
        </childnode>
      </node>
      <node id="12489">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="12490" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="12491" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="12492" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="12493" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="12494" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="12495" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="12496" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="12497" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="12498" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="12499" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="12500" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="12501" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="12502" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="12503" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="12504" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="12505" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="12506" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="12507" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="12508" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="12509" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="12510" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="12511" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="12512" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="12513" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="12514" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="12515" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="12516" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="12517" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="12518" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="12519" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="12520" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="12521" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="12522" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="12523" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="12524" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="12525" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="12526" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="12527" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="12528" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="12529" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="12530" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="12531" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="12532" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="12533" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="12534" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="12535" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="12536" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="12537" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="12538" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="12539" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="12540" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="12541" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="12542" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="12543" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="12544" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="12545" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="12546" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="12547" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="12548" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="12549" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="12550" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="12558">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="12472" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="12471" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="12487" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12465" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="12559" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="12496">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="12503">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="12545">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="12471">
        <label>uint64_t</label>
      </node>
      <node id="12540">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12537">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12523">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="12564">
        <label>dpp::thread_metadata</label>
        <link refid="structdpp_1_1thread__metadata"/>
        <childnode refid="12472" relation="usage">
          <edgelabel>archive_timestamp</edgelabel>
        </childnode>
        <childnode refid="12485" relation="usage">
          <edgelabel>auto_archive_duration</edgelabel>
        </childnode>
        <childnode refid="12475" relation="usage">
          <edgelabel>archived</edgelabel>
          <edgelabel>locked</edgelabel>
        </childnode>
      </node>
      <node id="12517">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="12505">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="12494">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12513">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="12530">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="12527">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12550">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="12485">
        <label>uint16_t</label>
      </node>
      <node id="12515">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="12472">
        <label>time_t</label>
      </node>
      <node id="12466">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="12549">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="12526">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="12555">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="12468" relation="public-inheritance">
        </childnode>
        <childnode refid="12471" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12472" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="12480" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="12486" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="12465" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="12475" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="12552" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="12488">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="12471" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="12525">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="12514">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="12479">
        <label>double</label>
      </node>
      <node id="12469">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="12470" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="12471" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="12472" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="12473" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="12474" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="12475" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="12465" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="12476" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="12524">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12546">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="12486">
        <label>uint32_t</label>
      </node>
      <node id="12544">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="12464">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="12465" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="12467" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="12487">
        <label>uint8_t</label>
      </node>
      <node id="12529">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="12561">
        <label>std::map&lt; snowflake, dpp::voicestate &gt;</label>
        <childnode refid="12471" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="12562" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12482">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="12468">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="12469" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12481">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="12482" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="12498">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="12510">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="12495">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="12518">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="12520">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="12553">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="12471" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="12554" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12470">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="12512">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12467">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="12468" relation="public-inheritance">
        </childnode>
        <childnode refid="12479" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="12471" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="12472" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="12480" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="12551" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="12486" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="12475" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="12465" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="12552" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="12553" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="12519">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="12477">
        <label>SSL *</label>
      </node>
      <node id="12484">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="12471" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="12532">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="12563">
        <label>dpp::channel</label>
        <link refid="classdpp_1_1channel"/>
        <childnode refid="12484" relation="public-inheritance">
        </childnode>
        <childnode refid="12564" relation="usage">
          <edgelabel>metadata</edgelabel>
        </childnode>
        <childnode refid="12472" relation="usage">
          <edgelabel>last_pin_timestamp</edgelabel>
        </childnode>
        <childnode refid="12471" relation="usage">
          <edgelabel>parent_id</edgelabel>
          <edgelabel>last_message_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
        </childnode>
        <childnode refid="12485" relation="usage">
          <edgelabel>rate_limit_per_user</edgelabel>
          <edgelabel>position</edgelabel>
        </childnode>
        <childnode refid="12465" relation="usage">
          <edgelabel>topic</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="12487" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>user_limit</edgelabel>
          <edgelabel>message_count</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="12559" relation="usage">
          <edgelabel>recipients</edgelabel>
        </childnode>
        <childnode refid="12565" relation="usage">
          <edgelabel>permission_overwrites</edgelabel>
        </childnode>
      </node>
      <node id="12533">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="12541">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="12478">
        <label>SSL_CTX *</label>
      </node>
      <node id="12463">
        <label>dpp::message_delete_bulk_t</label>
        <link refid="structdpp_1_1message__delete__bulk__t"/>
        <childnode refid="12464" relation="public-inheritance">
        </childnode>
        <childnode refid="12556" relation="usage">
          <edgelabel>deleting_guild</edgelabel>
        </childnode>
        <childnode refid="12483" relation="usage">
          <edgelabel>deleting_user</edgelabel>
        </childnode>
        <childnode refid="12559" relation="usage">
          <edgelabel>deleted</edgelabel>
        </childnode>
        <childnode refid="12563" relation="usage">
          <edgelabel>deleting_channel</edgelabel>
        </childnode>
      </node>
      <node id="12528">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="12551">
        <label>mutex</label>
      </node>
      <node id="12539">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12566">
        <label>dpp::permission_overwrite</label>
        <link refid="structdpp_1_1permission__overwrite"/>
        <childnode refid="12471" relation="usage">
          <edgelabel>allow</edgelabel>
          <edgelabel>deny</edgelabel>
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="12487" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="12497">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="12516">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="12522">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="12535">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="12475">
        <label>bool</label>
      </node>
      <node id="12473">
        <label>SOCKET</label>
      </node>
      <node id="12556">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="12484" relation="public-inheritance">
        </childnode>
        <childnode refid="12471" relation="usage">
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="12557" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="12560" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="12485" relation="usage">
          <edgelabel>shard_id</edgelabel>
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
        </childnode>
        <childnode refid="12486" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="12487" relation="usage">
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>verification_level</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>premium_tier</edgelabel>
        </childnode>
        <childnode refid="12465" relation="usage">
          <edgelabel>vanity_url_code</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="12561" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
        <childnode refid="12559" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="12488" relation="usage">
          <edgelabel>splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
        </childnode>
      </node>
      <node id="12511">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="12543">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="12501">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="12493">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12490">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="12509">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="12531">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="12491">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="12504">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="12500">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="12559">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="12471" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12552">
        <label>native_handle_type</label>
      </node>
      <node id="12502">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12465">
        <label>std::string</label>
        <childnode refid="12466" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12499">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="480" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="480" bodyend="490"/>
    <listofallmembers>
      <member refid="structdpp_1_1message__delete__bulk__t_1a34eaf5cc7e14267633070399ece6c235" prot="public" virt="non-virtual"><scope>dpp::message_delete_bulk_t</scope><name>deleted</name></member>
      <member refid="structdpp_1_1message__delete__bulk__t_1a26ba3d82ef9ea2a0b5f4cc6c7332f0df" prot="public" virt="non-virtual"><scope>dpp::message_delete_bulk_t</scope><name>deleting_channel</name></member>
      <member refid="structdpp_1_1message__delete__bulk__t_1a64b47d0bdbbfbd08f2dfd4f61944efda" prot="public" virt="non-virtual"><scope>dpp::message_delete_bulk_t</scope><name>deleting_guild</name></member>
      <member refid="structdpp_1_1message__delete__bulk__t_1aa8fb42cb1b7f751bcbad1964d48cb759" prot="public" virt="non-virtual"><scope>dpp::message_delete_bulk_t</scope><name>deleting_user</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::message_delete_bulk_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::message_delete_bulk_t</scope><name>from</name></member>
      <member refid="structdpp_1_1message__delete__bulk__t_1a07ab83e88b6cf91e218c5da9e09cdfe1" prot="public" virt="non-virtual"><scope>dpp::message_delete_bulk_t</scope><name>message_delete_bulk_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::message_delete_bulk_t</scope><name>raw_event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
