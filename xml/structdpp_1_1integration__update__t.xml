<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1integration__update__t" kind="struct" prot="public">
    <compoundname>dpp::integration_update_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1integration__update__t_1a990a83a76b94bdf823d04708b3b3e050" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1integration" kindref="compound">integration</ref></type>
        <definition>integration dpp::integration_update_t::updated_integration</definition>
        <argsstring></argsstring>
        <name>updated_integration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="729" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="729" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1integration__update__t_1ab7db601d6ece4dc115e4a4fce98eba94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::integration_update_t::integration_update_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>integration_update_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="728" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="138" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Integration update. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="11695">
        <label>dpp::integration_update_t</label>
        <link refid="structdpp_1_1integration__update__t"/>
        <childnode refid="11696" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11696">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11776">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="11714">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="11713" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="11706" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="11715" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="11717" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="11720" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="11699" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="11723" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="11710">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="11711" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="11712" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="11740">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11755">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="11741">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="11788">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="11705" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11789" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="11699" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="11781">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="11768">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="11717">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="11718" relation="public-inheritance">
        </childnode>
        <childnode refid="11719" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="11720" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11721" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="11699" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="11722" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="11726">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="11697">
        <label>dpp::integration_update_t</label>
        <link refid="structdpp_1_1integration__update__t"/>
        <childnode refid="11698" relation="public-inheritance">
        </childnode>
        <childnode refid="11790" relation="usage">
          <edgelabel>updated_integration</edgelabel>
        </childnode>
      </node>
      <node id="11770">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="11742">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="11772">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="11782">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="11708">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="11723">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="11724" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="11725" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="11726" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="11727" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="11728" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="11729" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="11730" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="11731" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="11732" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="11733" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="11734" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="11735" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="11736" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="11737" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="11738" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="11739" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="11740" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="11741" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="11742" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="11743" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="11744" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="11745" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="11746" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="11747" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="11748" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="11749" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="11750" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="11751" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="11752" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="11753" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="11754" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="11755" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="11756" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="11757" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="11758" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="11759" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="11760" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="11761" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="11762" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="11763" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="11764" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="11765" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="11766" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="11767" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="11768" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="11769" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="11770" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="11771" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="11772" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="11773" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="11774" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="11775" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="11776" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="11777" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="11778" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="11779" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="11780" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="11781" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="11782" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="11783" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="11784" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="11730">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="11737">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="11792">
        <label>integration_type</label>
      </node>
      <node id="11779">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="11705">
        <label>uint64_t</label>
      </node>
      <node id="11774">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11771">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11757">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="11751">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="11739">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="11728">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11747">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="11764">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="11761">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11784">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="11719">
        <label>uint16_t</label>
      </node>
      <node id="11749">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="11706">
        <label>time_t</label>
      </node>
      <node id="11700">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="11783">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11760">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="11789">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="11702" relation="public-inheritance">
        </childnode>
        <childnode refid="11705" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11706" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="11714" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="11720" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="11699" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="11709" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="11786" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="11722">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="11705" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="11759">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="11748">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="11713">
        <label>double</label>
      </node>
      <node id="11703">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="11704" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="11705" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="11706" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="11707" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="11708" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="11709" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="11699" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="11710" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="11758">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11780">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="11720">
        <label>uint32_t</label>
      </node>
      <node id="11778">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="11698">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="11699" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="11701" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="11721">
        <label>uint8_t</label>
      </node>
      <node id="11763">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="11716">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="11702">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="11703" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11715">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="11716" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="11732">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="11744">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="11729">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="11752">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="11754">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="11787">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="11705" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11788" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11704">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="11746">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11701">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="11702" relation="public-inheritance">
        </childnode>
        <childnode refid="11713" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="11705" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="11706" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="11714" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="11785" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="11720" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="11709" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="11699" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="11786" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="11787" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="11753">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="11711">
        <label>SSL *</label>
      </node>
      <node id="11718">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="11705" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="11766">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="11767">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="11775">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="11712">
        <label>SSL_CTX *</label>
      </node>
      <node id="11762">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="11785">
        <label>mutex</label>
      </node>
      <node id="11773">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11731">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="11750">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="11756">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="11769">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="11709">
        <label>bool</label>
      </node>
      <node id="11707">
        <label>SOCKET</label>
      </node>
      <node id="11745">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="11790">
        <label>dpp::integration</label>
        <link refid="classdpp_1_1integration"/>
        <childnode refid="11718" relation="public-inheritance">
        </childnode>
        <childnode refid="11706" relation="usage">
          <edgelabel>synced_at</edgelabel>
        </childnode>
        <childnode refid="11705" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>role_id</edgelabel>
        </childnode>
        <childnode refid="11791" relation="usage">
          <edgelabel>app</edgelabel>
        </childnode>
        <childnode refid="11720" relation="usage">
          <edgelabel>subscriber_count</edgelabel>
          <edgelabel>expire_grace_period</edgelabel>
        </childnode>
        <childnode refid="11792" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="11721" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11699" relation="usage">
          <edgelabel>account_id</edgelabel>
          <edgelabel>account_name</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="11777">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="11735">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11727">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11724">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="11743">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11765">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="11725">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="11738">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="11734">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="11786">
        <label>native_handle_type</label>
      </node>
      <node id="11736">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11699">
        <label>std::string</label>
        <childnode refid="11700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11733">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
      <node id="11791">
        <label>dpp::integration_app</label>
        <link refid="structdpp_1_1integration__app"/>
        <childnode refid="11705" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="11717" relation="usage">
          <edgelabel>bot</edgelabel>
        </childnode>
        <childnode refid="11699" relation="usage">
          <edgelabel>summary</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="722" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="722" bodyend="730"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::integration_update_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::integration_update_t</scope><name>from</name></member>
      <member refid="structdpp_1_1integration__update__t_1ab7db601d6ece4dc115e4a4fce98eba94" prot="public" virt="non-virtual"><scope>dpp::integration_update_t</scope><name>integration_update_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::integration_update_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1integration__update__t_1a990a83a76b94bdf823d04708b3b3e050" prot="public" virt="non-virtual"><scope>dpp::integration_update_t</scope><name>updated_integration</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
