<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1voice__user__talking__t" kind="struct" prot="public">
    <compoundname>dpp::voice_user_talking_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1voice__user__talking__t_1ac496e63b6b2eba1f3ac9e172a558ec38" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__voice__client" kindref="compound">discord_voice_client</ref> *</type>
        <definition>class discord_voice_client* dpp::voice_user_talking_t::voice_client</definition>
        <argsstring></argsstring>
        <name>voice_client</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="846" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="846" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1voice__user__talking__t_1aeb9986889aec16ac0d5da675636218dd" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::voice_user_talking_t::user_id</definition>
        <argsstring></argsstring>
        <name>user_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="847" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="847" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1voice__user__talking__t_1a9d52fb0412548166b6e54d81bdb8980b" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dpp::voice_user_talking_t::talking_flags</definition>
        <argsstring></argsstring>
        <name>talking_flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="848" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="848" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1voice__user__talking__t_1a364eafcc97db6de005b150f3a92ed634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::voice_user_talking_t::voice_user_talking_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>voice_user_talking_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on WILL ALWAYS be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="845" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="149" bodyend="149"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>voice user talking </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="15670">
        <label>dpp::voice_user_talking_t</label>
        <link refid="structdpp_1_1voice__user__talking__t"/>
        <childnode refid="15671" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15671">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15751">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="15689">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="15688" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="15681" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="15690" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="15692" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="15695" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="15674" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="15698" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="15685">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="15686" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="15687" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="15715">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15730">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="15716">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="15763">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="15680" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="15764" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="15674" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="15756">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="15743">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="15692">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="15693" relation="public-inheritance">
        </childnode>
        <childnode refid="15694" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="15695" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="15696" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="15674" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="15697" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="15701">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="15745">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="15717">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="15747">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="15757">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="15683">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="15698">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="15699" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="15700" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="15701" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="15702" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="15703" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="15704" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="15705" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="15706" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="15707" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="15708" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="15709" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="15710" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="15711" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="15712" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="15713" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="15714" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="15715" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="15716" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="15717" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="15718" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="15719" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="15720" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="15721" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="15722" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="15723" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="15724" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="15725" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="15726" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="15727" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="15728" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="15729" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="15730" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="15731" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="15732" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="15733" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="15734" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="15735" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="15736" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="15737" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="15738" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="15739" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="15740" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="15741" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="15742" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="15743" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="15744" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="15745" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="15746" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="15747" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="15748" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="15749" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="15750" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="15751" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="15752" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="15753" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="15754" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="15755" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="15756" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="15757" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="15758" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="15759" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="15705">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="15712">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="15754">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="15680">
        <label>uint64_t</label>
      </node>
      <node id="15749">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15746">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15732">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="15726">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="15714">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="15703">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15722">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="15739">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="15736">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15672">
        <label>dpp::voice_user_talking_t</label>
        <link refid="structdpp_1_1voice__user__talking__t"/>
        <childnode refid="15673" relation="public-inheritance">
        </childnode>
        <childnode refid="15680" relation="usage">
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="15696" relation="usage">
          <edgelabel>talking_flags</edgelabel>
        </childnode>
        <childnode refid="15764" relation="usage">
          <edgelabel>voice_client</edgelabel>
        </childnode>
      </node>
      <node id="15759">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="15694">
        <label>uint16_t</label>
      </node>
      <node id="15724">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="15681">
        <label>time_t</label>
      </node>
      <node id="15675">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="15758">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="15735">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="15764">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="15677" relation="public-inheritance">
        </childnode>
        <childnode refid="15680" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="15681" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="15689" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="15695" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="15674" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="15684" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="15761" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="15697">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="15680" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="15734">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="15723">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="15688">
        <label>double</label>
      </node>
      <node id="15678">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="15679" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="15680" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="15681" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="15682" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="15683" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="15684" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="15674" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="15685" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="15733">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15755">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="15695">
        <label>uint32_t</label>
      </node>
      <node id="15753">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="15673">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="15674" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="15676" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="15696">
        <label>uint8_t</label>
      </node>
      <node id="15738">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="15691">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="15677">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="15678" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15690">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="15691" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="15707">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="15719">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="15704">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="15727">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="15729">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="15762">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="15680" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15763" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15679">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="15721">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15676">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="15677" relation="public-inheritance">
        </childnode>
        <childnode refid="15688" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="15680" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="15681" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="15689" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="15760" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="15695" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="15684" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="15674" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="15761" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="15762" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="15728">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="15686">
        <label>SSL *</label>
      </node>
      <node id="15693">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="15680" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="15741">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="15742">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="15750">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="15687">
        <label>SSL_CTX *</label>
      </node>
      <node id="15737">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="15760">
        <label>mutex</label>
      </node>
      <node id="15748">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15706">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="15725">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="15731">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="15744">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="15684">
        <label>bool</label>
      </node>
      <node id="15682">
        <label>SOCKET</label>
      </node>
      <node id="15720">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="15752">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="15710">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="15702">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15699">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="15718">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="15740">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="15700">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="15713">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="15709">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="15761">
        <label>native_handle_type</label>
      </node>
      <node id="15711">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15674">
        <label>std::string</label>
        <childnode refid="15675" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15708">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="838" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="838" bodyend="849"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::voice_user_talking_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::voice_user_talking_t</scope><name>from</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::voice_user_talking_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1voice__user__talking__t_1a9d52fb0412548166b6e54d81bdb8980b" prot="public" virt="non-virtual"><scope>dpp::voice_user_talking_t</scope><name>talking_flags</name></member>
      <member refid="structdpp_1_1voice__user__talking__t_1aeb9986889aec16ac0d5da675636218dd" prot="public" virt="non-virtual"><scope>dpp::voice_user_talking_t</scope><name>user_id</name></member>
      <member refid="structdpp_1_1voice__user__talking__t_1ac496e63b6b2eba1f3ac9e172a558ec38" prot="public" virt="non-virtual"><scope>dpp::voice_user_talking_t</scope><name>voice_client</name></member>
      <member refid="structdpp_1_1voice__user__talking__t_1a364eafcc97db6de005b150f3a92ed634" prot="public" virt="non-virtual"><scope>dpp::voice_user_talking_t</scope><name>voice_user_talking_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
