<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1welcome__screen" kind="struct" language="C++" prot="public">
    <compoundname>dpp::welcome_screen</compoundname>
    <basecompoundref refid="structdpp_1_1json__interface" prot="public" virt="non-virtual">dpp::json_interface&lt; welcome_screen &gt;</basecompoundref>
    <includes local="no">guild.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structdpp_1_1welcome__screen_1a620f81c84b8afbd54d548346645f446e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct json_interface&lt; welcome_screen &gt;</definition>
        <argsstring></argsstring>
        <name>json_interface&lt; welcome_screen &gt;</name>
        <param>
          <type><ref refid="structdpp_1_1json__interface" kindref="compound">json_interface</ref>&lt; <ref refid="structdpp_1_1welcome__screen" kindref="compound">welcome_screen</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="763" column="17" bodyfile="include/dpp/guild.h" bodystart="772" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1welcome__screen_1a770643a1cbb15d2a3ce7ed241c4b3415" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::welcome_screen::description</definition>
        <argsstring></argsstring>
        <name>description</name>
        <briefdescription>
<para>The server description shown in the welcome screen. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="794" column="13" bodyfile="include/dpp/guild.h" bodystart="794" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1welcome__screen_1a28e29ac75cc36beb4d0d740bd49ab0e4" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structdpp_1_1welcome__channel" kindref="compound">welcome_channel</ref> &gt;</type>
        <definition>std::vector&lt;welcome_channel&gt; dpp::welcome_screen::welcome_channels</definition>
        <argsstring></argsstring>
        <name>welcome_channels</name>
        <briefdescription>
<para>The channels shown in the welcome screen (max 5) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="799" column="13" bodyfile="include/dpp/guild.h" bodystart="799" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structdpp_1_1welcome__screen_1a49f8c636f26b3f73b4e2bdcdc1dfd4d8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1welcome__screen" kindref="compound">welcome_screen</ref> &amp;</type>
        <definition>welcome_screen &amp; dpp::welcome_screen::fill_from_json_impl</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json_impl</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Read class values from json object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>A json object to read from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="780" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1welcome__screen_1a9e5060318661179f38fccbd3b5e4b37f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacedpp_1ae9134a9d8edf8adcb87e979bb7a7343e" kindref="member">json</ref></type>
        <definition>json dpp::welcome_screen::to_json_impl</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>to_json_impl</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Build the json for this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>include the id in the JSON </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string json data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="788" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1welcome__screen_1aa1389a45fb5894bcdfa79d9976ab5ee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::welcome_screen::welcome_screen</definition>
        <argsstring>()=default</argsstring>
        <name>welcome_screen</name>
        <briefdescription>
<para>Construct a new welcome screen object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="804" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1welcome__screen_1a3816482fdccc1630b4e21f3765c6c344" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual dpp::welcome_screen::~welcome_screen</definition>
        <argsstring>()=default</argsstring>
        <name>~welcome_screen</name>
        <briefdescription>
<para>Destroy the welcome screen object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="809" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1welcome__screen_1a0fd948515dcc032354a4bec5ee8f709b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1welcome__screen" kindref="compound">welcome_screen</ref> &amp;</type>
        <definition>welcome_screen &amp; dpp::welcome_screen::set_description</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>set_description</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Set the server description for this welcome screen object shown in the welcome screen. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>string The server description </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to self, so these method calls may be chained </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="817" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdpp_1_1welcome__screen" kindref="compound">welcome_screen</ref> &amp;</type>
        <definition>welcome_screen  &amp; dpp::json_interface&lt; welcome_screen  &gt;::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Convert object from nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T&amp; Reference to self for fluent calling </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="44" column="3" bodyfile="include/dpp/json_interface.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto dpp::json_interface&lt; welcome_screen  &gt;::to_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>to_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>json Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="56" column="6" bodyfile="include/dpp/json_interface.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::json_interface&lt; welcome_screen  &gt;::build_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>build_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to json string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>std::string Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="68" column="13" bodyfile="include/dpp/json_interface.h" bodystart="68" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines a server&apos;s welcome screen. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="1">
        <label>dpp::welcome_screen</label>
        <link refid="structdpp_1_1welcome__screen"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; welcome_screen &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; welcome_screen &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="1">
        <label>dpp::welcome_screen</label>
        <link refid="structdpp_1_1welcome__screen"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>welcome_channels</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; welcome_screen &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; welcome_screen &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>vector&lt;</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/guild.h" line="770" column="1" bodyfile="include/dpp/guild.h" bodystart="770" bodyend="818"/>
    <listofallmembers>
      <member refid="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" virt="non-virtual"><scope>dpp::welcome_screen</scope><name>build_json</name></member>
      <member refid="structdpp_1_1welcome__screen_1a770643a1cbb15d2a3ce7ed241c4b3415" prot="public" virt="non-virtual"><scope>dpp::welcome_screen</scope><name>description</name></member>
      <member refid="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" virt="non-virtual"><scope>dpp::welcome_screen</scope><name>fill_from_json</name></member>
      <member refid="structdpp_1_1welcome__screen_1a49f8c636f26b3f73b4e2bdcdc1dfd4d8" prot="protected" virt="non-virtual"><scope>dpp::welcome_screen</scope><name>fill_from_json_impl</name></member>
      <member refid="structdpp_1_1welcome__screen_1a620f81c84b8afbd54d548346645f446e" prot="protected" virt="non-virtual"><scope>dpp::welcome_screen</scope><name>json_interface&lt; welcome_screen &gt;</name></member>
      <member refid="structdpp_1_1welcome__screen_1a0fd948515dcc032354a4bec5ee8f709b" prot="public" virt="non-virtual"><scope>dpp::welcome_screen</scope><name>set_description</name></member>
      <member refid="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" virt="non-virtual"><scope>dpp::welcome_screen</scope><name>to_json</name></member>
      <member refid="structdpp_1_1welcome__screen_1a9e5060318661179f38fccbd3b5e4b37f" prot="protected" virt="non-virtual"><scope>dpp::welcome_screen</scope><name>to_json_impl</name></member>
      <member refid="structdpp_1_1welcome__screen_1a28e29ac75cc36beb4d0d740bd49ab0e4" prot="public" virt="non-virtual"><scope>dpp::welcome_screen</scope><name>welcome_channels</name></member>
      <member refid="structdpp_1_1welcome__screen_1aa1389a45fb5894bcdfa79d9976ab5ee2" prot="public" virt="non-virtual"><scope>dpp::welcome_screen</scope><name>welcome_screen</name></member>
      <member refid="structdpp_1_1welcome__screen_1a3816482fdccc1630b4e21f3765c6c344" prot="public" virt="virtual"><scope>dpp::welcome_screen</scope><name>~welcome_screen</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
