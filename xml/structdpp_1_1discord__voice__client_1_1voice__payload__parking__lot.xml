<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1discord__voice__client_1_1voice__payload__parking__lot" kind="struct" language="C++" prot="private">
    <compoundname>dpp::discord_voice_client::voice_payload_parking_lot</compoundname>
    <innerclass refid="structdpp_1_1discord__voice__client_1_1voice__payload__parking__lot_1_1seq__range__t" prot="public">dpp::discord_voice_client::voice_payload_parking_lot::seq_range_t</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1discord__voice__client_1_1voice__payload__parking__lot_1ae770b6b3f06389a844bc203e63cd6bd1" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structdpp_1_1discord__voice__client_1_1voice__payload__parking__lot_1_1seq__range__t" kindref="compound">dpp::discord_voice_client::voice_payload_parking_lot::seq_range_t</ref></type>
        <definition>struct dpp::discord_voice_client::voice_payload_parking_lot::seq_range_t dpp::discord_voice_client::voice_payload_parking_lot::range</definition>
        <argsstring></argsstring>
        <name>range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordvoiceclient.h" line="208" column="7"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1discord__voice__client_1_1voice__payload__parking__lot_1acb176698802c94628884cbf2dec9e8c4" prot="public" static="no" mutable="no">
        <type>std::priority_queue&lt; voice_payload &gt;</type>
        <definition>std::priority_queue&lt;voice_payload&gt; dpp::discord_voice_client::voice_payload_parking_lot::parked_payloads</definition>
        <argsstring></argsstring>
        <name>parked_payloads</name>
        <briefdescription>
<para>The queue of parked voice payloads. </para>
        </briefdescription>
        <detaileddescription>
<para>We group payloads and deliver them to handlers periodically as the handling of out-of-order RTP packets. Payloads in between flushes are parked and sorted in this queue. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordvoiceclient.h" line="216" column="21" bodyfile="include/dpp/discordvoiceclient.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1discord__voice__client_1_1voice__payload__parking__lot_1a48deac32712dd0c10ea4dc94ebb8feb2" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; size_t &gt;</type>
        <definition>std::shared_ptr&lt;size_t&gt; dpp::discord_voice_client::voice_payload_parking_lot::decoder</definition>
        <argsstring></argsstring>
        <name>decoder</name>
        <briefdescription>
<para>libopus decoder </para>
        </briefdescription>
        <detaileddescription>
<para>Shared with the voice courier thread that does the decoding. This is not protected by a mutex because only the courier thread uses the decoder. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordvoiceclient.h" line="230" column="17" bodyfile="include/dpp/discordvoiceclient.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>dpp::discord_voice_client::voice_payload_parking_lot</label>
        <childnode refid="2" relation="usage">
          <edgelabel>range</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>parked_payloads</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>decoder</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dpp::discord_voice_client::voice_payload_parking_lot::seq_range_t</label>
        <link refid="structdpp_1_1discord__voice__client_1_1voice__payload__parking__lot_1_1seq__range__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>max_seq</edgelabel>
          <edgelabel>min_seq</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>max_timestamp</edgelabel>
          <edgelabel>min_timestamp</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>priority_queue&lt;</label>
      </node>
      <node id="6">
        <label>shared_ptr&lt;</label>
      </node>
      <node id="3">
        <label>uint16_t</label>
      </node>
      <node id="4">
        <label>uint32_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/discordvoiceclient.h" line="193" column="1" bodyfile="include/dpp/discordvoiceclient.h" bodystart="193" bodyend="232"/>
    <listofallmembers>
      <member refid="structdpp_1_1discord__voice__client_1_1voice__payload__parking__lot_1a48deac32712dd0c10ea4dc94ebb8feb2" prot="public" virt="non-virtual"><scope>dpp::discord_voice_client::voice_payload_parking_lot</scope><name>decoder</name></member>
      <member refid="structdpp_1_1discord__voice__client_1_1voice__payload__parking__lot_1acb176698802c94628884cbf2dec9e8c4" prot="public" virt="non-virtual"><scope>dpp::discord_voice_client::voice_payload_parking_lot</scope><name>parked_payloads</name></member>
      <member refid="structdpp_1_1discord__voice__client_1_1voice__payload__parking__lot_1ae770b6b3f06389a844bc203e63cd6bd1" prot="public" virt="non-virtual"><scope>dpp::discord_voice_client::voice_payload_parking_lot</scope><name>range</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
