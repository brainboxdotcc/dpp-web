<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1automod__action" kind="struct" language="C++" prot="public">
    <compoundname>dpp::automod_action</compoundname>
    <basecompoundref refid="structdpp_1_1json__interface" prot="public" virt="non-virtual">dpp::json_interface&lt; automod_action &gt;</basecompoundref>
    <includes local="no">automod.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1automod__action_1adab530731d417fba8771aaf40884caf9" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a3ad85ab5a039a0c7f46107a02440a14c" kindref="member">automod_action_type</ref></type>
        <definition>automod_action_type dpp::automod_action::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>Type of action to take. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/automod.h" line="143" column="21" bodyfile="include/dpp/automod.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1automod__action_1a2ba5d6d68adc00b34c7d85d5880aca4d" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::automod_action::channel_id</definition>
        <argsstring></argsstring>
        <name>channel_id</name>
        <briefdescription>
<para>Channel ID, for type amod_action_send_alert. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/automod.h" line="148" column="11" bodyfile="include/dpp/automod.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1automod__action_1a7b1be65c07451ca71e2c1e9d579b2fbe" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t dpp::automod_action::duration_seconds</definition>
        <argsstring></argsstring>
        <name>duration_seconds</name>
        <briefdescription>
<para>Silence duration in seconds (Maximum of 2419200), for amod_action_timeout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/automod.h" line="154" column="9" bodyfile="include/dpp/automod.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1automod__action_1ac2a996f644692f79ea0bd8bb2b840d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::automod_action::automod_action</definition>
        <argsstring>()</argsstring>
        <name>automod_action</name>
        <briefdescription>
<para>Construct a new automod action object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/automod.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1automod__action_1a738fe2ecb776788fdcc8e0ecd2c8b96f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual dpp::automod_action::~automod_action</definition>
        <argsstring>()</argsstring>
        <name>~automod_action</name>
        <briefdescription>
<para>Destroy the automod action object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/automod.h" line="164" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1automod__action_1a65214b29f1473da8ad25871deea7a40a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1automod__action" kindref="compound">automod_action</ref> &amp;</type>
        <definition>automod_action &amp; dpp::automod_action::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Fill object properties from JSON. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON to fill from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structdpp_1_1automod__action" kindref="compound">automod_action</ref>&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/automod.h" line="172" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1automod__action_1ae61c5cdd0f12361bdf1d0a5e6ab00d6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string dpp::automod_action::build_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>build_json</name>
        <reimplements refid="structdpp_1_1json__interface_1a287c22f692ee3d25b6f9b320ff35baa1">build_json</reimplements>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Build a json string for this object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::string JSON string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/automod.h" line="179" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an automod action. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dpp::automod_action</label>
        <link refid="structdpp_1_1automod__action"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; automod_action &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; automod_action &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>automod_action_type</label>
      </node>
      <node id="1">
        <label>dpp::automod_action</label>
        <link refid="structdpp_1_1automod__action"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>duration_seconds</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="6">
        <label>int32_t</label>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; automod_action &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; automod_action &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/automod.h" line="139" column="1" bodyfile="include/dpp/automod.h" bodystart="139" bodyend="180"/>
    <listofallmembers>
      <member refid="structdpp_1_1automod__action_1ac2a996f644692f79ea0bd8bb2b840d5c" prot="public" virt="non-virtual"><scope>dpp::automod_action</scope><name>automod_action</name></member>
      <member refid="structdpp_1_1automod__action_1ae61c5cdd0f12361bdf1d0a5e6ab00d6a" prot="public" virt="virtual"><scope>dpp::automod_action</scope><name>build_json</name></member>
      <member refid="structdpp_1_1automod__action_1a2ba5d6d68adc00b34c7d85d5880aca4d" prot="public" virt="non-virtual"><scope>dpp::automod_action</scope><name>channel_id</name></member>
      <member refid="structdpp_1_1automod__action_1a7b1be65c07451ca71e2c1e9d579b2fbe" prot="public" virt="non-virtual"><scope>dpp::automod_action</scope><name>duration_seconds</name></member>
      <member refid="structdpp_1_1automod__action_1a65214b29f1473da8ad25871deea7a40a" prot="public" virt="non-virtual"><scope>dpp::automod_action</scope><name>fill_from_json</name></member>
      <member refid="structdpp_1_1automod__action_1adab530731d417fba8771aaf40884caf9" prot="public" virt="non-virtual"><scope>dpp::automod_action</scope><name>type</name></member>
      <member refid="structdpp_1_1automod__action_1a738fe2ecb776788fdcc8e0ecd2c8b96f" prot="public" virt="virtual"><scope>dpp::automod_action</scope><name>~automod_action</name></member>
      <member refid="structdpp_1_1json__interface_1a8fea07be649b8bb166c28c5a7daccf53" prot="protected" virt="non-virtual"><scope>dpp::automod_action</scope><name>~json_interface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
