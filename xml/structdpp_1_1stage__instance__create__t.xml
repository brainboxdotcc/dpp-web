<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1stage__instance__create__t" kind="struct" prot="public">
    <compoundname>dpp::stage_instance_create_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1stage__instance__create__t_1ad79981650d838c2654bcd727a4bf5131" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::stage_instance_create_t::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>stage instance id </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="77" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1stage__instance__create__t_1ad6cfced8e7b6aa54586748625dfb2e43" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::stage_instance_create_t::channel_id</definition>
        <argsstring></argsstring>
        <name>channel_id</name>
        <briefdescription>
<para>Channel ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="81" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1stage__instance__create__t_1a32754597d464b1cdecf9b4f70ddb3fca" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::stage_instance_create_t::guild_id</definition>
        <argsstring></argsstring>
        <name>guild_id</name>
        <briefdescription>
<para>Guild ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="85" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1stage__instance__create__t_1a2f17c637b97c2e7eb0af0d25f1c6545e" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dpp::stage_instance_create_t::privacy_level</definition>
        <argsstring></argsstring>
        <name>privacy_level</name>
        <briefdescription>
<para>Privacy level. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="89" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1stage__instance__create__t_1a6193ead57024e23762718f04abbe4cab" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::stage_instance_create_t::topic</definition>
        <argsstring></argsstring>
        <name>topic</name>
        <briefdescription>
<para>Stage Topic. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="93" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1stage__instance__create__t_1ab1c85a535ca71b29978703fa68952227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::stage_instance_create_t::stage_instance_create_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>stage_instance_create_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on. CAN BE NULL for log events originating from the cluster object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="73" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="94" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Create stage instance. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="13805">
        <label>dpp::stage_instance_create_t</label>
        <link refid="structdpp_1_1stage__instance__create__t"/>
        <childnode refid="13806" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13806">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13886">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="13824">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="13823" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="13816" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="13825" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="13827" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="13830" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="13809" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="13833" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="13820">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="13821" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="13822" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="13850">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13865">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="13851">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="13898">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="13815" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="13899" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="13809" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="13891">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="13878">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="13827">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="13828" relation="public-inheritance">
        </childnode>
        <childnode refid="13829" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="13830" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="13831" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="13809" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="13832" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="13836">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="13880">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="13852">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="13882">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="13892">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="13818">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="13833">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="13834" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="13835" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="13836" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="13837" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="13838" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="13839" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="13840" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="13841" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="13842" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="13843" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="13844" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="13845" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="13846" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="13847" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="13848" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="13849" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="13850" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="13851" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="13852" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="13853" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="13854" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="13855" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="13856" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="13857" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="13858" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="13859" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="13860" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="13861" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="13862" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="13863" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="13864" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="13865" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="13866" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="13867" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="13868" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="13869" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="13870" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="13871" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="13872" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="13873" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="13874" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="13875" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="13876" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="13877" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="13878" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="13879" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="13880" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="13881" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="13882" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="13883" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="13884" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="13885" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="13886" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="13887" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="13888" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="13889" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="13890" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="13891" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="13892" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="13893" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="13894" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="13840">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="13847">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="13889">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="13815">
        <label>uint64_t</label>
      </node>
      <node id="13884">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13881">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13867">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="13861">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="13849">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="13838">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13857">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="13807">
        <label>dpp::stage_instance_create_t</label>
        <link refid="structdpp_1_1stage__instance__create__t"/>
        <childnode refid="13808" relation="public-inheritance">
        </childnode>
        <childnode refid="13815" relation="usage">
          <edgelabel>guild_id</edgelabel>
          <edgelabel>id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="13809" relation="usage">
          <edgelabel>topic</edgelabel>
        </childnode>
        <childnode refid="13831" relation="usage">
          <edgelabel>privacy_level</edgelabel>
        </childnode>
      </node>
      <node id="13874">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="13871">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13894">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="13829">
        <label>uint16_t</label>
      </node>
      <node id="13859">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="13816">
        <label>time_t</label>
      </node>
      <node id="13810">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="13893">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="13870">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="13899">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="13812" relation="public-inheritance">
        </childnode>
        <childnode refid="13815" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="13816" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="13824" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="13830" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="13809" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="13819" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="13896" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="13832">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="13815" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="13869">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="13858">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="13823">
        <label>double</label>
      </node>
      <node id="13813">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="13814" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="13815" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="13816" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="13817" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="13818" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="13819" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="13809" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="13820" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="13868">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13890">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="13830">
        <label>uint32_t</label>
      </node>
      <node id="13888">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="13808">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="13809" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="13811" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="13831">
        <label>uint8_t</label>
      </node>
      <node id="13873">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="13826">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="13812">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="13813" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13825">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="13826" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="13842">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="13854">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="13839">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="13862">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="13864">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="13897">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="13815" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="13898" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13814">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="13856">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13811">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="13812" relation="public-inheritance">
        </childnode>
        <childnode refid="13823" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="13815" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="13816" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="13824" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="13895" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="13830" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="13819" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="13809" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="13896" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="13897" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="13863">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="13821">
        <label>SSL *</label>
      </node>
      <node id="13828">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="13815" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="13876">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="13877">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="13885">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="13822">
        <label>SSL_CTX *</label>
      </node>
      <node id="13872">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="13895">
        <label>mutex</label>
      </node>
      <node id="13883">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13841">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="13860">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="13866">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="13879">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="13819">
        <label>bool</label>
      </node>
      <node id="13817">
        <label>SOCKET</label>
      </node>
      <node id="13855">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="13887">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="13845">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="13837">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13834">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="13853">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="13875">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="13835">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="13848">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="13844">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="13896">
        <label>native_handle_type</label>
      </node>
      <node id="13846">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13809">
        <label>std::string</label>
        <childnode refid="13810" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13843">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="67" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="67" bodyend="94"/>
    <listofallmembers>
      <member refid="structdpp_1_1stage__instance__create__t_1ad6cfced8e7b6aa54586748625dfb2e43" prot="public" virt="non-virtual"><scope>dpp::stage_instance_create_t</scope><name>channel_id</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::stage_instance_create_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::stage_instance_create_t</scope><name>from</name></member>
      <member refid="structdpp_1_1stage__instance__create__t_1a32754597d464b1cdecf9b4f70ddb3fca" prot="public" virt="non-virtual"><scope>dpp::stage_instance_create_t</scope><name>guild_id</name></member>
      <member refid="structdpp_1_1stage__instance__create__t_1ad79981650d838c2654bcd727a4bf5131" prot="public" virt="non-virtual"><scope>dpp::stage_instance_create_t</scope><name>id</name></member>
      <member refid="structdpp_1_1stage__instance__create__t_1a2f17c637b97c2e7eb0af0d25f1c6545e" prot="public" virt="non-virtual"><scope>dpp::stage_instance_create_t</scope><name>privacy_level</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::stage_instance_create_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1stage__instance__create__t_1ab1c85a535ca71b29978703fa68952227" prot="public" virt="non-virtual"><scope>dpp::stage_instance_create_t</scope><name>stage_instance_create_t</name></member>
      <member refid="structdpp_1_1stage__instance__create__t_1a6193ead57024e23762718f04abbe4cab" prot="public" virt="non-virtual"><scope>dpp::stage_instance_create_t</scope><name>topic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
