<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1message__pin" kind="class" language="C++" prot="public">
    <compoundname>dpp::message_pin</compoundname>
    <basecompoundref refid="structdpp_1_1json__interface" prot="public" virt="non-virtual">dpp::json_interface&lt; message_pin &gt;</basecompoundref>
    <includes local="no">message.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classdpp_1_1message__pin_1a3956bf9cc0f7e6de6d4f91a73fc1e4c3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct json_interface&lt; message_pin &gt;</definition>
        <argsstring></argsstring>
        <name>json_interface&lt; message_pin &gt;</name>
        <param>
          <type><ref refid="structdpp_1_1json__interface" kindref="compound">json_interface</ref>&lt; <ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="2566" column="13" bodyfile="include/dpp/message.h" bodystart="3006" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1message__pin_1a858a4e915c5c2b741c555d1f7297ad36" prot="public" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t dpp::message_pin::pinned_at</definition>
        <argsstring></argsstring>
        <name>pinned_at</name>
        <briefdescription>
<para>The time the message was pinned. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="3065" column="8" bodyfile="include/dpp/message.h" bodystart="3065" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1message__pin_1ab21d8d165be312ab0bca1299bc8146cc" prot="public" static="no" mutable="no">
        <type><ref refid="structdpp_1_1message" kindref="compound">message</ref></type>
        <definition>message dpp::message_pin::pinned_message</definition>
        <argsstring></argsstring>
        <name>pinned_message</name>
        <briefdescription>
<para>The pinned message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="3070" column="9" bodyfile="include/dpp/message.h" bodystart="3070" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdpp_1_1message__pin_1ace32a3f3ead04a5892e7c4337cec7430" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> &amp;</type>
        <definition>message_pin &amp; dpp::message_pin::fill_from_json_impl</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json_impl</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Fill in object from json data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref>&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="3014" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1message__pin_1a79ff2b3bdcd2b3badb5de90135a0a75c" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacedpp_1ae9134a9d8edf8adcb87e979bb7a7343e" kindref="member">json</ref></type>
        <definition>virtual json dpp::message_pin::to_json</definition>
        <argsstring>() const</argsstring>
        <name>to_json</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build JSON from this object. <simplesect kind="return"><para>The JSON text of the <ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="3019" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1message__pin_1a84d63eb40beb117287a3bbb252a04a4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::message_pin::message_pin</definition>
        <argsstring>()</argsstring>
        <name>message_pin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="3023" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1message__pin_1aac509817221df4fec0d2788992cbf13a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::message_pin::message_pin</definition>
        <argsstring>(const message_pin &amp;msg_pin)=default</argsstring>
        <name>message_pin</name>
        <param>
          <type>const <ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> &amp;</type>
          <declname>msg_pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="3031" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1message__pin_1a9c19b013b3be8dd15c379305924ee8f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::message_pin::message_pin</definition>
        <argsstring>(message_pin &amp;&amp;msg_pin)=default</argsstring>
        <name>message_pin</name>
        <param>
          <type><ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> &amp;&amp;</type>
          <declname>msg_pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="3037" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1message__pin_1a68d4c1bdca0b15e6705ebf306784708f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::message_pin::message_pin</definition>
        <argsstring>(time_t _pinned_at, const message &amp;_pinned_message)</argsstring>
        <name>message_pin</name>
        <param>
          <type>time_t</type>
          <declname>_pinned_at</declname>
        </param>
        <param>
          <type>const <ref refid="structdpp_1_1message" kindref="compound">message</ref> &amp;</type>
          <declname>_pinned_message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="3025" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1message__pin_1aee4be91915dce092d922a3448f06a5f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::message_pin::~message_pin</definition>
        <argsstring>()=default</argsstring>
        <name>~message_pin</name>
        <briefdescription>
<para>Destroy the <ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="3042" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::json_interface&lt; message_pin  &gt;::build_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>build_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to json string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>std::string Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="68" column="13" bodyfile="include/dpp/json_interface.h" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> &amp;</type>
        <definition>message_pin  &amp; dpp::json_interface&lt; message_pin  &gt;::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Convert object from nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T&amp; Reference to self for fluent calling </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="44" column="3" bodyfile="include/dpp/json_interface.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1message__pin_1a7a9656a527ab2f545afe985be744ee9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> &amp;</type>
        <definition>message_pin &amp; dpp::message_pin::operator=</definition>
        <argsstring>(const message_pin &amp;msg_pin)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> &amp;</type>
          <declname>msg_pin</declname>
        </param>
        <briefdescription>
<para>Copy a <ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg_pin</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref>&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="3050" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1message__pin_1a8c4c516e6c8578bd94a14a170e7de00b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> &amp;</type>
        <definition>message_pin &amp; dpp::message_pin::operator=</definition>
        <argsstring>(message_pin &amp;&amp;msg_pin)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> &amp;&amp;</type>
          <declname>msg_pin</declname>
        </param>
        <briefdescription>
<para>Move a <ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg_pin</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref> to move </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classdpp_1_1message__pin" kindref="compound">message_pin</ref>&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="3058" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto dpp::json_interface&lt; message_pin  &gt;::to_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>to_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>json Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="56" column="6" bodyfile="include/dpp/json_interface.h" bodystart="56" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a pinned message. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="1">
        <label>dpp::message_pin</label>
        <link refid="classdpp_1_1message__pin"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; message_pin &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; message_pin &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="16">
        <label>bool</label>
      </node>
      <node id="33">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="31">
        <label>double</label>
      </node>
      <node id="32">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="33" relation="usage">
          <edgelabel>channel_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>guild_policy</edgelabel>
          <edgelabel>role_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="12" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>numshards</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>ws_mode</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>terminating</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>request_timeout</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>socketengine</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>on_autocomplete</edgelabel>
          <edgelabel>on_automod_rule_create</edgelabel>
          <edgelabel>on_automod_rule_delete</edgelabel>
          <edgelabel>on_automod_rule_execute</edgelabel>
          <edgelabel>on_automod_rule_update</edgelabel>
          <edgelabel>on_button_click</edgelabel>
          <edgelabel>on_channel_create</edgelabel>
          <edgelabel>on_channel_delete</edgelabel>
          <edgelabel>on_channel_pins_update</edgelabel>
          <edgelabel>on_channel_update</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>guild_id</edgelabel>
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>communication_disabled_until</edgelabel>
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>dpp::interaction_metadata_type</label>
        <link refid="structdpp_1_1interaction__metadata__type"/>
        <childnode refid="7" relation="usage">
          <edgelabel>id</edgelabel>
          <edgelabel>interacted_message_id</edgelabel>
          <edgelabel>original_response_message_id</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>usr</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="6">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="7" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>dpp::message</label>
        <link refid="structdpp_1_1message"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>channel_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>webhook_id</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>author</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>member</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>content</edgelabel>
          <edgelabel>nonce</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>attachments</edgelabel>
          <edgelabel>components</edgelabel>
          <edgelabel>embeds</edgelabel>
          <edgelabel>file_data</edgelabel>
          <edgelabel>mention_channels</edgelabel>
          <edgelabel>mention_roles</edgelabel>
          <edgelabel>mentions</edgelabel>
          <edgelabel>reactions</edgelabel>
          <edgelabel>stickers</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>components_json</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>edited</edgelabel>
          <edgelabel>sent</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>message_reference</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>message_snapshots</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>interaction</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>interaction_metadata</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>allowed_mentions</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>mention_everyone</edgelabel>
          <edgelabel>pinned</edgelabel>
          <edgelabel>tts</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>attached_poll</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>dpp::message::allowed_ref</label>
        <link refid="structdpp_1_1message_1_1allowed__ref"/>
        <childnode refid="16" relation="usage">
          <edgelabel>parse_everyone</edgelabel>
          <edgelabel>parse_roles</edgelabel>
          <edgelabel>parse_users</edgelabel>
          <edgelabel>replied_user</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>users</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>dpp::message::message_interaction_struct</label>
        <link refid="structdpp_1_1message_1_1message__interaction__struct"/>
        <childnode refid="7" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>usr</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>dpp::message::message_ref</label>
        <link refid="structdpp_1_1message_1_1message__ref"/>
        <childnode refid="25" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>channel_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>message_id</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>fail_if_not_exists</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dpp::message_pin</label>
        <link refid="classdpp_1_1message__pin"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>pinned_at</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>pinned_message</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>dpp::snowflake</label>
        <link refid="classdpp_1_1snowflake"/>
        <childnode refid="8" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>global_name</edgelabel>
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>avatar</edgelabel>
          <edgelabel>avatar_decoration</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>primary_guild</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="8" relation="usage">
          <edgelabel>first</edgelabel>
          <edgelabel>second</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>dpp::utility::primaryguild</label>
        <link refid="structdpp_1_1utility_1_1primaryguild"/>
        <childnode refid="7" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>enabled</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>tag</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>badge</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>event_router_t&lt;</label>
      </node>
      <node id="21">
        <label>dpp::json_interface&lt; guild_member &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; guild_member &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>dpp::json_interface&lt; message &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; message &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; message_pin &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; message_pin &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>dpp::json_interface&lt; user &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; user &gt;</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>message_ref_type</label>
      </node>
      <node id="26">
        <label>message_snapshot&lt;</label>
      </node>
      <node id="38">
        <label>message_type</label>
      </node>
      <node id="23">
        <label>json</label>
      </node>
      <node id="35">
        <label>atomic_bool</label>
      </node>
      <node id="13">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="39">
        <label>optional&lt;</label>
      </node>
      <node id="12">
        <label>std::string</label>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>unique_ptr&lt;</label>
      </node>
      <node id="22">
        <label>vector&lt;</label>
      </node>
      <node id="4">
        <label>time_t</label>
      </node>
      <node id="18">
        <label>uint16_t</label>
      </node>
      <node id="17">
        <label>uint32_t</label>
      </node>
      <node id="8">
        <label>uint64_t</label>
      </node>
      <node id="19">
        <label>uint8_t</label>
      </node>
      <node id="34">
        <label>websocket_protocol_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/message.h" line="3004" column="1" bodyfile="include/dpp/message.h" bodystart="3004" bodyend="3071"/>
    <listofallmembers>
      <member refid="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" virt="non-virtual"><scope>dpp::message_pin</scope><name>build_json</name></member>
      <member refid="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" virt="non-virtual"><scope>dpp::message_pin</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1message__pin_1ace32a3f3ead04a5892e7c4337cec7430" prot="protected" virt="non-virtual"><scope>dpp::message_pin</scope><name>fill_from_json_impl</name></member>
      <member refid="classdpp_1_1message__pin_1a3956bf9cc0f7e6de6d4f91a73fc1e4c3" prot="protected" virt="non-virtual"><scope>dpp::message_pin</scope><name>json_interface&lt; message_pin &gt;</name></member>
      <member refid="classdpp_1_1message__pin_1a84d63eb40beb117287a3bbb252a04a4d" prot="public" virt="non-virtual"><scope>dpp::message_pin</scope><name>message_pin</name></member>
      <member refid="classdpp_1_1message__pin_1a68d4c1bdca0b15e6705ebf306784708f" prot="public" virt="non-virtual"><scope>dpp::message_pin</scope><name>message_pin</name></member>
      <member refid="classdpp_1_1message__pin_1aac509817221df4fec0d2788992cbf13a" prot="public" virt="non-virtual"><scope>dpp::message_pin</scope><name>message_pin</name></member>
      <member refid="classdpp_1_1message__pin_1a9c19b013b3be8dd15c379305924ee8f3" prot="public" virt="non-virtual"><scope>dpp::message_pin</scope><name>message_pin</name></member>
      <member refid="classdpp_1_1message__pin_1a7a9656a527ab2f545afe985be744ee9f" prot="public" virt="non-virtual"><scope>dpp::message_pin</scope><name>operator=</name></member>
      <member refid="classdpp_1_1message__pin_1a8c4c516e6c8578bd94a14a170e7de00b" prot="public" virt="non-virtual"><scope>dpp::message_pin</scope><name>operator=</name></member>
      <member refid="classdpp_1_1message__pin_1a858a4e915c5c2b741c555d1f7297ad36" prot="public" virt="non-virtual"><scope>dpp::message_pin</scope><name>pinned_at</name></member>
      <member refid="classdpp_1_1message__pin_1ab21d8d165be312ab0bca1299bc8146cc" prot="public" virt="non-virtual"><scope>dpp::message_pin</scope><name>pinned_message</name></member>
      <member refid="classdpp_1_1message__pin_1a79ff2b3bdcd2b3badb5de90135a0a75c" prot="protected" virt="virtual"><scope>dpp::message_pin</scope><name>to_json</name></member>
      <member refid="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" virt="non-virtual" ambiguityscope="json_interface&lt; message_pin &gt;::"><scope>dpp::message_pin</scope><name>to_json</name></member>
      <member refid="classdpp_1_1message__pin_1aee4be91915dce092d922a3448f06a5f2" prot="public" virt="non-virtual"><scope>dpp::message_pin</scope><name>~message_pin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
