<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1thread__create__t" kind="struct" language="C++" prot="public">
    <compoundname>dpp::thread_create_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1thread__create__t_1a096df9aa1bb92c18a69edcf2daee29db" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::thread_create_t::creating_guild</definition>
        <argsstring></argsstring>
        <name>creating_guild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="750" column="7" bodyfile="include/dpp/dispatcher.h" bodystart="750" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1thread__create__t_1ab68b2fb8155b0d859c73c896b5535750" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1channel" kindref="compound">channel</ref></type>
        <definition>channel dpp::thread_create_t::created</definition>
        <argsstring></argsstring>
        <name>created</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="751" column="9" bodyfile="include/dpp/dispatcher.h" bodystart="751" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="40" column="13" bodyfile="include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="43" column="22" bodyfile="include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1thread__create__t_1a23487c60d75274fdca7eb8beedd29a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::thread_create_t::thread_create_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>thread_create_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="749" column="1" bodyfile="src/dpp/dispatcher.cpp" bodystart="151" bodyend="151"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Thread Create. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
      <node id="1">
        <label>dpp::thread_create_t</label>
        <link refid="structdpp_1_1thread__create__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>SSL *</label>
      </node>
      <node id="12">
        <label>SSL_CTX *</label>
      </node>
      <node id="8">
        <label>bool</label>
      </node>
      <node id="26">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="18">
        <label>double</label>
      </node>
      <node id="25">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="26" relation="usage">
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>role_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>dpp::channel</label>
        <link refid="classdpp_1_1channel"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
          <edgelabel>message_count</edgelabel>
          <edgelabel>user_limit</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>guild_id</edgelabel>
          <edgelabel>last_message_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>parent_id</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>bitrate</edgelabel>
          <edgelabel>position</edgelabel>
          <edgelabel>rate_limit_per_user</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>topic</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>last_pin_timestamp</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>permission_overwrites</edgelabel>
          <edgelabel>recipients</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>metadata</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="3" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>numshards</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>ws_mode</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>reconnects</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>shard_id</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
          <edgelabel>last_heartbeat_ack</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>sessionid</edgelabel>
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>protocol</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="15" relation="usage">
          <edgelabel>application_command_create</edgelabel>
          <edgelabel>application_command_delete</edgelabel>
          <edgelabel>application_command_update</edgelabel>
          <edgelabel>autocomplete</edgelabel>
          <edgelabel>button_click</edgelabel>
          <edgelabel>channel_create</edgelabel>
          <edgelabel>channel_delete</edgelabel>
          <edgelabel>channel_pins_update</edgelabel>
          <edgelabel>channel_update</edgelabel>
          <edgelabel>guild_ban_add</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
          <edgelabel>shard_id</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>description</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>vanity_url_code</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>splash</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>premium_tier</edgelabel>
          <edgelabel>verification_level</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>channels</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="3" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>guild_id</edgelabel>
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="14" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="11" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="3" relation="usage">
          <edgelabel>buffer</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>port</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
          <edgelabel>custom_writeable_ready</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dpp::thread_create_t</label>
        <link refid="structdpp_1_1thread__create__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>creating_guild</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>created</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>dpp::thread_metadata</label>
        <link refid="structdpp_1_1thread__metadata"/>
        <childnode refid="8" relation="usage">
          <edgelabel>archived</edgelabel>
          <edgelabel>invitable</edgelabel>
          <edgelabel>locked</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>archive_timestamp</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>auto_archive_duration</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="14" relation="usage">
          <edgelabel>first</edgelabel>
          <edgelabel>second</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>int</label>
      </node>
      <node id="32">
        <label>region</label>
      </node>
      <node id="4">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="15">
        <label>function&lt;</label>
      </node>
      <node id="36">
        <label>map&lt;</label>
      </node>
      <node id="29">
        <label>std::mutex</label>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>native_handle_type</label>
      </node>
      <node id="30">
        <label>unordered_map&lt;</label>
      </node>
      <node id="33">
        <label>vector&lt;</label>
      </node>
      <node id="13">
        <label>time_t</label>
      </node>
      <node id="22">
        <label>uint16_t</label>
      </node>
      <node id="17">
        <label>uint32_t</label>
      </node>
      <node id="14">
        <label>uint64_t</label>
      </node>
      <node id="24">
        <label>uint8_t</label>
      </node>
      <node id="34">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>websocket_protocol_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/dispatcher.h" line="743" column="1" bodyfile="include/dpp/dispatcher.h" bodystart="743" bodyend="752"/>
    <listofallmembers>
      <member refid="structdpp_1_1thread__create__t_1ab68b2fb8155b0d859c73c896b5535750" prot="public" virt="non-virtual"><scope>dpp::thread_create_t</scope><name>created</name></member>
      <member refid="structdpp_1_1thread__create__t_1a096df9aa1bb92c18a69edcf2daee29db" prot="public" virt="non-virtual"><scope>dpp::thread_create_t</scope><name>creating_guild</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::thread_create_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::thread_create_t</scope><name>from</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::thread_create_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1thread__create__t_1a23487c60d75274fdca7eb8beedd29a70" prot="public" virt="non-virtual"><scope>dpp::thread_create_t</scope><name>thread_create_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
