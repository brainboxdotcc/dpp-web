<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1webhooks__update__t" kind="struct" prot="public">
    <compoundname>dpp::webhooks_update_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1webhooks__update__t_1ab4ff84fc65e90fe97fa0526d0976f7ae" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::webhooks_update_t::webhook_guild</definition>
        <argsstring></argsstring>
        <name>webhook_guild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="581" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1webhooks__update__t_1a39a25531b301ffc214ddd17a7b3475f3" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1channel" kindref="compound">channel</ref> *</type>
        <definition>channel* dpp::webhooks_update_t::webhook_channel</definition>
        <argsstring></argsstring>
        <name>webhook_channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="582" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="582" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1webhooks__update__t_1aa070b1866b55bc3e6d2a7a8b698e8c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::webhooks_update_t::webhooks_update_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>webhooks_update_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="580" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="124" bodyend="124"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Webhooks update. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="15798">
        <label>dpp::webhooks_update_t</label>
        <link refid="structdpp_1_1webhooks__update__t"/>
        <childnode refid="15799" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15799">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15879">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="15817">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="15816" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="15809" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="15818" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="15820" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="15823" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="15802" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="15826" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="15813">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="15814" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="15815" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="15843">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15858">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="15844">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="15891">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="15808" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="15892" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="15802" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="15894">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="15808" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15895" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15884">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="15871">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="15820">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="15821" relation="public-inheritance">
        </childnode>
        <childnode refid="15822" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="15823" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="15824" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="15802" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="15825" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="15829">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="15873">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="15845">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="15875">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="15902">
        <label>std::vector&lt; dpp::permission_overwrite &gt;</label>
        <childnode refid="15903" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15897">
        <label>region</label>
      </node>
      <node id="15885">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="15811">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="15899">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="15808" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="15824" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="15802" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="15804" relation="usage">
          <edgelabel>shard</edgelabel>
        </childnode>
      </node>
      <node id="15826">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="15827" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="15828" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="15829" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="15830" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="15831" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="15832" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="15833" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="15834" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="15835" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="15836" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="15837" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="15838" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="15839" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="15840" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="15841" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="15842" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="15843" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="15844" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="15845" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="15846" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="15847" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="15848" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="15849" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="15850" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="15851" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="15852" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="15853" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="15854" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="15855" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="15856" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="15857" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="15858" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="15859" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="15860" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="15861" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="15862" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="15863" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="15864" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="15865" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="15866" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="15867" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="15868" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="15869" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="15870" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="15871" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="15872" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="15873" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="15874" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="15875" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="15876" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="15877" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="15878" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="15879" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="15880" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="15881" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="15882" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="15883" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="15884" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="15885" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="15886" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="15887" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="15895">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="15809" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="15808" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="15824" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="15802" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="15896" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="15800">
        <label>dpp::webhooks_update_t</label>
        <link refid="structdpp_1_1webhooks__update__t"/>
        <childnode refid="15801" relation="public-inheritance">
        </childnode>
        <childnode refid="15893" relation="usage">
          <edgelabel>webhook_guild</edgelabel>
        </childnode>
        <childnode refid="15900" relation="usage">
          <edgelabel>webhook_channel</edgelabel>
        </childnode>
      </node>
      <node id="15833">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="15840">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="15882">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="15808">
        <label>uint64_t</label>
      </node>
      <node id="15877">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15874">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15860">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="15901">
        <label>dpp::thread_metadata</label>
        <link refid="structdpp_1_1thread__metadata"/>
        <childnode refid="15809" relation="usage">
          <edgelabel>archive_timestamp</edgelabel>
        </childnode>
        <childnode refid="15822" relation="usage">
          <edgelabel>auto_archive_duration</edgelabel>
        </childnode>
        <childnode refid="15812" relation="usage">
          <edgelabel>archived</edgelabel>
          <edgelabel>locked</edgelabel>
        </childnode>
      </node>
      <node id="15854">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="15842">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="15831">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15850">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="15867">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="15864">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15887">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="15822">
        <label>uint16_t</label>
      </node>
      <node id="15852">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="15809">
        <label>time_t</label>
      </node>
      <node id="15803">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="15886">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="15863">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="15892">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="15805" relation="public-inheritance">
        </childnode>
        <childnode refid="15808" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="15809" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="15817" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="15823" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="15802" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="15812" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="15889" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="15825">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="15808" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="15862">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="15851">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="15816">
        <label>double</label>
      </node>
      <node id="15806">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="15807" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="15808" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="15809" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="15810" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="15811" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="15812" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="15802" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="15813" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="15861">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15883">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="15823">
        <label>uint32_t</label>
      </node>
      <node id="15881">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="15801">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="15802" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="15804" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="15824">
        <label>uint8_t</label>
      </node>
      <node id="15866">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="15898">
        <label>std::map&lt; snowflake, dpp::voicestate &gt;</label>
        <childnode refid="15808" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15899" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15819">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="15805">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="15806" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15818">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="15819" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="15835">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="15847">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="15832">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="15855">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="15857">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="15890">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="15808" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15891" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15807">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="15849">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15804">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="15805" relation="public-inheritance">
        </childnode>
        <childnode refid="15816" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="15808" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="15809" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="15817" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="15888" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="15823" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="15812" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="15802" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="15889" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="15890" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="15856">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="15814">
        <label>SSL *</label>
      </node>
      <node id="15821">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="15808" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="15869">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="15900">
        <label>dpp::channel</label>
        <link refid="classdpp_1_1channel"/>
        <childnode refid="15821" relation="public-inheritance">
        </childnode>
        <childnode refid="15901" relation="usage">
          <edgelabel>metadata</edgelabel>
        </childnode>
        <childnode refid="15809" relation="usage">
          <edgelabel>last_pin_timestamp</edgelabel>
        </childnode>
        <childnode refid="15808" relation="usage">
          <edgelabel>parent_id</edgelabel>
          <edgelabel>last_message_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
        </childnode>
        <childnode refid="15822" relation="usage">
          <edgelabel>rate_limit_per_user</edgelabel>
          <edgelabel>position</edgelabel>
        </childnode>
        <childnode refid="15802" relation="usage">
          <edgelabel>topic</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="15824" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>user_limit</edgelabel>
          <edgelabel>message_count</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="15896" relation="usage">
          <edgelabel>recipients</edgelabel>
        </childnode>
        <childnode refid="15902" relation="usage">
          <edgelabel>permission_overwrites</edgelabel>
        </childnode>
      </node>
      <node id="15870">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="15878">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="15815">
        <label>SSL_CTX *</label>
      </node>
      <node id="15865">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="15888">
        <label>mutex</label>
      </node>
      <node id="15876">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15903">
        <label>dpp::permission_overwrite</label>
        <link refid="structdpp_1_1permission__overwrite"/>
        <childnode refid="15808" relation="usage">
          <edgelabel>allow</edgelabel>
          <edgelabel>deny</edgelabel>
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="15824" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="15834">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="15853">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="15859">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="15872">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="15812">
        <label>bool</label>
      </node>
      <node id="15810">
        <label>SOCKET</label>
      </node>
      <node id="15893">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="15821" relation="public-inheritance">
        </childnode>
        <childnode refid="15808" relation="usage">
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="15894" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="15897" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="15822" relation="usage">
          <edgelabel>shard_id</edgelabel>
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
        </childnode>
        <childnode refid="15823" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="15824" relation="usage">
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>verification_level</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>premium_tier</edgelabel>
        </childnode>
        <childnode refid="15802" relation="usage">
          <edgelabel>vanity_url_code</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="15898" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
        <childnode refid="15896" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="15825" relation="usage">
          <edgelabel>splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
        </childnode>
      </node>
      <node id="15848">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="15880">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="15838">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="15830">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15827">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="15846">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="15868">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="15828">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="15841">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="15837">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="15896">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="15808" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15889">
        <label>native_handle_type</label>
      </node>
      <node id="15839">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15802">
        <label>std::string</label>
        <childnode refid="15803" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15836">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="575" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="575" bodyend="583"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::webhooks_update_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::webhooks_update_t</scope><name>from</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::webhooks_update_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1webhooks__update__t_1a39a25531b301ffc214ddd17a7b3475f3" prot="public" virt="non-virtual"><scope>dpp::webhooks_update_t</scope><name>webhook_channel</name></member>
      <member refid="structdpp_1_1webhooks__update__t_1ab4ff84fc65e90fe97fa0526d0976f7ae" prot="public" virt="non-virtual"><scope>dpp::webhooks_update_t</scope><name>webhook_guild</name></member>
      <member refid="structdpp_1_1webhooks__update__t_1aa070b1866b55bc3e6d2a7a8b698e8c1b" prot="public" virt="non-virtual"><scope>dpp::webhooks_update_t</scope><name>webhooks_update_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
