<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1audit__entry" kind="struct" language="C++" prot="public">
    <compoundname>dpp::audit_entry</compoundname>
    <includes local="no">auditlog.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1audit__entry_1ae52ad0499e9492694af8bfc66de01255" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::audit_entry::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>id of the entry </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="175" column="10" bodyfile="include/dpp/auditlog.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__entry_1a0b6fcc890dfd0e55e68c39d2f88d268b" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::audit_entry::target_id</definition>
        <argsstring></argsstring>
        <name>target_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ID of the affected entity (webhook, user, role, etc.) (may be empty) <simplesect kind="note"><para>For dpp::audit_type::aut_appcommand_permission_update updates, it&apos;s the command ID or the app ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="180" column="10" bodyfile="include/dpp/auditlog.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__entry_1ab4c452b5018afcc42cd96f67b7ae75f9" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structdpp_1_1audit__change" kindref="compound">audit_change</ref> &gt;</type>
        <definition>std::vector&lt;audit_change&gt; dpp::audit_entry::changes</definition>
        <argsstring></argsstring>
        <name>changes</name>
        <briefdescription>
<para>Optional: changes made to the target_id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="181" column="12" bodyfile="include/dpp/auditlog.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__entry_1a4c44d24615548cc33303082104b24b05" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::audit_entry::user_id</definition>
        <argsstring></argsstring>
        <name>user_id</name>
        <briefdescription>
<para>the user or app that made the changes (may be empty) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="182" column="10" bodyfile="include/dpp/auditlog.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__entry_1a510a9fd92e9784491af63b7d8ac65344" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3d" kindref="member">audit_type</ref></type>
        <definition>audit_type dpp::audit_entry::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>type of action that occurred </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="183" column="11" bodyfile="include/dpp/auditlog.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__entry_1abb76c66e3a5d4fa79d1753221119ab24" prot="public" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="structdpp_1_1audit__extra" kindref="compound">audit_extra</ref> &gt;</type>
        <definition>std::optional&lt;audit_extra&gt; dpp::audit_entry::extra</definition>
        <argsstring></argsstring>
        <name>extra</name>
        <briefdescription>
<para>Optional: additional info for certain action types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="184" column="14" bodyfile="include/dpp/auditlog.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1audit__entry_1a9681924b6d2256345a7c5579a34f3f7b" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::audit_entry::reason</definition>
        <argsstring></argsstring>
        <name>reason</name>
        <briefdescription>
<para>Optional: the reason for the change (1-512 characters) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="185" column="12" bodyfile="include/dpp/auditlog.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An individual audit log entry. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>audit_type</label>
      </node>
      <node id="1">
        <label>dpp::audit_entry</label>
        <link refid="structdpp_1_1audit__entry"/>
        <childnode refid="2" relation="usage">
          <edgelabel>id</edgelabel>
          <edgelabel>target_id</edgelabel>
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>changes</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>extra</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>reason</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="5">
        <label>optional&lt;</label>
      </node>
      <node id="6">
        <label>std::string</label>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>vector&lt;</label>
      </node>
      <node id="2">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/auditlog.h" line="174" column="1" bodyfile="include/dpp/auditlog.h" bodystart="174" bodyend="186"/>
    <listofallmembers>
      <member refid="structdpp_1_1audit__entry_1ab4c452b5018afcc42cd96f67b7ae75f9" prot="public" virt="non-virtual"><scope>dpp::audit_entry</scope><name>changes</name></member>
      <member refid="structdpp_1_1audit__entry_1abb76c66e3a5d4fa79d1753221119ab24" prot="public" virt="non-virtual"><scope>dpp::audit_entry</scope><name>extra</name></member>
      <member refid="structdpp_1_1audit__entry_1ae52ad0499e9492694af8bfc66de01255" prot="public" virt="non-virtual"><scope>dpp::audit_entry</scope><name>id</name></member>
      <member refid="structdpp_1_1audit__entry_1a9681924b6d2256345a7c5579a34f3f7b" prot="public" virt="non-virtual"><scope>dpp::audit_entry</scope><name>reason</name></member>
      <member refid="structdpp_1_1audit__entry_1a0b6fcc890dfd0e55e68c39d2f88d268b" prot="public" virt="non-virtual"><scope>dpp::audit_entry</scope><name>target_id</name></member>
      <member refid="structdpp_1_1audit__entry_1a510a9fd92e9784491af63b7d8ac65344" prot="public" virt="non-virtual"><scope>dpp::audit_entry</scope><name>type</name></member>
      <member refid="structdpp_1_1audit__entry_1a4c44d24615548cc33303082104b24b05" prot="public" virt="non-virtual"><scope>dpp::audit_entry</scope><name>user_id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
