<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1message__delete__t" kind="struct" prot="public">
    <compoundname>dpp::message_delete_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1message__delete__t_1a9bbdf2268285285714ef5635d1ef4c04" prot="public" static="no" mutable="no">
        <type><ref refid="structdpp_1_1message" kindref="compound">message</ref> *</type>
        <definition>message* dpp::message_delete_t::deleted</definition>
        <argsstring></argsstring>
        <name>deleted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="321" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1message__delete__t_1a14892cbdd39d84894747b4a4e225bb48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::message_delete_t::message_delete_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>message_delete_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="320" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="105" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Message Deleted. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="12733">
        <label>dpp::message_delete_t</label>
        <link refid="structdpp_1_1message__delete__t"/>
        <childnode refid="12734" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12734">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12814">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="12752">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="12751" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="12744" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="12753" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="12755" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="12758" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="12761" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="12748">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="12749" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="12750" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="12778">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12793">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="12779">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="12826">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="12743" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12827" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="12819">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="12806">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="12830">
        <label>dpp::attachment</label>
        <link refid="structdpp_1_1attachment"/>
        <childnode refid="12743" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="12758" relation="usage">
          <edgelabel>width</edgelabel>
          <edgelabel>size</edgelabel>
          <edgelabel>height</edgelabel>
        </childnode>
        <childnode refid="12747" relation="usage">
          <edgelabel>ephemeral</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>content_type</edgelabel>
          <edgelabel>url</edgelabel>
          <edgelabel>proxy_url</edgelabel>
          <edgelabel>filename</edgelabel>
        </childnode>
      </node>
      <node id="12755">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="12756" relation="public-inheritance">
        </childnode>
        <childnode refid="12757" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="12758" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12759" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="12760" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="12764">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="12808">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="12780">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="12810">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="12833">
        <label>std::vector&lt; dpp::dpp::component &gt;</label>
        <childnode refid="12834" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12820">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="12746">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="12761">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="12762" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="12763" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="12764" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="12765" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="12766" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="12767" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="12768" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="12769" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="12770" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="12771" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="12772" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="12773" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="12774" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="12775" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="12776" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="12777" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="12778" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="12779" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="12780" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="12781" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="12782" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="12783" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="12784" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="12785" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="12786" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="12787" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="12788" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="12789" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="12790" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="12791" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="12792" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="12793" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="12794" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="12795" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="12796" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="12797" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="12798" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="12799" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="12800" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="12801" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="12802" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="12803" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="12804" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="12805" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="12806" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="12807" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="12808" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="12809" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="12810" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="12811" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="12812" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="12813" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="12814" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="12815" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="12816" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="12817" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="12818" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="12819" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="12820" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="12821" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="12822" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="12834">
        <label>component</label>
      </node>
      <node id="12831">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="12744" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="12743" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="12759" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="12832" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="12768">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="12775">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="12839">
        <label>dpp::message::message_ref</label>
        <link refid="structdpp_1_1message_1_1message__ref"/>
        <childnode refid="12743" relation="usage">
          <edgelabel>guild_id</edgelabel>
          <edgelabel>message_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12747" relation="usage">
          <edgelabel>fail_if_not_exists</edgelabel>
        </childnode>
      </node>
      <node id="12817">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="12840">
        <label>std::vector&lt; dpp::embed &gt;</label>
        <childnode refid="12841" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12743">
        <label>uint64_t</label>
      </node>
      <node id="12843">
        <label>std::vector&lt; dpp::embed_field &gt;</label>
        <childnode refid="12844" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12812">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12849">
        <label>dpp::sticker</label>
        <link refid="structdpp_1_1sticker"/>
        <childnode refid="12850" relation="usage">
          <edgelabel>format_type</edgelabel>
        </childnode>
        <childnode refid="12743" relation="usage">
          <edgelabel>pack_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="12755" relation="usage">
          <edgelabel>sticker_user</edgelabel>
        </childnode>
        <childnode refid="12759" relation="usage">
          <edgelabel>sort_value</edgelabel>
        </childnode>
        <childnode refid="12747" relation="usage">
          <edgelabel>available</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>filecontent</edgelabel>
          <edgelabel>asset</edgelabel>
          <edgelabel>tags</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>filename</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="12851" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="12809">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12795">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="12848">
        <label>std::vector&lt; dpp::sticker &gt;</label>
        <childnode refid="12849" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12789">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="12777">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="12766">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12785">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="12844">
        <label>dpp::embed_field</label>
        <link refid="structdpp_1_1embed__field"/>
        <childnode refid="12747" relation="usage">
          <edgelabel>is_inline</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>value</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="12802">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="12735">
        <label>dpp::message_delete_t</label>
        <link refid="structdpp_1_1message__delete__t"/>
        <childnode refid="12736" relation="public-inheritance">
        </childnode>
        <childnode refid="12828" relation="usage">
          <edgelabel>deleted</edgelabel>
        </childnode>
      </node>
      <node id="12799">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12822">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="12757">
        <label>uint16_t</label>
      </node>
      <node id="12787">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="12744">
        <label>time_t</label>
      </node>
      <node id="12738">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="12821">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="12798">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="12827">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="12740" relation="public-inheritance">
        </childnode>
        <childnode refid="12743" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12744" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="12752" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="12758" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="12747" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="12824" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="12760">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="12743" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="12797">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="12786">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="12845">
        <label>optional&lt; dpp::embed_provider &gt;</label>
      </node>
      <node id="12751">
        <label>double</label>
      </node>
      <node id="12741">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="12742" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="12743" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="12744" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="12745" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="12746" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="12747" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="12748" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="12796">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12818">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="12758">
        <label>uint32_t</label>
      </node>
      <node id="12850">
        <label>sticker_format</label>
      </node>
      <node id="12816">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="12736">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="12737" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="12739" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="12759">
        <label>uint8_t</label>
      </node>
      <node id="12801">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="12754">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="12740">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="12741" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12753">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="12754" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="12770">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="12782">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="12767">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="12841">
        <label>dpp::embed</label>
        <link refid="structdpp_1_1embed"/>
        <childnode refid="12842" relation="usage">
          <edgelabel>video</edgelabel>
          <edgelabel>thumbnail</edgelabel>
          <edgelabel>image</edgelabel>
        </childnode>
        <childnode refid="12744" relation="usage">
          <edgelabel>timestamp</edgelabel>
        </childnode>
        <childnode refid="12843" relation="usage">
          <edgelabel>fields</edgelabel>
        </childnode>
        <childnode refid="12758" relation="usage">
          <edgelabel>color</edgelabel>
        </childnode>
        <childnode refid="12845" relation="usage">
          <edgelabel>provider</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>title</edgelabel>
          <edgelabel>url</edgelabel>
          <edgelabel>type</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="12846" relation="usage">
          <edgelabel>footer</edgelabel>
        </childnode>
        <childnode refid="12847" relation="usage">
          <edgelabel>author</edgelabel>
        </childnode>
      </node>
      <node id="12790">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="12792">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="12847">
        <label>optional&lt; dpp::embed_author &gt;</label>
      </node>
      <node id="12825">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="12743" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="12826" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12742">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="12784">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12739">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="12740" relation="public-inheritance">
        </childnode>
        <childnode refid="12751" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="12743" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="12744" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="12752" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="12823" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="12758" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="12747" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="12824" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="12825" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="12836">
        <label>dpp::message::allowed_ref</label>
        <link refid="structdpp_1_1message_1_1allowed__ref"/>
        <childnode refid="12747" relation="usage">
          <edgelabel>replied_user</edgelabel>
          <edgelabel>parse_roles</edgelabel>
          <edgelabel>parse_everyone</edgelabel>
          <edgelabel>parse_users</edgelabel>
        </childnode>
        <childnode refid="12832" relation="usage">
          <edgelabel>users</edgelabel>
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="12791">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="12851">
        <label>sticker_type</label>
      </node>
      <node id="12749">
        <label>SSL *</label>
      </node>
      <node id="12842">
        <label>optional&lt; dpp::embed_image &gt;</label>
      </node>
      <node id="12756">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="12743" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="12804">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="12846">
        <label>optional&lt; dpp::embed_footer &gt;</label>
      </node>
      <node id="12805">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="12838">
        <label>dpp::reaction</label>
        <link refid="structdpp_1_1reaction"/>
        <childnode refid="12743" relation="usage">
          <edgelabel>emoji_id</edgelabel>
        </childnode>
        <childnode refid="12758" relation="usage">
          <edgelabel>count</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>emoji_name</edgelabel>
        </childnode>
        <childnode refid="12747" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
      </node>
      <node id="12813">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="12750">
        <label>SSL_CTX *</label>
      </node>
      <node id="12800">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="12829">
        <label>std::vector&lt; dpp::attachment &gt;</label>
        <childnode refid="12830" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12823">
        <label>mutex</label>
      </node>
      <node id="12811">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12769">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="12788">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="12794">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="12828">
        <label>dpp::message</label>
        <link refid="structdpp_1_1message"/>
        <childnode refid="12829" relation="usage">
          <edgelabel>attachments</edgelabel>
        </childnode>
        <childnode refid="12744" relation="usage">
          <edgelabel>edited</edgelabel>
          <edgelabel>sent</edgelabel>
        </childnode>
        <childnode refid="12743" relation="usage">
          <edgelabel>webhook_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12831" relation="usage">
          <edgelabel>member</edgelabel>
        </childnode>
        <childnode refid="12833" relation="usage">
          <edgelabel>components</edgelabel>
        </childnode>
        <childnode refid="12835" relation="usage">
          <edgelabel>interaction</edgelabel>
        </childnode>
        <childnode refid="12755" relation="usage">
          <edgelabel>self_author</edgelabel>
          <edgelabel>author</edgelabel>
        </childnode>
        <childnode refid="12759" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="12747" relation="usage">
          <edgelabel>pinned</edgelabel>
          <edgelabel>mention_everyone</edgelabel>
          <edgelabel>tts</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>filecontent</edgelabel>
          <edgelabel>nonce</edgelabel>
          <edgelabel>content</edgelabel>
          <edgelabel>filename</edgelabel>
        </childnode>
        <childnode refid="12836" relation="usage">
          <edgelabel>allowed_mentions</edgelabel>
        </childnode>
        <childnode refid="12832" relation="usage">
          <edgelabel>mentions</edgelabel>
          <edgelabel>mention_channels</edgelabel>
          <edgelabel>mention_roles</edgelabel>
        </childnode>
        <childnode refid="12837" relation="usage">
          <edgelabel>reactions</edgelabel>
        </childnode>
        <childnode refid="12839" relation="usage">
          <edgelabel>message_reference</edgelabel>
        </childnode>
        <childnode refid="12840" relation="usage">
          <edgelabel>embeds</edgelabel>
        </childnode>
        <childnode refid="12848" relation="usage">
          <edgelabel>stickers</edgelabel>
        </childnode>
      </node>
      <node id="12807">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="12747">
        <label>bool</label>
      </node>
      <node id="12837">
        <label>std::vector&lt; dpp::reaction &gt;</label>
        <childnode refid="12838" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12745">
        <label>SOCKET</label>
      </node>
      <node id="12783">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="12815">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="12773">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="12835">
        <label>dpp::message::message_interaction_struct</label>
        <link refid="structdpp_1_1message_1_1message__interaction__struct"/>
        <childnode refid="12743" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="12755" relation="usage">
          <edgelabel>usr</edgelabel>
        </childnode>
        <childnode refid="12737" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="12759" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="12765">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12762">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="12781">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="12803">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="12763">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="12776">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="12772">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="12832">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="12743" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12824">
        <label>native_handle_type</label>
      </node>
      <node id="12774">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12737">
        <label>std::string</label>
        <childnode refid="12738" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12771">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="315" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="315" bodyend="322"/>
    <listofallmembers>
      <member refid="structdpp_1_1message__delete__t_1a9bbdf2268285285714ef5635d1ef4c04" prot="public" virt="non-virtual"><scope>dpp::message_delete_t</scope><name>deleted</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::message_delete_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::message_delete_t</scope><name>from</name></member>
      <member refid="structdpp_1_1message__delete__t_1a14892cbdd39d84894747b4a4e225bb48" prot="public" virt="non-virtual"><scope>dpp::message_delete_t</scope><name>message_delete_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::message_delete_t</scope><name>raw_event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
