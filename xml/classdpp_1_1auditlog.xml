<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="classdpp_1_1auditlog" kind="class" prot="public">
    <compoundname>dpp::auditlog</compoundname>
    <includes local="no">auditlog.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1auditlog_1a36c8f45302e0d22cda77279ab2708daa" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structdpp_1_1audit__entry" kindref="compound">audit_entry</ref> &gt;</type>
        <definition>std::vector&lt;audit_entry&gt; dpp::auditlog::entries</definition>
        <argsstring></argsstring>
        <name>entries</name>
        <briefdescription>
<para>Audit log entries. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/auditlog.h" line="150" column="1" bodyfile="/home/brain/D++/include/dpp/auditlog.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1auditlog_1aa1aeb75a27474dc9323c3e5c012199d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::auditlog::auditlog</definition>
        <argsstring>()</argsstring>
        <name>auditlog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/auditlog.h" line="153" column="1" bodyfile="/home/brain/D++/src/dpp/auditlog.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1auditlog_1adcd0ccdef0c8027acab54e19ffd971c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::auditlog::~auditlog</definition>
        <argsstring>()</argsstring>
        <name>~auditlog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/auditlog.h" line="156" column="1" bodyfile="/home/brain/D++/src/dpp/auditlog.cpp" bodystart="34" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1auditlog_1aef1a68fb697621c4292f801725e4475f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1auditlog" kindref="compound">auditlog</ref> &amp;</type>
        <definition>auditlog &amp; dpp::auditlog::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read class values from json object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>A json object to read from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to self </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/auditlog.h" line="162" column="1" bodyfile="/home/brain/D++/src/dpp/auditlog.cpp" bodystart="37" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The auditlog class represents the audit log entry of a guild. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="8379">
        <label>dpp::audit_entry</label>
        <link refid="structdpp_1_1audit__entry"/>
        <childnode refid="8380" relation="usage">
          <edgelabel>target_id</edgelabel>
          <edgelabel>user_id</edgelabel>
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="8381" relation="usage">
          <edgelabel>event</edgelabel>
        </childnode>
        <childnode refid="8382" relation="usage">
          <edgelabel>reason</edgelabel>
        </childnode>
        <childnode refid="8384" relation="usage">
          <edgelabel>options</edgelabel>
        </childnode>
        <childnode refid="8385" relation="usage">
          <edgelabel>changes</edgelabel>
        </childnode>
      </node>
      <node id="8386">
        <label>dpp::audit_change</label>
        <link refid="structdpp_1_1audit__change"/>
        <childnode refid="8382" relation="usage">
          <edgelabel>new_value</edgelabel>
          <edgelabel>key</edgelabel>
          <edgelabel>old_value</edgelabel>
        </childnode>
      </node>
      <node id="8378">
        <label>std::vector&lt; dpp::audit_entry &gt;</label>
        <childnode refid="8379" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="8377">
        <label>dpp::auditlog</label>
        <link refid="classdpp_1_1auditlog"/>
        <childnode refid="8378" relation="usage">
          <edgelabel>entries</edgelabel>
        </childnode>
      </node>
      <node id="8380">
        <label>uint64_t</label>
      </node>
      <node id="8384">
        <label>optional&lt; dpp::audit_extra &gt;</label>
      </node>
      <node id="8381">
        <label>audit_type</label>
      </node>
      <node id="8383">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="8385">
        <label>std::vector&lt; dpp::audit_change &gt;</label>
        <childnode refid="8386" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="8382">
        <label>std::string</label>
        <childnode refid="8383" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/auditlog.h" line="148" column="1" bodyfile="/home/brain/D++/include/dpp/auditlog.h" bodystart="148" bodyend="163"/>
    <listofallmembers>
      <member refid="classdpp_1_1auditlog_1aa1aeb75a27474dc9323c3e5c012199d9" prot="public" virt="non-virtual"><scope>dpp::auditlog</scope><name>auditlog</name></member>
      <member refid="classdpp_1_1auditlog_1a36c8f45302e0d22cda77279ab2708daa" prot="public" virt="non-virtual"><scope>dpp::auditlog</scope><name>entries</name></member>
      <member refid="classdpp_1_1auditlog_1aef1a68fb697621c4292f801725e4475f" prot="public" virt="non-virtual"><scope>dpp::auditlog</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1auditlog_1adcd0ccdef0c8027acab54e19ffd971c4" prot="public" virt="non-virtual"><scope>dpp::auditlog</scope><name>~auditlog</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
