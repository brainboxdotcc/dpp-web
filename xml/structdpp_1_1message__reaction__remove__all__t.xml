<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1message__reaction__remove__all__t" kind="struct" prot="public">
    <compoundname>dpp::message_reaction_remove_all_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1message__reaction__remove__all__t_1a8e712b68481e54913577fd19e850c357" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::message_reaction_remove_all_t::reacting_guild</definition>
        <argsstring></argsstring>
        <name>reacting_guild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="533" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1message__reaction__remove__all__t_1a4ea348517f397f86e94bbf6449a7f1aa" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1channel" kindref="compound">channel</ref> *</type>
        <definition>channel* dpp::message_reaction_remove_all_t::reacting_channel</definition>
        <argsstring></argsstring>
        <name>reacting_channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="534" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1message__reaction__remove__all__t_1a6d9a17304908b3e47b9ee81d7e2554e8" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::message_reaction_remove_all_t::message_id</definition>
        <argsstring></argsstring>
        <name>message_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="535" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1message__reaction__remove__all__t_1af2267fb84fd20e98926e3c792da6f84a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::message_reaction_remove_all_t::message_reaction_remove_all_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>message_reaction_remove_all_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="532" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="120" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Message remove all reactions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="12982">
        <label>dpp::message_reaction_remove_all_t</label>
        <link refid="structdpp_1_1message__reaction__remove__all__t"/>
        <childnode refid="12983" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12983">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13063">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="13001">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="13000" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="12993" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="13002" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="13004" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="13007" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="12986" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="13010" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="12997">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="12998" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="12999" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="13027">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13042">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="13028">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="13075">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="12992" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="13076" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="12986" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="13078">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="12992" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="13079" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13068">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="13055">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="13004">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="13005" relation="public-inheritance">
        </childnode>
        <childnode refid="13006" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="13007" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="13008" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="12986" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="13009" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="13013">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="13057">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="13029">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="13059">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="13086">
        <label>std::vector&lt; dpp::permission_overwrite &gt;</label>
        <childnode refid="13087" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13081">
        <label>region</label>
      </node>
      <node id="13069">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="12995">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="13083">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="12992" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="13008" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12986" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="12988" relation="usage">
          <edgelabel>shard</edgelabel>
        </childnode>
      </node>
      <node id="13010">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="13011" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="13012" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="13013" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="13014" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="13015" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="13016" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="13017" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="13018" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="13019" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="13020" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="13021" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="13022" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="13023" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="13024" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="13025" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="13026" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="13027" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="13028" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="13029" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="13030" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="13031" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="13032" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="13033" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="13034" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="13035" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="13036" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="13037" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="13038" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="13039" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="13040" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="13041" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="13042" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="13043" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="13044" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="13045" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="13046" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="13047" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="13048" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="13049" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="13050" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="13051" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="13052" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="13053" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="13054" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="13055" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="13056" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="13057" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="13058" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="13059" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="13060" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="13061" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="13062" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="13063" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="13064" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="13065" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="13066" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="13067" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="13068" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="13069" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="13070" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="13071" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="13079">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="12993" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="12992" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="13008" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12986" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="13080" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="13017">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="13024">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="13066">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="12992">
        <label>uint64_t</label>
      </node>
      <node id="13061">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13058">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13044">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="13085">
        <label>dpp::thread_metadata</label>
        <link refid="structdpp_1_1thread__metadata"/>
        <childnode refid="12993" relation="usage">
          <edgelabel>archive_timestamp</edgelabel>
        </childnode>
        <childnode refid="13006" relation="usage">
          <edgelabel>auto_archive_duration</edgelabel>
        </childnode>
        <childnode refid="12996" relation="usage">
          <edgelabel>archived</edgelabel>
          <edgelabel>locked</edgelabel>
        </childnode>
      </node>
      <node id="13038">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="13026">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="13015">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13034">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="13051">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="13048">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13071">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="13006">
        <label>uint16_t</label>
      </node>
      <node id="13036">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="12993">
        <label>time_t</label>
      </node>
      <node id="12987">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="13070">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="13047">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="13076">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="12989" relation="public-inheritance">
        </childnode>
        <childnode refid="12992" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12993" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="13001" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="13007" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="12986" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="12996" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="13073" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="12984">
        <label>dpp::message_reaction_remove_all_t</label>
        <link refid="structdpp_1_1message__reaction__remove__all__t"/>
        <childnode refid="12985" relation="public-inheritance">
        </childnode>
        <childnode refid="13077" relation="usage">
          <edgelabel>reacting_guild</edgelabel>
        </childnode>
        <childnode refid="12992" relation="usage">
          <edgelabel>message_id</edgelabel>
        </childnode>
        <childnode refid="13084" relation="usage">
          <edgelabel>reacting_channel</edgelabel>
        </childnode>
      </node>
      <node id="13009">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="12992" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="13046">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="13035">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="13000">
        <label>double</label>
      </node>
      <node id="12990">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="12991" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="12992" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="12993" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="12994" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="12995" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="12996" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="12986" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="12997" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="13045">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13067">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="13007">
        <label>uint32_t</label>
      </node>
      <node id="13065">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="12985">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="12986" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="12988" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="13008">
        <label>uint8_t</label>
      </node>
      <node id="13050">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="13082">
        <label>std::map&lt; snowflake, dpp::voicestate &gt;</label>
        <childnode refid="12992" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="13083" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13003">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="12989">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="12990" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13002">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="13003" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="13019">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="13031">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="13016">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="13039">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="13041">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="13074">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="12992" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="13075" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12991">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="13033">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12988">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="12989" relation="public-inheritance">
        </childnode>
        <childnode refid="13000" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="12992" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="12993" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="13001" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="13072" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="13007" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="12996" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="12986" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="13073" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="13074" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="13040">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="12998">
        <label>SSL *</label>
      </node>
      <node id="13005">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="12992" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="13053">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="13084">
        <label>dpp::channel</label>
        <link refid="classdpp_1_1channel"/>
        <childnode refid="13005" relation="public-inheritance">
        </childnode>
        <childnode refid="13085" relation="usage">
          <edgelabel>metadata</edgelabel>
        </childnode>
        <childnode refid="12993" relation="usage">
          <edgelabel>last_pin_timestamp</edgelabel>
        </childnode>
        <childnode refid="12992" relation="usage">
          <edgelabel>parent_id</edgelabel>
          <edgelabel>last_message_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
        </childnode>
        <childnode refid="13006" relation="usage">
          <edgelabel>rate_limit_per_user</edgelabel>
          <edgelabel>position</edgelabel>
        </childnode>
        <childnode refid="12986" relation="usage">
          <edgelabel>topic</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="13008" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>user_limit</edgelabel>
          <edgelabel>message_count</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="13080" relation="usage">
          <edgelabel>recipients</edgelabel>
        </childnode>
        <childnode refid="13086" relation="usage">
          <edgelabel>permission_overwrites</edgelabel>
        </childnode>
      </node>
      <node id="13054">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="13062">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="12999">
        <label>SSL_CTX *</label>
      </node>
      <node id="13049">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="13072">
        <label>mutex</label>
      </node>
      <node id="13060">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13087">
        <label>dpp::permission_overwrite</label>
        <link refid="structdpp_1_1permission__overwrite"/>
        <childnode refid="12992" relation="usage">
          <edgelabel>allow</edgelabel>
          <edgelabel>deny</edgelabel>
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="13008" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="13018">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="13037">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="13043">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="13056">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="12996">
        <label>bool</label>
      </node>
      <node id="12994">
        <label>SOCKET</label>
      </node>
      <node id="13077">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="13005" relation="public-inheritance">
        </childnode>
        <childnode refid="12992" relation="usage">
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="13078" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="13081" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="13006" relation="usage">
          <edgelabel>shard_id</edgelabel>
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
        </childnode>
        <childnode refid="13007" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="13008" relation="usage">
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>verification_level</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>premium_tier</edgelabel>
        </childnode>
        <childnode refid="12986" relation="usage">
          <edgelabel>vanity_url_code</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="13082" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
        <childnode refid="13080" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="13009" relation="usage">
          <edgelabel>splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
        </childnode>
      </node>
      <node id="13032">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="13064">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="13022">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="13014">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13011">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="13030">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="13052">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="13012">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="13025">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="13021">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="13080">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="12992" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13073">
        <label>native_handle_type</label>
      </node>
      <node id="13023">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12986">
        <label>std::string</label>
        <childnode refid="12987" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13020">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="527" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="527" bodyend="536"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::message_reaction_remove_all_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::message_reaction_remove_all_t</scope><name>from</name></member>
      <member refid="structdpp_1_1message__reaction__remove__all__t_1a6d9a17304908b3e47b9ee81d7e2554e8" prot="public" virt="non-virtual"><scope>dpp::message_reaction_remove_all_t</scope><name>message_id</name></member>
      <member refid="structdpp_1_1message__reaction__remove__all__t_1af2267fb84fd20e98926e3c792da6f84a" prot="public" virt="non-virtual"><scope>dpp::message_reaction_remove_all_t</scope><name>message_reaction_remove_all_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::message_reaction_remove_all_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1message__reaction__remove__all__t_1a4ea348517f397f86e94bbf6449a7f1aa" prot="public" virt="non-virtual"><scope>dpp::message_reaction_remove_all_t</scope><name>reacting_channel</name></member>
      <member refid="structdpp_1_1message__reaction__remove__all__t_1a8e712b68481e54913577fd19e850c357" prot="public" virt="non-virtual"><scope>dpp::message_reaction_remove_all_t</scope><name>reacting_guild</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
