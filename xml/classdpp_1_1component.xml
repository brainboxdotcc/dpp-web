<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1component" kind="class" language="C++" prot="public">
    <compoundname>dpp::component</compoundname>
    <includes local="no">message.h</includes>
    <innerclass refid="structdpp_1_1component_1_1inner__emoji" prot="public">dpp::component::inner_emoji</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1component_1afdb70ec9968493ed54bab29135f8b8c6" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1afce43206033521b990e3a72bb87481b7" kindref="member">component_type</ref></type>
        <definition>component_type dpp::component::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Component type, either a button or action row </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="205" column="16" bodyfile="include/dpp/message.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1a51efd287b483b485f7019fb8263465ed" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classdpp_1_1component" kindref="compound">component</ref> &gt;</type>
        <definition>std::vector&lt;component&gt; dpp::component::components</definition>
        <argsstring></argsstring>
        <name>components</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sub commponents, buttons on an action row </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="209" column="13" bodyfile="include/dpp/message.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1a177a7e35e4b310e2028464787396b1b4" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::component::label</definition>
        <argsstring></argsstring>
        <name>label</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Component label (for buttons, text inputs). Maximum of 80 characters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="214" column="13" bodyfile="include/dpp/message.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1a114f858c5c2bcdc1067cb26a14e578af" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5" kindref="member">component_style</ref></type>
        <definition>component_style dpp::component::style</definition>
        <argsstring></argsstring>
        <name>style</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Component style (for buttons) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="218" column="17" bodyfile="include/dpp/message.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1a69a2c73574bfb36961fee1df8f6ff771" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a284d405e6b10bc80ec459ff2505edbb3" kindref="member">text_style_type</ref></type>
        <definition>text_style_type dpp::component::text_style</definition>
        <argsstring></argsstring>
        <name>text_style</name>
        <briefdescription>
<para>Text style (for text inputs) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="223" column="17" bodyfile="include/dpp/message.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1a9d5ae2ba0812d8c8e7345b3271d75e71" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::component::custom_id</definition>
        <argsstring></argsstring>
        <name>custom_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Component id (for buttons, menus, text inputs). Maximum of 100 characters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="228" column="13" bodyfile="include/dpp/message.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1a79ad72fb0e31440e8f644e79a5870573" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::component::url</definition>
        <argsstring></argsstring>
        <name>url</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>URL for link types (<ref refid="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5a96d13813649e792fc6d88d29b70202d6" kindref="member">dpp::cos_link</ref>). Maximum of 512 characters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="233" column="13" bodyfile="include/dpp/message.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1a4fe9d95b2fd61a38269c3368db4c17ce" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::component::placeholder</definition>
        <argsstring></argsstring>
        <name>placeholder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Placeholder text for select menus and text inputs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="237" column="13" bodyfile="include/dpp/message.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1a2278f6585edfa07f2b7711aaf31cf5a3" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t dpp::component::min_values</definition>
        <argsstring></argsstring>
        <name>min_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum number of selectable values for a select menu. -1 to not set this </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="242" column="9" bodyfile="include/dpp/message.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1a35895913793b44ca33d039e4042afc25" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t dpp::component::max_values</definition>
        <argsstring></argsstring>
        <name>max_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of selectable values for a select menu. -1 to not set this. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="247" column="9" bodyfile="include/dpp/message.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1a35e8a8aabfd66a0f23ece038591e4747" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t dpp::component::min_length</definition>
        <argsstring></argsstring>
        <name>min_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum length for text input. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="251" column="9" bodyfile="include/dpp/message.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1aa0a71bbf2f4cac7d87a53ad1ec89da37" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t dpp::component::max_length</definition>
        <argsstring></argsstring>
        <name>max_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum length for text input </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="255" column="9" bodyfile="include/dpp/message.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1ad4f47e82e57e28a1aac48027e43b2fd9" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref> &gt;</type>
        <definition>std::vector&lt;select_option&gt; dpp::component::options</definition>
        <argsstring></argsstring>
        <name>options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select options for select menus </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="259" column="13" bodyfile="include/dpp/message.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1ad364b789494d7888666173079bdb48ad" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dpp::component::disabled</definition>
        <argsstring></argsstring>
        <name>disabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disabled flag (for buttons) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="263" column="6" bodyfile="include/dpp/message.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1aea6ebd38924644607081d88d0a32213c" prot="public" static="no" mutable="no">
        <type>std::variant&lt; std::monostate, std::string, int64_t, double &gt;</type>
        <definition>std::variant&lt;std::monostate, std::string, int64_t, double&gt; dpp::component::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current value (only filled or valid when populated from an on_form_submit event) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="267" column="14" bodyfile="include/dpp/message.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1component_1a259175c6c6da17af6d00765088fb73f6" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structdpp_1_1component_1_1inner__emoji" kindref="compound">dpp::component::inner_emoji</ref></type>
        <definition>struct dpp::component::inner_emoji dpp::component::emoji</definition>
        <argsstring></argsstring>
        <name>emoji</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="293" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1component_1a69b9e60742f6a1f1622b264cd7712660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::component::component</definition>
        <argsstring>()</argsstring>
        <name>component</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="297" column="1" bodyfile="src/dpp/message.cpp" bodystart="37" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1a7e04116e12fe1944c7c74d0760d6f1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::component::~component</definition>
        <argsstring>()=default</argsstring>
        <name>~component</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1a281e39d6b8c65b1fd301d195a835e703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::set_type</definition>
        <argsstring>(component_type ct)</argsstring>
        <name>set_type</name>
        <param>
          <type><ref refid="namespacedpp_1afce43206033521b990e3a72bb87481b7" kindref="member">component_type</ref></type>
          <declname>ct</declname>
        </param>
        <briefdescription>
<para>Set the type of the component. Button components (type <ref refid="namespacedpp_1afce43206033521b990e3a72bb87481b7a98228836af5d0c180cfc05eb1f0bfde9" kindref="member">dpp::cot_button</ref>) should always be contained within an action row (type <ref refid="namespacedpp_1afce43206033521b990e3a72bb87481b7afd32ce8be4a99a9d84fb4815370a0bf8" kindref="member">dpp::cot_action_row</ref>). As described below, many of the other methods automatically set this to the correct type so usually you should not need to manually call <ref refid="classdpp_1_1component_1a281e39d6b8c65b1fd301d195a835e703" kindref="member">component::set_type()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ct</parametername>
</parameternamelist>
<parameterdescription>
<para>The component type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="314" column="11" bodyfile="src/dpp/message.cpp" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1a4d2cd2b2c6169c31b4b3e41ce8698afe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::set_text_style</definition>
        <argsstring>(text_style_type ts)</argsstring>
        <name>set_text_style</name>
        <param>
          <type><ref refid="namespacedpp_1a284d405e6b10bc80ec459ff2505edbb3" kindref="member">text_style_type</ref></type>
          <declname>ts</declname>
        </param>
        <briefdescription>
<para>Set the text style of a text component. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Sets type to <computeroutput>cot_text</computeroutput></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ts</parametername>
</parameternamelist>
<parameterdescription>
<para>Text style type to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="323" column="11" bodyfile="src/dpp/message.cpp" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1a23955055e9d77383fca2a5738ae3a30f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::set_label</definition>
        <argsstring>(const std::string &amp;label)</argsstring>
        <name>set_label</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>Set the label of the component, e.g. button text. For action rows, this field is ignored. Setting the label will auto-set the type to <ref refid="namespacedpp_1afce43206033521b990e3a72bb87481b7a98228836af5d0c180cfc05eb1f0bfde9" kindref="member">dpp::cot_button</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>Label text to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="333" column="11" bodyfile="src/dpp/message.cpp" bodystart="92" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1af99f293166995b8273405e446d0efa3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::set_url</definition>
        <argsstring>(const std::string &amp;url)</argsstring>
        <name>set_url</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <briefdescription>
<para>Set the url for <ref refid="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5a96d13813649e792fc6d88d29b70202d6" kindref="member">dpp::cos_link</ref> types. Calling this function sets the style to <ref refid="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5a96d13813649e792fc6d88d29b70202d6" kindref="member">dpp::cos_link</ref> and the type to <ref refid="namespacedpp_1afce43206033521b990e3a72bb87481b7a98228836af5d0c180cfc05eb1f0bfde9" kindref="member">dpp::cot_button</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>URL to set, maximum length of 512 characters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; reference to self. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="343" column="11" bodyfile="src/dpp/message.cpp" bodystart="115" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1a19213be82f2cd18748f669e53e1348a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::set_style</definition>
        <argsstring>(component_style cs)</argsstring>
        <name>set_style</name>
        <param>
          <type><ref refid="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5" kindref="member">component_style</ref></type>
          <declname>cs</declname>
        </param>
        <briefdescription>
<para>Set the style of the component, e.g. button colour. For action rows, this field is ignored. Setting the style will auto-set the type to <ref refid="namespacedpp_1afce43206033521b990e3a72bb87481b7a98228836af5d0c180cfc05eb1f0bfde9" kindref="member">dpp::cot_button</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cs</parametername>
</parameternamelist>
<parameterdescription>
<para>Component style to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="353" column="11" bodyfile="src/dpp/message.cpp" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1a1bf3798669b015711df5d2621ff92d73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::set_id</definition>
        <argsstring>(const std::string &amp;id)</argsstring>
        <name>set_id</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Set the id of the component. For action rows, this field is ignored. Setting the id will auto-set the type to <ref refid="namespacedpp_1afce43206033521b990e3a72bb87481b7a98228836af5d0c180cfc05eb1f0bfde9" kindref="member">dpp::cot_button</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Custom ID string to set. This ID will be sent for any on_button_click events related to the button. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="364" column="11" bodyfile="src/dpp/message.cpp" bodystart="123" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1a48a2ab72eaf6e58073a1f5dc936877a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::set_disabled</definition>
        <argsstring>(bool disable)</argsstring>
        <name>set_disabled</name>
        <param>
          <type>bool</type>
          <declname>disable</declname>
        </param>
        <briefdescription>
<para>Set the component to disabled. Defaults to false on all created components. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>disable</parametername>
</parameternamelist>
<parameterdescription>
<para>True to disable, false to disable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="373" column="11" bodyfile="src/dpp/message.cpp" bodystart="132" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1ae364c7cfdbf5422444a53b6d9789f772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::set_placeholder</definition>
        <argsstring>(const std::string &amp;placeholder)</argsstring>
        <name>set_placeholder</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>placeholder</declname>
        </param>
        <briefdescription>
<para>Set the placeholder. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>placeholder</parametername>
</parameternamelist>
<parameterdescription>
<para>placeholder string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="381" column="11" bodyfile="src/dpp/message.cpp" bodystart="289" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1a39de811904ed62eb0fa2d37be2918503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::set_min_values</definition>
        <argsstring>(uint32_t min_values)</argsstring>
        <name>set_min_values</name>
        <param>
          <type>uint32_t</type>
          <declname>min_values</declname>
        </param>
        <briefdescription>
<para>Set the min value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min_values</parametername>
</parameternamelist>
<parameterdescription>
<para>min value to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="389" column="11" bodyfile="src/dpp/message.cpp" bodystart="294" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1a94aa64e7a19c975953ab40c2b7f34573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::set_max_values</definition>
        <argsstring>(uint32_t max_values)</argsstring>
        <name>set_max_values</name>
        <param>
          <type>uint32_t</type>
          <declname>max_values</declname>
        </param>
        <briefdescription>
<para>Set the max value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_values</parametername>
</parameternamelist>
<parameterdescription>
<para>max value to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="397" column="11" bodyfile="src/dpp/message.cpp" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1aa23287b8b438eb808b2106c50421235b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::set_min_length</definition>
        <argsstring>(uint32_t min_l)</argsstring>
        <name>set_min_length</name>
        <param>
          <type>uint32_t</type>
          <declname>min_l</declname>
        </param>
        <briefdescription>
<para>Set the min length of text input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min_l</parametername>
</parameternamelist>
<parameterdescription>
<para>min value to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="405" column="11" bodyfile="src/dpp/message.cpp" bodystart="152" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1a3778e0e45c429697f799ca431bb383ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::set_max_length</definition>
        <argsstring>(uint32_t max_l)</argsstring>
        <name>set_max_length</name>
        <param>
          <type>uint32_t</type>
          <declname>max_l</declname>
        </param>
        <briefdescription>
<para>Set the max length of text input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_l</parametername>
</parameternamelist>
<parameterdescription>
<para>max value to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="413" column="11" bodyfile="src/dpp/message.cpp" bodystart="158" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1ad39a99a7bb31f43bf3d2764aa3c24243" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::add_select_option</definition>
        <argsstring>(const select_option &amp;option)</argsstring>
        <name>add_select_option</name>
        <param>
          <type>const <ref refid="structdpp_1_1select__option" kindref="compound">select_option</ref> &amp;</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Add a select option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>option to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="421" column="11" bodyfile="src/dpp/message.cpp" bodystart="304" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1a3707437be16cc7dfd5edcf321f8e842d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::add_component</definition>
        <argsstring>(const component &amp;c)</argsstring>
        <name>add_component</name>
        <param>
          <type>const <ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Add a sub-component, only valid for action rows. Adding subcomponents to a component will automatically set this component&apos;s type to <ref refid="namespacedpp_1afce43206033521b990e3a72bb87481b7afd32ce8be4a99a9d84fb4815370a0bf8" kindref="member">dpp::cot_action_row</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The sub-component to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="431" column="11" bodyfile="src/dpp/message.cpp" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1a4fa1319e5119a258e3a80e028a4dff3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::set_emoji</definition>
        <argsstring>(const std::string &amp;name, dpp::snowflake id=0, bool animated=false)</argsstring>
        <name>set_emoji</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">dpp::snowflake</ref></type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>animated</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Set the emoji of the current sub-component. Only valid for buttons. Adding an emoji to a component will automatically set this components type to <ref refid="namespacedpp_1afce43206033521b990e3a72bb87481b7a98228836af5d0c180cfc05eb1f0bfde9" kindref="member">dpp::cot_button</ref>. One or both of name and id must be set. For a built in unicode emoji, you only need set name, and should set it to a unicode character e.g. &quot;😄&quot;. For custom emojis, set the name to the name of the emoji on the guild, and the id to the emoji&apos;s ID. Setting the animated boolean is only valid for custom emojis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Emoji name, or unicode character to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Emoji id, for custom emojis only. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>animated</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the custom emoji is animated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>component&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="450" column="11" bodyfile="src/dpp/message.cpp" bodystart="141" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1component_1a993d0a0c899aca38b3f12161484a9f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
        <definition>component &amp; dpp::component::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read class values from json object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>A json object to read from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="456" column="11" bodyfile="src/dpp/message.cpp" bodystart="47" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents the component object. A component is a clickable button or drop down list within a discord message, where the buttons emit on_button_click events when the user interacts with them. </para>
    </briefdescription>
    <detaileddescription>
<para>You should generally define one component object and then insert one or more additional components into it using <ref refid="classdpp_1_1component_1a3707437be16cc7dfd5edcf321f8e842d" kindref="member">component::add_component()</ref>, so that the parent object is an action row and the child objects are buttons.</para>
<para><simplesect kind="note"><para>At present this only works for whitelisted guilds. The beta is <bold>closed</bold>. When this feature is released, then the functionality will work correctly. </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>bool</label>
      </node>
      <node id="6">
        <label>component_style</label>
      </node>
      <node id="2">
        <label>component_type</label>
      </node>
      <node id="1">
        <label>dpp::component</label>
        <link refid="classdpp_1_1component"/>
        <childnode refid="2" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>components</edgelabel>
          <edgelabel>options</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>custom_id</edgelabel>
          <edgelabel>label</edgelabel>
          <edgelabel>placeholder</edgelabel>
          <edgelabel>url</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>style</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>text_style</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>max_length</edgelabel>
          <edgelabel>max_values</edgelabel>
          <edgelabel>min_length</edgelabel>
          <edgelabel>min_values</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>disabled</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>emoji</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>dpp::component::inner_emoji</label>
        <link refid="structdpp_1_1component_1_1inner__emoji"/>
        <childnode refid="4" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>animated</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>int32_t</label>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>variant&lt;</label>
      </node>
      <node id="3">
        <label>vector&lt;</label>
      </node>
      <node id="7">
        <label>text_style_type</label>
      </node>
      <node id="12">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/message.h" line="201" column="1" bodyfile="include/dpp/message.h" bodystart="201" bodyend="458"/>
    <listofallmembers>
      <member refid="classdpp_1_1component_1a3707437be16cc7dfd5edcf321f8e842d" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>add_component</name></member>
      <member refid="classdpp_1_1component_1ad39a99a7bb31f43bf3d2764aa3c24243" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>add_select_option</name></member>
      <member refid="classdpp_1_1component_1a69b9e60742f6a1f1622b264cd7712660" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>component</name></member>
      <member refid="classdpp_1_1component_1a51efd287b483b485f7019fb8263465ed" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>components</name></member>
      <member refid="classdpp_1_1component_1a9d5ae2ba0812d8c8e7345b3271d75e71" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>custom_id</name></member>
      <member refid="classdpp_1_1component_1ad364b789494d7888666173079bdb48ad" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>disabled</name></member>
      <member refid="classdpp_1_1component_1a259175c6c6da17af6d00765088fb73f6" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>emoji</name></member>
      <member refid="classdpp_1_1component_1a993d0a0c899aca38b3f12161484a9f13" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1component_1a177a7e35e4b310e2028464787396b1b4" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>label</name></member>
      <member refid="classdpp_1_1component_1aa0a71bbf2f4cac7d87a53ad1ec89da37" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>max_length</name></member>
      <member refid="classdpp_1_1component_1a35895913793b44ca33d039e4042afc25" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>max_values</name></member>
      <member refid="classdpp_1_1component_1a35e8a8aabfd66a0f23ece038591e4747" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>min_length</name></member>
      <member refid="classdpp_1_1component_1a2278f6585edfa07f2b7711aaf31cf5a3" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>min_values</name></member>
      <member refid="classdpp_1_1component_1ad4f47e82e57e28a1aac48027e43b2fd9" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>options</name></member>
      <member refid="classdpp_1_1component_1a4fe9d95b2fd61a38269c3368db4c17ce" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>placeholder</name></member>
      <member refid="classdpp_1_1component_1a48a2ab72eaf6e58073a1f5dc936877a3" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>set_disabled</name></member>
      <member refid="classdpp_1_1component_1a4fa1319e5119a258e3a80e028a4dff3c" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>set_emoji</name></member>
      <member refid="classdpp_1_1component_1a1bf3798669b015711df5d2621ff92d73" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>set_id</name></member>
      <member refid="classdpp_1_1component_1a23955055e9d77383fca2a5738ae3a30f" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>set_label</name></member>
      <member refid="classdpp_1_1component_1a3778e0e45c429697f799ca431bb383ad" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>set_max_length</name></member>
      <member refid="classdpp_1_1component_1a94aa64e7a19c975953ab40c2b7f34573" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>set_max_values</name></member>
      <member refid="classdpp_1_1component_1aa23287b8b438eb808b2106c50421235b" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>set_min_length</name></member>
      <member refid="classdpp_1_1component_1a39de811904ed62eb0fa2d37be2918503" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>set_min_values</name></member>
      <member refid="classdpp_1_1component_1ae364c7cfdbf5422444a53b6d9789f772" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>set_placeholder</name></member>
      <member refid="classdpp_1_1component_1a19213be82f2cd18748f669e53e1348a8" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>set_style</name></member>
      <member refid="classdpp_1_1component_1a4d2cd2b2c6169c31b4b3e41ce8698afe" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>set_text_style</name></member>
      <member refid="classdpp_1_1component_1a281e39d6b8c65b1fd301d195a835e703" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>set_type</name></member>
      <member refid="classdpp_1_1component_1af99f293166995b8273405e446d0efa3e" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>set_url</name></member>
      <member refid="classdpp_1_1component_1a114f858c5c2bcdc1067cb26a14e578af" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>style</name></member>
      <member refid="classdpp_1_1component_1a69a2c73574bfb36961fee1df8f6ff771" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>text_style</name></member>
      <member refid="classdpp_1_1component_1afdb70ec9968493ed54bab29135f8b8c6" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>type</name></member>
      <member refid="classdpp_1_1component_1a79ad72fb0e31440e8f644e79a5870573" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>url</name></member>
      <member refid="classdpp_1_1component_1aea6ebd38924644607081d88d0a32213c" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>value</name></member>
      <member refid="classdpp_1_1component_1a7e04116e12fe1944c7c74d0760d6f1fd" prot="public" virt="non-virtual"><scope>dpp::component</scope><name>~component</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
