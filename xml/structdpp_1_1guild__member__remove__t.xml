<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1guild__member__remove__t" kind="struct" prot="public">
    <compoundname>dpp::guild_member_remove_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1guild__member__remove__t_1aad078018917f530f80d3e554ad37760e" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::guild_member_remove_t::removing_guild</definition>
        <argsstring></argsstring>
        <name>removing_guild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="339" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1guild__member__remove__t_1a3b83576117dbcfad3dd2de0e93b0057c" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1user" kindref="compound">user</ref> *</type>
        <definition>user* dpp::guild_member_remove_t::removed</definition>
        <argsstring></argsstring>
        <name>removed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="340" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1guild__member__remove__t_1abfcc390e07732a43ed7ced93ff7ea9bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::guild_member_remove_t::guild_member_remove_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>guild_member_remove_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="338" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="140" bodyend="140"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Guild member remove. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10739">
        <label>dpp::guild_member_remove_t</label>
        <link refid="structdpp_1_1guild__member__remove__t"/>
        <childnode refid="10740" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10740">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10820">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="10758">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="10757" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="10750" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="10759" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="10761" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="10764" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="10743" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="10767" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="10754">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="10755" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="10756" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="10784">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10799">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="10785">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="10832">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="10749" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="10833" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="10743" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="10835">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="10749" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10836" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10825">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="10812">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="10761">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="10762" relation="public-inheritance">
        </childnode>
        <childnode refid="10763" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="10764" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="10765" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="10743" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="10766" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="10770">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="10814">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="10786">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="10816">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="10838">
        <label>region</label>
      </node>
      <node id="10826">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="10752">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="10840">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="10749" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="10765" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="10743" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="10745" relation="usage">
          <edgelabel>shard</edgelabel>
        </childnode>
      </node>
      <node id="10767">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="10768" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="10769" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="10770" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="10771" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="10772" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="10773" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="10774" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="10775" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="10776" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="10777" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="10778" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="10779" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="10780" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="10781" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="10782" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="10783" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="10784" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="10785" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="10786" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="10787" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="10788" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="10789" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="10790" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="10791" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="10792" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="10793" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="10794" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="10795" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="10796" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="10797" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="10798" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="10799" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="10800" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="10801" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="10802" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="10803" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="10804" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="10805" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="10806" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="10807" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="10808" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="10809" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="10810" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="10811" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="10812" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="10813" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="10814" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="10815" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="10816" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="10817" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="10818" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="10819" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="10820" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="10821" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="10822" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="10823" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="10824" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="10825" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="10826" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="10827" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="10828" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="10836">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="10750" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="10749" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="10765" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="10743" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="10837" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="10774">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="10781">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="10823">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="10749">
        <label>uint64_t</label>
      </node>
      <node id="10818">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10815">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10801">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="10795">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="10783">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="10772">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10741">
        <label>dpp::guild_member_remove_t</label>
        <link refid="structdpp_1_1guild__member__remove__t"/>
        <childnode refid="10742" relation="public-inheritance">
        </childnode>
        <childnode refid="10834" relation="usage">
          <edgelabel>removing_guild</edgelabel>
        </childnode>
        <childnode refid="10761" relation="usage">
          <edgelabel>removed</edgelabel>
        </childnode>
      </node>
      <node id="10791">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="10808">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="10805">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10828">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="10763">
        <label>uint16_t</label>
      </node>
      <node id="10793">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="10750">
        <label>time_t</label>
      </node>
      <node id="10744">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="10827">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="10804">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="10833">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="10746" relation="public-inheritance">
        </childnode>
        <childnode refid="10749" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="10750" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="10758" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="10764" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="10743" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="10753" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="10830" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="10766">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="10749" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="10803">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="10792">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="10757">
        <label>double</label>
      </node>
      <node id="10747">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="10748" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="10749" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="10750" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="10751" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="10752" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="10753" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="10743" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="10754" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="10802">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10824">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="10764">
        <label>uint32_t</label>
      </node>
      <node id="10822">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="10742">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="10743" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="10745" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="10765">
        <label>uint8_t</label>
      </node>
      <node id="10807">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="10839">
        <label>std::map&lt; snowflake, dpp::voicestate &gt;</label>
        <childnode refid="10749" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10840" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10760">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="10746">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="10747" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10759">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="10760" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="10776">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="10788">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="10773">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="10796">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="10798">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="10831">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="10749" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10832" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10748">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="10790">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10745">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="10746" relation="public-inheritance">
        </childnode>
        <childnode refid="10757" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="10749" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="10750" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="10758" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="10829" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="10764" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="10753" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="10743" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="10830" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="10831" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="10797">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="10755">
        <label>SSL *</label>
      </node>
      <node id="10762">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="10749" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="10810">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="10811">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="10819">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="10756">
        <label>SSL_CTX *</label>
      </node>
      <node id="10806">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="10829">
        <label>mutex</label>
      </node>
      <node id="10817">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10775">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="10794">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="10800">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="10813">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="10753">
        <label>bool</label>
      </node>
      <node id="10751">
        <label>SOCKET</label>
      </node>
      <node id="10834">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="10762" relation="public-inheritance">
        </childnode>
        <childnode refid="10749" relation="usage">
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="10835" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="10838" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="10763" relation="usage">
          <edgelabel>shard_id</edgelabel>
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
        </childnode>
        <childnode refid="10764" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="10765" relation="usage">
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>verification_level</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>premium_tier</edgelabel>
        </childnode>
        <childnode refid="10743" relation="usage">
          <edgelabel>vanity_url_code</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="10839" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
        <childnode refid="10837" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="10766" relation="usage">
          <edgelabel>splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
        </childnode>
      </node>
      <node id="10789">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="10821">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="10779">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="10771">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10768">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="10787">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="10809">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="10769">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="10782">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="10778">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="10837">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="10749" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10830">
        <label>native_handle_type</label>
      </node>
      <node id="10780">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10743">
        <label>std::string</label>
        <childnode refid="10744" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10777">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="333" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="333" bodyend="341"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::guild_member_remove_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::guild_member_remove_t</scope><name>from</name></member>
      <member refid="structdpp_1_1guild__member__remove__t_1abfcc390e07732a43ed7ced93ff7ea9bb" prot="public" virt="non-virtual"><scope>dpp::guild_member_remove_t</scope><name>guild_member_remove_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::guild_member_remove_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1guild__member__remove__t_1a3b83576117dbcfad3dd2de0e93b0057c" prot="public" virt="non-virtual"><scope>dpp::guild_member_remove_t</scope><name>removed</name></member>
      <member refid="structdpp_1_1guild__member__remove__t_1aad078018917f530f80d3e554ad37760e" prot="public" virt="non-virtual"><scope>dpp::guild_member_remove_t</scope><name>removing_guild</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
