<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1command__data__option" kind="struct" language="C++" prot="public">
    <compoundname>dpp::command_data_option</compoundname>
    <includes local="no">appcommand.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1command__data__option_1af19a9794fcddefce4f97a8f65a52d53a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dpp::command_data_option::focused</definition>
        <argsstring></argsstring>
        <name>focused</name>
        <briefdescription>
<para>Optional: true if this option is the currently focused option for autocomplete. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="750" column="6" bodyfile="include/dpp/appcommand.h" bodystart="750" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__data__option_1a0c3bbf03c956d22fc1ecf677c1476ac7" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::command_data_option::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>The name of the parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="730" column="13" bodyfile="include/dpp/appcommand.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__data__option_1aa26028641de473d1486d26e8048340b4" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structdpp_1_1command__data__option" kindref="compound">command_data_option</ref> &gt;</type>
        <definition>std::vector&lt;command_data_option&gt; dpp::command_data_option::options</definition>
        <argsstring></argsstring>
        <name>options</name>
        <briefdescription>
<para>Optional: present if this option is a group or subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="745" column="13" bodyfile="include/dpp/appcommand.h" bodystart="745" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__data__option_1a3e664aff9bad6fffbd521d0dcc1d2299" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1abc401d86119c6443bf72d736857c1a58" kindref="member">command_option_type</ref></type>
        <definition>command_option_type dpp::command_data_option::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>The type of option (value of ApplicationCommandOptionType). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="735" column="21" bodyfile="include/dpp/appcommand.h" bodystart="735" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1command__data__option_1a576bda8a063f9b1d1aa4b931973e4587" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a710b32b577396ba92917d0578f0bedb6" kindref="member">command_value</ref></type>
        <definition>command_value dpp::command_data_option::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
<para>Optional: the value of the pair. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="740" column="15" bodyfile="include/dpp/appcommand.h" bodystart="740" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1command__data__option_1a97666b53eecbec438b670a65fc182e52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::command_data_option::empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Check if the value variant holds std::monostate and options vector is empty (i.e. the option wasn&apos;t supplied) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool true, if value variant holds std::monostate and options vector is empty </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="756" column="6" bodyfile="include/dpp/appcommand.h" bodystart="756" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1command__data__option_1a497ea357c2b896a7bf08bcd75e981400" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T &amp; dpp::command_data_option::get_value</definition>
        <argsstring>(size_t index)</argsstring>
        <name>get_value</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get an option value by index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type to get from the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T returned type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="767" column="15" bodyfile="include/dpp/appcommand.h" bodystart="767" bodyend="769"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Values in the command interaction. These are the values specified by the user when actually issuing the command on a channel or in DM. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="7">
        <label>bool</label>
      </node>
      <node id="4">
        <label>command_option_type</label>
      </node>
      <node id="1">
        <label>dpp::command_data_option</label>
        <link refid="structdpp_1_1command__data__option"/>
        <childnode refid="2" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>options</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>focused</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>variant&lt; std::monostate, std::string, int64_t, bool, snowflake, double &gt;</label>
      </node>
      <node id="6">
        <label>vector&lt;</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/appcommand.h" line="726" column="1" bodyfile="include/dpp/appcommand.h" bodystart="726" bodyend="770"/>
    <listofallmembers>
      <member refid="structdpp_1_1command__data__option_1a97666b53eecbec438b670a65fc182e52" prot="public" virt="non-virtual"><scope>dpp::command_data_option</scope><name>empty</name></member>
      <member refid="structdpp_1_1command__data__option_1af19a9794fcddefce4f97a8f65a52d53a" prot="public" virt="non-virtual"><scope>dpp::command_data_option</scope><name>focused</name></member>
      <member refid="structdpp_1_1command__data__option_1a497ea357c2b896a7bf08bcd75e981400" prot="public" virt="non-virtual"><scope>dpp::command_data_option</scope><name>get_value</name></member>
      <member refid="structdpp_1_1command__data__option_1a0c3bbf03c956d22fc1ecf677c1476ac7" prot="public" virt="non-virtual"><scope>dpp::command_data_option</scope><name>name</name></member>
      <member refid="structdpp_1_1command__data__option_1aa26028641de473d1486d26e8048340b4" prot="public" virt="non-virtual"><scope>dpp::command_data_option</scope><name>options</name></member>
      <member refid="structdpp_1_1command__data__option_1a3e664aff9bad6fffbd521d0dcc1d2299" prot="public" virt="non-virtual"><scope>dpp::command_data_option</scope><name>type</name></member>
      <member refid="structdpp_1_1command__data__option_1a576bda8a063f9b1d1aa4b931973e4587" prot="public" virt="non-virtual"><scope>dpp::command_data_option</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
