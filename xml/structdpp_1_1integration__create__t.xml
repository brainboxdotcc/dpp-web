<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1integration__create__t" kind="struct" prot="public">
    <compoundname>dpp::integration_create_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1integration__create__t_1aed87baa097b6100796d1c1596ec4435a" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1integration" kindref="compound">integration</ref></type>
        <definition>integration dpp::integration_create_t::created_integration</definition>
        <argsstring></argsstring>
        <name>created_integration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="718" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="718" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1integration__create__t_1adb57b57c0dab581173935aa2a92eef0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::integration_create_t::integration_create_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>integration_create_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="717" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="137" bodyend="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Integration create. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="11491">
        <label>dpp::integration_create_t</label>
        <link refid="structdpp_1_1integration__create__t"/>
        <childnode refid="11492" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11492">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11572">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="11510">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="11509" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="11502" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="11511" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="11513" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="11516" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="11495" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="11519" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="11506">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="11507" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="11508" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="11536">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11551">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="11537">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="11584">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="11501" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11585" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="11495" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="11577">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="11564">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="11513">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="11514" relation="public-inheritance">
        </childnode>
        <childnode refid="11515" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="11516" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11517" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="11495" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="11518" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="11522">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="11566">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="11538">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="11568">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="11578">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="11504">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="11519">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="11520" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="11521" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="11522" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="11523" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="11524" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="11525" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="11526" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="11527" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="11528" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="11529" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="11530" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="11531" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="11532" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="11533" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="11534" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="11535" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="11536" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="11537" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="11538" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="11539" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="11540" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="11541" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="11542" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="11543" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="11544" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="11545" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="11546" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="11547" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="11548" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="11549" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="11550" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="11551" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="11552" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="11553" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="11554" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="11555" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="11556" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="11557" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="11558" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="11559" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="11560" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="11561" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="11562" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="11563" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="11564" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="11565" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="11566" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="11567" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="11568" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="11569" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="11570" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="11571" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="11572" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="11573" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="11574" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="11575" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="11576" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="11577" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="11578" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="11579" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="11580" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="11526">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="11533">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="11588">
        <label>integration_type</label>
      </node>
      <node id="11575">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="11501">
        <label>uint64_t</label>
      </node>
      <node id="11570">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11567">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11553">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="11547">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="11535">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="11524">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11493">
        <label>dpp::integration_create_t</label>
        <link refid="structdpp_1_1integration__create__t"/>
        <childnode refid="11494" relation="public-inheritance">
        </childnode>
        <childnode refid="11586" relation="usage">
          <edgelabel>created_integration</edgelabel>
        </childnode>
      </node>
      <node id="11543">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="11560">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="11557">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11580">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="11515">
        <label>uint16_t</label>
      </node>
      <node id="11545">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="11502">
        <label>time_t</label>
      </node>
      <node id="11496">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="11579">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11556">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="11585">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="11498" relation="public-inheritance">
        </childnode>
        <childnode refid="11501" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11502" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="11510" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="11516" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="11495" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="11505" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="11582" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="11518">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="11501" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="11555">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="11544">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="11509">
        <label>double</label>
      </node>
      <node id="11499">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="11500" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="11501" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="11502" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="11503" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="11504" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="11505" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="11495" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="11506" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="11554">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11576">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="11516">
        <label>uint32_t</label>
      </node>
      <node id="11574">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="11494">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="11495" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="11497" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="11517">
        <label>uint8_t</label>
      </node>
      <node id="11559">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="11512">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="11498">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="11499" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11511">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="11512" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="11528">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="11540">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="11525">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="11548">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="11550">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="11583">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="11501" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11584" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11500">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="11542">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11497">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="11498" relation="public-inheritance">
        </childnode>
        <childnode refid="11509" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="11501" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="11502" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="11510" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="11581" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="11516" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="11505" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="11495" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="11582" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="11583" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="11549">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="11507">
        <label>SSL *</label>
      </node>
      <node id="11514">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="11501" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="11562">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="11563">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="11571">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="11508">
        <label>SSL_CTX *</label>
      </node>
      <node id="11558">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="11581">
        <label>mutex</label>
      </node>
      <node id="11569">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11527">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="11546">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="11552">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="11565">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="11505">
        <label>bool</label>
      </node>
      <node id="11503">
        <label>SOCKET</label>
      </node>
      <node id="11541">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="11586">
        <label>dpp::integration</label>
        <link refid="classdpp_1_1integration"/>
        <childnode refid="11514" relation="public-inheritance">
        </childnode>
        <childnode refid="11502" relation="usage">
          <edgelabel>synced_at</edgelabel>
        </childnode>
        <childnode refid="11501" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>role_id</edgelabel>
        </childnode>
        <childnode refid="11587" relation="usage">
          <edgelabel>app</edgelabel>
        </childnode>
        <childnode refid="11516" relation="usage">
          <edgelabel>subscriber_count</edgelabel>
          <edgelabel>expire_grace_period</edgelabel>
        </childnode>
        <childnode refid="11588" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="11517" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11495" relation="usage">
          <edgelabel>account_id</edgelabel>
          <edgelabel>account_name</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="11573">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="11531">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11523">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11520">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="11539">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11561">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="11521">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="11534">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="11530">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="11582">
        <label>native_handle_type</label>
      </node>
      <node id="11532">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11495">
        <label>std::string</label>
        <childnode refid="11496" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11529">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
      <node id="11587">
        <label>dpp::integration_app</label>
        <link refid="structdpp_1_1integration__app"/>
        <childnode refid="11501" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="11513" relation="usage">
          <edgelabel>bot</edgelabel>
        </childnode>
        <childnode refid="11495" relation="usage">
          <edgelabel>summary</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="712" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="712" bodyend="719"/>
    <listofallmembers>
      <member refid="structdpp_1_1integration__create__t_1aed87baa097b6100796d1c1596ec4435a" prot="public" virt="non-virtual"><scope>dpp::integration_create_t</scope><name>created_integration</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::integration_create_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::integration_create_t</scope><name>from</name></member>
      <member refid="structdpp_1_1integration__create__t_1adb57b57c0dab581173935aa2a92eef0a" prot="public" virt="non-virtual"><scope>dpp::integration_create_t</scope><name>integration_create_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::integration_create_t</scope><name>raw_event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
