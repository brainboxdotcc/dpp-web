<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1guild__join__request__delete__t" kind="struct" prot="public">
    <compoundname>dpp::guild_join_request_delete_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1guild__join__request__delete__t_1aa985fff3de79dabb40de48de443f54bb" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::guild_join_request_delete_t::guild_id</definition>
        <argsstring></argsstring>
        <name>guild_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deleted guild </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="277" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1guild__join__request__delete__t_1a14a853ac56283599039cb8ed2594a5c7" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::guild_join_request_delete_t::user_id</definition>
        <argsstring></argsstring>
        <name>user_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="278" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1guild__join__request__delete__t_1a9bfb8a3d492b2a7d9d176bea92d4694f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::guild_join_request_delete_t::guild_join_request_delete_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>guild_join_request_delete_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="275" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="93" bodyend="93"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Guild join request delete (user declined membership screening) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10361">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
      <node id="10360">
        <label>dpp::guild_join_request_delete_t</label>
        <link refid="structdpp_1_1guild__join__request__delete__t"/>
        <childnode refid="10361" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10441">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="10379">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="10378" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="10371" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="10380" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="10382" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="10385" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="10364" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="10388" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="10375">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="10376" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="10377" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="10405">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10420">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="10406">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="10453">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="10370" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="10454" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="10364" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="10446">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="10433">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="10382">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="10383" relation="public-inheritance">
        </childnode>
        <childnode refid="10384" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="10385" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="10386" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="10364" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="10387" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="10391">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="10435">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="10407">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="10437">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="10447">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="10373">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="10388">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="10389" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="10390" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="10391" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="10392" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="10393" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="10394" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="10395" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="10396" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="10397" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="10398" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="10399" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="10400" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="10401" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="10402" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="10403" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="10404" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="10405" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="10406" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="10407" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="10408" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="10409" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="10410" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="10411" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="10412" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="10413" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="10414" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="10415" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="10416" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="10417" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="10418" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="10419" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="10420" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="10421" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="10422" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="10423" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="10424" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="10425" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="10426" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="10427" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="10428" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="10429" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="10430" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="10431" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="10432" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="10433" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="10434" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="10435" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="10436" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="10437" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="10438" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="10439" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="10440" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="10441" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="10442" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="10443" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="10444" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="10445" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="10446" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="10447" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="10448" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="10449" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="10395">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="10402">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="10444">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="10370">
        <label>uint64_t</label>
      </node>
      <node id="10439">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10436">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10422">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="10416">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="10404">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="10393">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10412">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="10429">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="10426">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10449">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="10384">
        <label>uint16_t</label>
      </node>
      <node id="10414">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="10371">
        <label>time_t</label>
      </node>
      <node id="10365">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="10448">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="10425">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="10454">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="10367" relation="public-inheritance">
        </childnode>
        <childnode refid="10370" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="10371" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="10379" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="10385" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="10364" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="10374" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="10451" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="10387">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="10370" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="10424">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="10413">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="10378">
        <label>double</label>
      </node>
      <node id="10368">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="10369" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="10370" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="10371" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="10372" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="10373" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="10374" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="10364" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="10375" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="10423">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10445">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="10385">
        <label>uint32_t</label>
      </node>
      <node id="10443">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="10363">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="10364" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="10366" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="10386">
        <label>uint8_t</label>
      </node>
      <node id="10428">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="10381">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="10367">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="10368" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10380">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="10381" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="10397">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="10409">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="10394">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="10417">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="10419">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="10452">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="10370" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10453" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10369">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="10411">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10366">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="10367" relation="public-inheritance">
        </childnode>
        <childnode refid="10378" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="10370" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="10371" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="10379" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="10450" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="10385" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="10374" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="10364" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="10451" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="10452" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="10418">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="10376">
        <label>SSL *</label>
      </node>
      <node id="10383">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="10370" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="10431">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="10432">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="10440">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="10377">
        <label>SSL_CTX *</label>
      </node>
      <node id="10427">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="10450">
        <label>mutex</label>
      </node>
      <node id="10438">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10396">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="10415">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="10421">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="10434">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="10374">
        <label>bool</label>
      </node>
      <node id="10372">
        <label>SOCKET</label>
      </node>
      <node id="10410">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="10442">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="10400">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="10392">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10389">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="10408">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="10430">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="10390">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="10403">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="10399">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="10451">
        <label>native_handle_type</label>
      </node>
      <node id="10401">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10362">
        <label>dpp::guild_join_request_delete_t</label>
        <link refid="structdpp_1_1guild__join__request__delete__t"/>
        <childnode refid="10363" relation="public-inheritance">
        </childnode>
        <childnode refid="10370" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
      </node>
      <node id="10364">
        <label>std::string</label>
        <childnode refid="10365" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10398">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="270" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="270" bodyend="279"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::guild_join_request_delete_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::guild_join_request_delete_t</scope><name>from</name></member>
      <member refid="structdpp_1_1guild__join__request__delete__t_1aa985fff3de79dabb40de48de443f54bb" prot="public" virt="non-virtual"><scope>dpp::guild_join_request_delete_t</scope><name>guild_id</name></member>
      <member refid="structdpp_1_1guild__join__request__delete__t_1a9bfb8a3d492b2a7d9d176bea92d4694f" prot="public" virt="non-virtual"><scope>dpp::guild_join_request_delete_t</scope><name>guild_join_request_delete_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::guild_join_request_delete_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1guild__join__request__delete__t_1a14a853ac56283599039cb8ed2594a5c7" prot="public" virt="non-virtual"><scope>dpp::guild_join_request_delete_t</scope><name>user_id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
