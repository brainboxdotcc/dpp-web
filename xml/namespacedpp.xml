<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="namespacedpp" kind="namespace" language="C++">
    <compoundname>dpp</compoundname>
    <innerclass refid="classdpp_1_1activity" prot="public">dpp::activity</innerclass>
    <innerclass refid="structdpp_1_1application__command__create__t" prot="public">dpp::application_command_create_t</innerclass>
    <innerclass refid="structdpp_1_1application__command__delete__t" prot="public">dpp::application_command_delete_t</innerclass>
    <innerclass refid="structdpp_1_1application__command__update__t" prot="public">dpp::application_command_update_t</innerclass>
    <innerclass refid="structdpp_1_1attachment" prot="public">dpp::attachment</innerclass>
    <innerclass refid="structdpp_1_1audit__change" prot="public">dpp::audit_change</innerclass>
    <innerclass refid="structdpp_1_1audit__entry" prot="public">dpp::audit_entry</innerclass>
    <innerclass refid="structdpp_1_1audit__extra" prot="public">dpp::audit_extra</innerclass>
    <innerclass refid="classdpp_1_1auditlog" prot="public">dpp::auditlog</innerclass>
    <innerclass refid="classdpp_1_1ban" prot="public">dpp::ban</innerclass>
    <innerclass refid="structdpp_1_1bucket__t" prot="public">dpp::bucket_t</innerclass>
    <innerclass refid="structdpp_1_1button__click__t" prot="public">dpp::button_click_t</innerclass>
    <innerclass refid="classdpp_1_1cache" prot="public">dpp::cache</innerclass>
    <innerclass refid="structdpp_1_1cache__policy__t" prot="public">dpp::cache_policy_t</innerclass>
    <innerclass refid="classdpp_1_1channel" prot="public">dpp::channel</innerclass>
    <innerclass refid="structdpp_1_1channel__create__t" prot="public">dpp::channel_create_t</innerclass>
    <innerclass refid="structdpp_1_1channel__delete__t" prot="public">dpp::channel_delete_t</innerclass>
    <innerclass refid="structdpp_1_1channel__pins__update__t" prot="public">dpp::channel_pins_update_t</innerclass>
    <innerclass refid="structdpp_1_1channel__update__t" prot="public">dpp::channel_update_t</innerclass>
    <innerclass refid="classdpp_1_1cluster" prot="public">dpp::cluster</innerclass>
    <innerclass refid="structdpp_1_1command__data__option" prot="public">dpp::command_data_option</innerclass>
    <innerclass refid="structdpp_1_1command__info__t" prot="public">dpp::command_info_t</innerclass>
    <innerclass refid="structdpp_1_1command__interaction" prot="public">dpp::command_interaction</innerclass>
    <innerclass refid="structdpp_1_1command__option" prot="public">dpp::command_option</innerclass>
    <innerclass refid="structdpp_1_1command__option__choice" prot="public">dpp::command_option_choice</innerclass>
    <innerclass refid="classdpp_1_1command__permission" prot="public">dpp::command_permission</innerclass>
    <innerclass refid="structdpp_1_1command__resolved" prot="public">dpp::command_resolved</innerclass>
    <innerclass refid="structdpp_1_1command__source" prot="public">dpp::command_source</innerclass>
    <innerclass refid="classdpp_1_1commandhandler" prot="public">dpp::commandhandler</innerclass>
    <innerclass refid="classdpp_1_1component" prot="public">dpp::component</innerclass>
    <innerclass refid="structdpp_1_1component__interaction" prot="public">dpp::component_interaction</innerclass>
    <innerclass refid="structdpp_1_1confirmation" prot="public">dpp::confirmation</innerclass>
    <innerclass refid="structdpp_1_1confirmation__callback__t" prot="public">dpp::confirmation_callback_t</innerclass>
    <innerclass refid="classdpp_1_1discord__client" prot="public">dpp::discord_client</innerclass>
    <innerclass refid="classdpp_1_1discord__voice__client" prot="public">dpp::discord_voice_client</innerclass>
    <innerclass refid="classdpp_1_1dispatcher" prot="public">dpp::dispatcher</innerclass>
    <innerclass refid="classdpp_1_1dtemplate" prot="public">dpp::dtemplate</innerclass>
    <innerclass refid="structdpp_1_1embed" prot="public">dpp::embed</innerclass>
    <innerclass refid="structdpp_1_1embed__author" prot="public">dpp::embed_author</innerclass>
    <innerclass refid="structdpp_1_1embed__field" prot="public">dpp::embed_field</innerclass>
    <innerclass refid="structdpp_1_1embed__footer" prot="public">dpp::embed_footer</innerclass>
    <innerclass refid="structdpp_1_1embed__image" prot="public">dpp::embed_image</innerclass>
    <innerclass refid="structdpp_1_1embed__provider" prot="public">dpp::embed_provider</innerclass>
    <innerclass refid="classdpp_1_1emoji" prot="public">dpp::emoji</innerclass>
    <innerclass refid="structdpp_1_1error__detail" prot="public">dpp::error_detail</innerclass>
    <innerclass refid="structdpp_1_1error__info" prot="public">dpp::error_info</innerclass>
    <innerclass refid="structdpp_1_1event__dispatch__t" prot="public">dpp::event_dispatch_t</innerclass>
    <innerclass refid="classdpp_1_1exception" prot="public">dpp::exception</innerclass>
    <innerclass refid="structdpp_1_1gateway" prot="public">dpp::gateway</innerclass>
    <innerclass refid="classdpp_1_1guild" prot="public">dpp::guild</innerclass>
    <innerclass refid="structdpp_1_1guild__ban__add__t" prot="public">dpp::guild_ban_add_t</innerclass>
    <innerclass refid="structdpp_1_1guild__ban__remove__t" prot="public">dpp::guild_ban_remove_t</innerclass>
    <innerclass refid="classdpp_1_1guild__command__permissions" prot="public">dpp::guild_command_permissions</innerclass>
    <innerclass refid="structdpp_1_1guild__create__t" prot="public">dpp::guild_create_t</innerclass>
    <innerclass refid="structdpp_1_1guild__delete__t" prot="public">dpp::guild_delete_t</innerclass>
    <innerclass refid="structdpp_1_1guild__emojis__update__t" prot="public">dpp::guild_emojis_update_t</innerclass>
    <innerclass refid="structdpp_1_1guild__integrations__update__t" prot="public">dpp::guild_integrations_update_t</innerclass>
    <innerclass refid="structdpp_1_1guild__join__request__delete__t" prot="public">dpp::guild_join_request_delete_t</innerclass>
    <innerclass refid="classdpp_1_1guild__member" prot="public">dpp::guild_member</innerclass>
    <innerclass refid="structdpp_1_1guild__member__add__t" prot="public">dpp::guild_member_add_t</innerclass>
    <innerclass refid="structdpp_1_1guild__member__remove__t" prot="public">dpp::guild_member_remove_t</innerclass>
    <innerclass refid="structdpp_1_1guild__member__update__t" prot="public">dpp::guild_member_update_t</innerclass>
    <innerclass refid="structdpp_1_1guild__members__chunk__t" prot="public">dpp::guild_members_chunk_t</innerclass>
    <innerclass refid="structdpp_1_1guild__role__create__t" prot="public">dpp::guild_role_create_t</innerclass>
    <innerclass refid="structdpp_1_1guild__role__delete__t" prot="public">dpp::guild_role_delete_t</innerclass>
    <innerclass refid="structdpp_1_1guild__role__update__t" prot="public">dpp::guild_role_update_t</innerclass>
    <innerclass refid="structdpp_1_1guild__stickers__update__t" prot="public">dpp::guild_stickers_update_t</innerclass>
    <innerclass refid="structdpp_1_1guild__update__t" prot="public">dpp::guild_update_t</innerclass>
    <innerclass refid="classdpp_1_1guild__widget" prot="public">dpp::guild_widget</innerclass>
    <innerclass refid="classdpp_1_1http__request" prot="public">dpp::http_request</innerclass>
    <innerclass refid="structdpp_1_1http__request__completion__t" prot="public">dpp::http_request_completion_t</innerclass>
    <innerclass refid="classdpp_1_1integration" prot="public">dpp::integration</innerclass>
    <innerclass refid="structdpp_1_1integration__app" prot="public">dpp::integration_app</innerclass>
    <innerclass refid="structdpp_1_1integration__create__t" prot="public">dpp::integration_create_t</innerclass>
    <innerclass refid="structdpp_1_1integration__delete__t" prot="public">dpp::integration_delete_t</innerclass>
    <innerclass refid="structdpp_1_1integration__update__t" prot="public">dpp::integration_update_t</innerclass>
    <innerclass refid="classdpp_1_1interaction" prot="public">dpp::interaction</innerclass>
    <innerclass refid="structdpp_1_1interaction__create__t" prot="public">dpp::interaction_create_t</innerclass>
    <innerclass refid="structdpp_1_1interaction__response" prot="public">dpp::interaction_response</innerclass>
    <innerclass refid="classdpp_1_1invite" prot="public">dpp::invite</innerclass>
    <innerclass refid="structdpp_1_1invite__create__t" prot="public">dpp::invite_create_t</innerclass>
    <innerclass refid="structdpp_1_1invite__delete__t" prot="public">dpp::invite_delete_t</innerclass>
    <innerclass refid="structdpp_1_1log__t" prot="public">dpp::log_t</innerclass>
    <innerclass refid="classdpp_1_1managed" prot="public">dpp::managed</innerclass>
    <innerclass refid="structdpp_1_1message" prot="public">dpp::message</innerclass>
    <innerclass refid="structdpp_1_1message__create__t" prot="public">dpp::message_create_t</innerclass>
    <innerclass refid="structdpp_1_1message__delete__bulk__t" prot="public">dpp::message_delete_bulk_t</innerclass>
    <innerclass refid="structdpp_1_1message__delete__t" prot="public">dpp::message_delete_t</innerclass>
    <innerclass refid="structdpp_1_1message__reaction__add__t" prot="public">dpp::message_reaction_add_t</innerclass>
    <innerclass refid="structdpp_1_1message__reaction__remove__all__t" prot="public">dpp::message_reaction_remove_all_t</innerclass>
    <innerclass refid="structdpp_1_1message__reaction__remove__emoji__t" prot="public">dpp::message_reaction_remove_emoji_t</innerclass>
    <innerclass refid="structdpp_1_1message__reaction__remove__t" prot="public">dpp::message_reaction_remove_t</innerclass>
    <innerclass refid="structdpp_1_1message__update__t" prot="public">dpp::message_update_t</innerclass>
    <innerclass refid="classdpp_1_1opensslcontext" prot="public">dpp::opensslcontext</innerclass>
    <innerclass refid="structdpp_1_1param__info" prot="public">dpp::param_info</innerclass>
    <innerclass refid="structdpp_1_1permission__overwrite" prot="public">dpp::permission_overwrite</innerclass>
    <innerclass refid="classdpp_1_1presence" prot="public">dpp::presence</innerclass>
    <innerclass refid="structdpp_1_1presence__update__t" prot="public">dpp::presence_update_t</innerclass>
    <innerclass refid="structdpp_1_1prune" prot="public">dpp::prune</innerclass>
    <innerclass refid="structdpp_1_1reaction" prot="public">dpp::reaction</innerclass>
    <innerclass refid="structdpp_1_1ready__t" prot="public">dpp::ready_t</innerclass>
    <innerclass refid="classdpp_1_1request__queue" prot="public">dpp::request_queue</innerclass>
    <innerclass refid="structdpp_1_1resolved__user" prot="public">dpp::resolved_user</innerclass>
    <innerclass refid="structdpp_1_1resumed__t" prot="public">dpp::resumed_t</innerclass>
    <innerclass refid="classdpp_1_1role" prot="public">dpp::role</innerclass>
    <innerclass refid="structdpp_1_1rtp__header" prot="public">dpp::rtp_header</innerclass>
    <innerclass refid="structdpp_1_1select__click__t" prot="public">dpp::select_click_t</innerclass>
    <innerclass refid="structdpp_1_1select__option" prot="public">dpp::select_option</innerclass>
    <innerclass refid="classdpp_1_1slashcommand" prot="public">dpp::slashcommand</innerclass>
    <innerclass refid="classdpp_1_1ssl__client" prot="public">dpp::ssl_client</innerclass>
    <innerclass refid="structdpp_1_1stage__instance__create__t" prot="public">dpp::stage_instance_create_t</innerclass>
    <innerclass refid="structdpp_1_1stage__instance__delete__t" prot="public">dpp::stage_instance_delete_t</innerclass>
    <innerclass refid="structdpp_1_1sticker" prot="public">dpp::sticker</innerclass>
    <innerclass refid="structdpp_1_1sticker__pack" prot="public">dpp::sticker_pack</innerclass>
    <innerclass refid="structdpp_1_1thread__create__t" prot="public">dpp::thread_create_t</innerclass>
    <innerclass refid="structdpp_1_1thread__delete__t" prot="public">dpp::thread_delete_t</innerclass>
    <innerclass refid="structdpp_1_1thread__list__sync__t" prot="public">dpp::thread_list_sync_t</innerclass>
    <innerclass refid="structdpp_1_1thread__member" prot="public">dpp::thread_member</innerclass>
    <innerclass refid="structdpp_1_1thread__member__update__t" prot="public">dpp::thread_member_update_t</innerclass>
    <innerclass refid="structdpp_1_1thread__members__update__t" prot="public">dpp::thread_members_update_t</innerclass>
    <innerclass refid="structdpp_1_1thread__metadata" prot="public">dpp::thread_metadata</innerclass>
    <innerclass refid="structdpp_1_1thread__update__t" prot="public">dpp::thread_update_t</innerclass>
    <innerclass refid="structdpp_1_1typing__start__t" prot="public">dpp::typing_start_t</innerclass>
    <innerclass refid="classdpp_1_1user" prot="public">dpp::user</innerclass>
    <innerclass refid="structdpp_1_1user__update__t" prot="public">dpp::user_update_t</innerclass>
    <innerclass refid="structdpp_1_1voice__buffer__send__t" prot="public">dpp::voice_buffer_send_t</innerclass>
    <innerclass refid="structdpp_1_1voice__client__disconnect__t" prot="public">dpp::voice_client_disconnect_t</innerclass>
    <innerclass refid="structdpp_1_1voice__client__speaking__t" prot="public">dpp::voice_client_speaking_t</innerclass>
    <innerclass refid="structdpp_1_1voice__out__packet" prot="public">dpp::voice_out_packet</innerclass>
    <innerclass refid="structdpp_1_1voice__ready__t" prot="public">dpp::voice_ready_t</innerclass>
    <innerclass refid="structdpp_1_1voice__receive__t" prot="public">dpp::voice_receive_t</innerclass>
    <innerclass refid="structdpp_1_1voice__server__update__t" prot="public">dpp::voice_server_update_t</innerclass>
    <innerclass refid="structdpp_1_1voice__state__update__t" prot="public">dpp::voice_state_update_t</innerclass>
    <innerclass refid="structdpp_1_1voice__track__marker__t" prot="public">dpp::voice_track_marker_t</innerclass>
    <innerclass refid="structdpp_1_1voice__user__talking__t" prot="public">dpp::voice_user_talking_t</innerclass>
    <innerclass refid="classdpp_1_1voiceconn" prot="public">dpp::voiceconn</innerclass>
    <innerclass refid="classdpp_1_1voiceregion" prot="public">dpp::voiceregion</innerclass>
    <innerclass refid="classdpp_1_1voicestate" prot="public">dpp::voicestate</innerclass>
    <innerclass refid="classdpp_1_1webhook" prot="public">dpp::webhook</innerclass>
    <innerclass refid="structdpp_1_1webhooks__update__t" prot="public">dpp::webhooks_update_t</innerclass>
    <innerclass refid="classdpp_1_1websocket__client" prot="public">dpp::websocket_client</innerclass>
    <innerclass refid="classdpp_1_1zlibcontext" prot="public">dpp::zlibcontext</innerclass>
    <innernamespace refid="namespacedpp_1_1events">dpp::events</innernamespace>
    <innernamespace refid="namespacedpp_1_1utility">dpp::utility</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3d" prot="public" static="no" strong="no">
        <type></type>
        <name>audit_type</name>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da959ca88b217b92b2145dbb301d673ceb" prot="public">
          <name>ae_guild_update</name>
          <initializer>=	1</initializer>
          <briefdescription>
<para>Guild update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da4c65b928d1e5adbb973e9fe333b4ebc5" prot="public">
          <name>ae_channel_create</name>
          <initializer>=	10</initializer>
          <briefdescription>
<para>Channel create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da1a50fe9c8ab4c8fbd86c7d45a2798e7a" prot="public">
          <name>ae_channel_update</name>
          <initializer>=	11</initializer>
          <briefdescription>
<para>Channel update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da1e733eb6fb2b099ab595238d62157918" prot="public">
          <name>ae_channel_delete</name>
          <initializer>=	12</initializer>
          <briefdescription>
<para>Channel delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dadf8ff382b3914c72666efe22941cb812" prot="public">
          <name>ae_channel_overwrite_create</name>
          <initializer>=	13</initializer>
          <briefdescription>
<para>Channel overwrite create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da9d27d94d4839890ebbd5485e5fc7afa2" prot="public">
          <name>ae_channel_overwrite_update</name>
          <initializer>=	14</initializer>
          <briefdescription>
<para>Channel overwrite update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da4c55bc638a92e4ca11304267f163b64c" prot="public">
          <name>ae_channel_overwrite_delete</name>
          <initializer>=	15</initializer>
          <briefdescription>
<para>Channel overwrite delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da02429f8355107f3a0b355f6e091ca7cf" prot="public">
          <name>ae_member_kick</name>
          <initializer>=	20</initializer>
          <briefdescription>
<para>Channel member kick. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dac03b4f81554cd19b7272806f0b57cce4" prot="public">
          <name>ae_member_prune</name>
          <initializer>=	21</initializer>
          <briefdescription>
<para>Channel member prune. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da65255c5714e88ac9d43da3e4efd10791" prot="public">
          <name>ae_member_ban_add</name>
          <initializer>=	22</initializer>
          <briefdescription>
<para>Channel member ban add. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dad217bd78244c8e457cc59913be772fa6" prot="public">
          <name>ae_member_ban_remove</name>
          <initializer>=	23</initializer>
          <briefdescription>
<para>Channel member ban remove. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3daa18701336d5e2d688d2c6c7264639cf3" prot="public">
          <name>ae_member_update</name>
          <initializer>=	24</initializer>
          <briefdescription>
<para>Guild member update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da2d77a92ab2c4bda93783d4483eab3d77" prot="public">
          <name>ae_member_role_update</name>
          <initializer>=	25</initializer>
          <briefdescription>
<para>Guild member role update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da40d9dab24c746a49b1304e835968fc4f" prot="public">
          <name>ae_member_move</name>
          <initializer>=	26</initializer>
          <briefdescription>
<para>Guild member move. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da80fc1e8823a4c247a2d9618af41e79fd" prot="public">
          <name>ae_member_disconnect</name>
          <initializer>=	27</initializer>
          <briefdescription>
<para>Guild member voice disconnect. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3daa7b736cb8b2bcba282cad2369e6d6a70" prot="public">
          <name>ae_bot_add</name>
          <initializer>=	28</initializer>
          <briefdescription>
<para>Guild bot add. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da7fa47ef13a5cd3314e3a6d1ce11bc144" prot="public">
          <name>ae_role_create</name>
          <initializer>=	30</initializer>
          <briefdescription>
<para>Guild role create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da0d6ef1503a63905a83d469fc9e2d8bcd" prot="public">
          <name>ae_role_update</name>
          <initializer>=	31</initializer>
          <briefdescription>
<para>Guild role update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dab89f7d0b6c549d88092ca957a7e0a80d" prot="public">
          <name>ae_role_delete</name>
          <initializer>=	32</initializer>
          <briefdescription>
<para>Guild role delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da86076b09afb9fe9471f67d1b811e0446" prot="public">
          <name>ae_invite_create</name>
          <initializer>=	40</initializer>
          <briefdescription>
<para>Guild invite create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3daec4460e6b6145b142fd15abbd8ab2f40" prot="public">
          <name>ae_invite_update</name>
          <initializer>=	41</initializer>
          <briefdescription>
<para>Guild invite update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da31613de2a9edbfcada438f5565ecca93" prot="public">
          <name>ae_invite_delete</name>
          <initializer>=	42</initializer>
          <briefdescription>
<para>Guild invite delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da3bd89a2a56f826cad515c7212fffbbea" prot="public">
          <name>ae_webhook_create</name>
          <initializer>=	50</initializer>
          <briefdescription>
<para>Guild webhook create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da4381582918c56da2ce630bb91c755f81" prot="public">
          <name>ae_webhook_update</name>
          <initializer>=	51</initializer>
          <briefdescription>
<para>Guild webhook update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da4b33465e53ba30f4325056066a3f62fd" prot="public">
          <name>ae_webhook_delete</name>
          <initializer>=	52</initializer>
          <briefdescription>
<para>Guild webhook delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da6fe1c89232a445d3ff6a0f00e75e415f" prot="public">
          <name>ae_emoji_create</name>
          <initializer>=	60</initializer>
          <briefdescription>
<para>Guild emoji create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dabc634598594787f384f68efd0be06fc4" prot="public">
          <name>ae_emoji_update</name>
          <initializer>=	61</initializer>
          <briefdescription>
<para>Guild emoji update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da8dc2f45677f74b478e79e0e1190975b8" prot="public">
          <name>ae_emoji_delete</name>
          <initializer>=	62</initializer>
          <briefdescription>
<para>Guild emoji delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da6994f0252a98e8acc23d129f50018af6" prot="public">
          <name>ae_message_delete</name>
          <initializer>=	72</initializer>
          <briefdescription>
<para>Guild message delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da03abd59d9efdfa055047d83a575097f7" prot="public">
          <name>ae_message_bulk_delete</name>
          <initializer>=	73</initializer>
          <briefdescription>
<para>Guild message bulk delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da0b788dfd104a51ce239dbadc3fbcd664" prot="public">
          <name>ae_message_pin</name>
          <initializer>=	74</initializer>
          <briefdescription>
<para>Guild message pin. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da97943162763a70984d5d4d37b06c4c7f" prot="public">
          <name>ae_message_unpin</name>
          <initializer>=	75</initializer>
          <briefdescription>
<para>Guild message unpin. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3daf62cf0f28c5c9dc6814f06357bd890b8" prot="public">
          <name>ae_integration_create</name>
          <initializer>=	80</initializer>
          <briefdescription>
<para>Guild integration create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da6e661282e369e74d2c6067bd1ca10101" prot="public">
          <name>ae_integration_update</name>
          <initializer>=	81</initializer>
          <briefdescription>
<para>Guild integration update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da8ead0380000825094c1b8c110800a2b2" prot="public">
          <name>ae_integration_delete</name>
          <initializer>=	82</initializer>
          <briefdescription>
<para>Guild integration delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines types of audit log entry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="33" column="1" bodyfile="include/dpp/auditlog.h" bodystart="33" bodyend="104"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a8af3a726df107c304139477dbfa42092" prot="public" static="no" strong="no">
        <type></type>
        <name>channel_type</name>
        <enumvalue id="namespacedpp_1a8af3a726df107c304139477dbfa42092ac240528d2f3f3a773b5e418c4f25d696" prot="public">
          <name>GUILD_TEXT</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>a text channel within a server </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a8af3a726df107c304139477dbfa42092aea2cd43492b5252e09a6c9b29c58d159" prot="public">
          <name>DM</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>a direct message between users </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a8af3a726df107c304139477dbfa42092a444c8af4513fe76ab80cc00039ce8852" prot="public">
          <name>GUILD_VOICE</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>a voice channel within a server </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a8af3a726df107c304139477dbfa42092a0e46c57251ffbb0889dded66229de5e3" prot="public">
          <name>GROUP_DM</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>a direct message between multiple users </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a8af3a726df107c304139477dbfa42092a385ba6f04f2c7bae9082cb497ce8973a" prot="public">
          <name>GUILD_CATEGORY</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>an organizational category that contains up to 50 channels </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a8af3a726df107c304139477dbfa42092a95ccc888242d0550c14d86d5af499f6b" prot="public">
          <name>GUILD_NEWS</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>a channel that users can follow and crosspost into their own server </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a8af3a726df107c304139477dbfa42092a6a57ffe1a9ec22c41c73780837432675" prot="public">
          <name>GUILD_STORE</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>a channel in which game developers can sell their game on Discord </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a8af3a726df107c304139477dbfa42092ad6cedbe459b1e8cf4e8f5a25adbe5b20" prot="public">
          <name>GUILD_NEWS_THREAD</name>
          <initializer>= 10</initializer>
          <briefdescription>
<para>a temporary sub-channel within a GUILD_NEWS channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a8af3a726df107c304139477dbfa42092a2fb972e6997df3debf8089fcaa8000ee" prot="public">
          <name>GUILD_PUBLIC_THREAD</name>
          <initializer>= 11</initializer>
          <briefdescription>
<para>a temporary sub-channel within a GUILD_TEXT channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a8af3a726df107c304139477dbfa42092a65ea2f36cb5d2cf8b9ec3ad08645d207" prot="public">
          <name>GUILD_PRIVATE_THREAD</name>
          <initializer>= 12</initializer>
          <briefdescription>
<para>a temporary sub-channel within a GUILD_TEXT channel that is only viewable by those invited and those with the MANAGE_THREADS permission </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a8af3a726df107c304139477dbfa42092a2b8e9d25634f30006f16aa879c1da627" prot="public">
          <name>GUILD_STAGE</name>
          <initializer>= 13</initializer>
          <briefdescription>
<para>a &quot;stage&quot; channel, like a voice channel with one authorised speaker </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flag integers as received from and sent to discord. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="29" column="1" bodyfile="include/dpp/channel.h" bodystart="29" bodyend="41"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a373a53f1340e01ad64bb89f82158f99b" prot="public" static="no" strong="no">
        <type></type>
        <name>channel_flags</name>
        <enumvalue id="namespacedpp_1a373a53f1340e01ad64bb89f82158f99ba0b0d31477f484ddc8b5da869e8a020bd" prot="public">
          <name>c_nsfw</name>
          <initializer>=			0b00000001</initializer>
          <briefdescription>
<para>NSFW Gated Channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a373a53f1340e01ad64bb89f82158f99ba779d9594b416bec6ebd5823d8f2e5081" prot="public">
          <name>c_text</name>
          <initializer>=			0b00000010</initializer>
          <briefdescription>
<para>Text channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a373a53f1340e01ad64bb89f82158f99ba9a43d4cf5eede8927da336fc11531826" prot="public">
          <name>c_dm</name>
          <initializer>=				0b00000100</initializer>
          <briefdescription>
<para>Direct Message. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a373a53f1340e01ad64bb89f82158f99baf3b3f12a0d3d000e030a971a9021ef9e" prot="public">
          <name>c_voice</name>
          <initializer>=			0b00001000</initializer>
          <briefdescription>
<para>Voice channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a373a53f1340e01ad64bb89f82158f99ba48c87a3615235f5b89bdf35da075ad91" prot="public">
          <name>c_group</name>
          <initializer>=			0b00010000</initializer>
          <briefdescription>
<para>Group. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a373a53f1340e01ad64bb89f82158f99ba57a07827de1901dfbd7fa964bd9cdd43" prot="public">
          <name>c_category</name>
          <initializer>=		0b00100000</initializer>
          <briefdescription>
<para>Category. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a373a53f1340e01ad64bb89f82158f99bac23ad6a6bbda0d45c5d0dd54746ef230" prot="public">
          <name>c_news</name>
          <initializer>=			0b01000000</initializer>
          <briefdescription>
<para>News channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a373a53f1340e01ad64bb89f82158f99ba6ac705dc87352c5d7d04497e9b06ae3a" prot="public">
          <name>c_store</name>
          <initializer>=			0b10000000</initializer>
          <briefdescription>
<para>Store page. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a373a53f1340e01ad64bb89f82158f99ba832adb175719706ed9ce18acbec539cc" prot="public">
          <name>c_stage</name>
          <initializer>=			0b11000000</initializer>
          <briefdescription>
<para>Stage channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a373a53f1340e01ad64bb89f82158f99ba8d925c9e629ea695ef4fa3da201bf339" prot="public">
          <name>c_news_thread</name>
          <initializer>=		0b11100000</initializer>
          <briefdescription>
<para>News thread. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a373a53f1340e01ad64bb89f82158f99ba61764be8214a7e6f22e31943630ece9a" prot="public">
          <name>c_public_thread</name>
          <initializer>= 	0b11110000</initializer>
          <briefdescription>
<para>Public thread. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a373a53f1340e01ad64bb89f82158f99baffe1298bd7ee0ace51a2416a4ae1a687" prot="public">
          <name>c_private_thread</name>
          <initializer>=	0b11111000</initializer>
          <briefdescription>
<para>Private thread. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Our flags as stored in the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="43" column="1" bodyfile="include/dpp/channel.h" bodystart="43" bodyend="68"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a1111f17373e7a972e77ffc0a6e621522" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>overwrite_type</name>
        <enumvalue id="namespacedpp_1a1111f17373e7a972e77ffc0a6e621522ab1e3ea27fc98089b63c9e89fe7c44df5" prot="public">
          <name>ot_role</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Role. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1111f17373e7a972e77ffc0a6e621522a55d9fc605a432262deb345fd89af929b" prot="public">
          <name>ot_member</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Member. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>channel permission overwrite types </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="73" column="1" bodyfile="include/dpp/channel.h" bodystart="73" bodyend="78"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864" prot="public" static="no" strong="no">
        <type></type>
        <name>parameter_type</name>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864a36958c192951cad2ae2b921de3db644a" prot="public">
          <name>pt_string</name>
          <briefdescription>
<para>String value. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864a44145f9f2768b2c9419f3e56b03691d9" prot="public">
          <name>pt_role</name>
          <briefdescription>
<para>Role object. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864a35cd631f30378b96f3ea002e74b8f026" prot="public">
          <name>pt_channel</name>
          <briefdescription>
<para>Channel object. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864a65e5825b1a709ece15c7de9dd2b21bdf" prot="public">
          <name>pt_user</name>
          <briefdescription>
<para>User object. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864a3db63d1dc9d5c994cf5258372d40b270" prot="public">
          <name>pt_integer</name>
          <briefdescription>
<para>64 bit signed integer </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864a095d2a7bbe72af8c679d3f02f4395650" prot="public">
          <name>pt_double</name>
          <briefdescription>
<para>double floating point </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864acdd3703d49822d51598fa8575ce7bbd9" prot="public">
          <name>pt_boolean</name>
          <briefdescription>
<para>boolean </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Parameter types when registering a command. We don&apos;t pass these in when triggering the command in the handler, because it is expected the developer added the command so they know what types to expect for each named parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="63" column="1" bodyfile="include/dpp/commandhandler.h" bodystart="63" bodyend="71"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a7d622bf5ff000e82a44af1a8ac794e83" prot="public" static="no" strong="no">
        <type></type>
        <name>image_type</name>
        <enumvalue id="namespacedpp_1a7d622bf5ff000e82a44af1a8ac794e83ace2c4de1f89397132561031f246f89f7" prot="public">
          <name>i_png</name>
          <briefdescription>
<para>image/png </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d622bf5ff000e82a44af1a8ac794e83a29ece0fa9be4b57cbd1a5a9213f5a930" prot="public">
          <name>i_jpg</name>
          <briefdescription>
<para>image/jpeg </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d622bf5ff000e82a44af1a8ac794e83a366092ea3e4a9f5a1c1c4962094d3b9f" prot="public">
          <name>i_gif</name>
          <briefdescription>
<para>image/gif </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Supported image types for profile pictures. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discord.h" line="52" column="1" bodyfile="include/dpp/discord.h" bodystart="52" bodyend="59"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2" prot="public" static="no" strong="no">
        <type></type>
        <name>loglevel</name>
        <enumvalue id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2aa46236c8641ec518b2a441a8d3fe8e6a" prot="public">
          <name>ll_trace</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Trace. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2a97dc4e31999535da7d8f2279d3b926e3" prot="public">
          <name>ll_debug</name>
          <briefdescription>
<para>Debug. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2a2219e945b7b3bff23816011423d2504a" prot="public">
          <name>ll_info</name>
          <briefdescription>
<para>Information. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2ad2fc6394fc5f72dce99d47d2da031658" prot="public">
          <name>ll_warning</name>
          <briefdescription>
<para>Warning. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2a1c28cc5cd17d2f6f959988ae3d54b9e7" prot="public">
          <name>ll_error</name>
          <briefdescription>
<para>Error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2aba578d32adc07ba8723784d8810cb57a" prot="public">
          <name>ll_critical</name>
          <briefdescription>
<para>Critical. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Log levels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discord.h" line="62" column="1" bodyfile="include/dpp/discord.h" bodystart="62" bodyend="75"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a79e9b19c1aa69ef048c79d37801b947c" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>emoji_flags</name>
        <enumvalue id="namespacedpp_1a79e9b19c1aa69ef048c79d37801b947cad9baba8ca224a0acb80019fcd3a9a0cb" prot="public">
          <name>e_require_colons</name>
          <initializer>= 0b00000001</initializer>
          <briefdescription>
<para>Emoji requires colons. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a79e9b19c1aa69ef048c79d37801b947caa8e9ef37a91a1bbe4012548a0fd3bd82" prot="public">
          <name>e_managed</name>
          <initializer>=        0b00000010</initializer>
          <briefdescription>
<para>Managed (introduced by application) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a79e9b19c1aa69ef048c79d37801b947ca9036ca4ebc156999b7efd35de1adb2f5" prot="public">
          <name>e_animated</name>
          <initializer>=       0b00000100</initializer>
          <briefdescription>
<para>Animated. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a79e9b19c1aa69ef048c79d37801b947ca5acfa9eb7e214d29511692811b93890d" prot="public">
          <name>e_available</name>
          <initializer>=      0b00001000</initializer>
          <briefdescription>
<para>Available (false if the guild doesn&apos;t meet boosting criteria, etc) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flags for <ref refid="classdpp_1_1emoji" kindref="compound">dpp::emoji</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/emoji.h" line="33" column="1" bodyfile="include/dpp/emoji.h" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a51891a9e382f9c396d378de00fa65099" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>region</name>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a9edcd6257d71d2339549f2a5b667a313" prot="public">
          <name>r_brazil</name>
          <briefdescription>
<para>Brazil. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099aadbae70817769d6551c51f3da468dac8" prot="public">
          <name>r_central_europe</name>
          <briefdescription>
<para>Central Europe. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099af7d0b58ca7fee21a8131b704558f7d02" prot="public">
          <name>r_hong_kong</name>
          <briefdescription>
<para>Hong Kong. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a7ad00eff38e894d72279e13b29e4ab87" prot="public">
          <name>r_india</name>
          <briefdescription>
<para>India. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099aaf3dc305ad57fce93bd2ffedfda56c9e" prot="public">
          <name>r_japan</name>
          <briefdescription>
<para>Japan. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099add96d40dff33aeaa90caa7979c469da3" prot="public">
          <name>r_russia</name>
          <briefdescription>
<para>Russia. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099aba9d0404b39ea6672b3bcf52feae17b1" prot="public">
          <name>r_singapore</name>
          <briefdescription>
<para>Singapore. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099aa9cf62c258d60209c8cded95f3bdda5f" prot="public">
          <name>r_south_africa</name>
          <briefdescription>
<para>South Africa. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a1497e7d00b13f4eec2dd1556af760885" prot="public">
          <name>r_sydney</name>
          <briefdescription>
<para>Sydney. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099aefde0f307a19a2ca2b3091099c962131" prot="public">
          <name>r_us_central</name>
          <briefdescription>
<para>US Central. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a64b0c58ed6fc338811fa50e4001c739b" prot="public">
          <name>r_us_east</name>
          <briefdescription>
<para>US East Coast. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a406609dc4e2712b0abc9ca72bf57e390" prot="public">
          <name>r_us_south</name>
          <briefdescription>
<para>US South. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a6c27cbd85161eb3666d8f136391a5f58" prot="public">
          <name>r_us_west</name>
          <briefdescription>
<para>US West Coast. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a8d6403af9f4d5b0b849c3f883d0e49e8" prot="public">
          <name>r_western_europe</name>
          <briefdescription>
<para>Western Europe. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents voice regions for guilds and channels. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Largely deprecated in favour of per-channel regions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="35" column="1" bodyfile="include/dpp/guild.h" bodystart="35" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602f" prot="public" static="no" strong="no">
        <type></type>
        <name>guild_flags</name>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fad6705273a057a9c7f7032a22f29e538b" prot="public">
          <name>g_large</name>
          <initializer>=				0b000000000000000000001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Large guild </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fa6f5a2b3aa3e079cd62bb3ad595f04359" prot="public">
          <name>g_unavailable</name>
          <initializer>= 			0b000000000000000000010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unavailable guild (inaccessible due to an outage) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fa95bab65c1394b0a2cbd23083a788be5c" prot="public">
          <name>g_widget_enabled</name>
          <initializer>=			0b000000000000000000100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has widget enabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fa08b2f4c963b17f60801f9a2deb17ccd7" prot="public">
          <name>g_invite_splash</name>
          <initializer>=			0b000000000000000001000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild can have an invite splash image </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fa5b7123fe609093340a16c80264d09172" prot="public">
          <name>g_vip_regions</name>
          <initializer>=				0b000000000000000010000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild can have VIP regions </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602faf7bd4841ddff627c7aa89d2fb714a0fa" prot="public">
          <name>g_vanity_url</name>
          <initializer>=				0b000000000000000100000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild can have a vanity url </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fad0048575cf495f4069fbe6d885da6c25" prot="public">
          <name>g_verified</name>
          <initializer>=				0b000000000000001000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild is verified </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fa2475366e2137c374d70e109a4f558e67" prot="public">
          <name>g_partnered</name>
          <initializer>=				0b000000000000010000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild is partnered </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fa07826673632e29a3f19ffb92f92de6b2" prot="public">
          <name>g_community</name>
          <initializer>=				0b000000000000100000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Community features enabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fa857663f1db666045ea04595a6168e02f" prot="public">
          <name>g_commerce</name>
          <initializer>=				0b000000000001000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has commerce features enabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602faeee130a9c893f8b40a40032cb1e103dd" prot="public">
          <name>g_news</name>
          <initializer>=				0b000000000010000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has news features enabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fabc22c6fe89086b9a5e99134118d675af" prot="public">
          <name>g_discoverable</name>
          <initializer>=			0b000000000100000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild is discoverable in discovery </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fa1ac4e8b1bf2d97e934def6e656b6853b" prot="public">
          <name>g_featureable</name>
          <initializer>=				0b000000001000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild is featureable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fa41116ed045326dcffe6c89f69b8a16b4" prot="public">
          <name>g_animated_icon</name>
          <initializer>=			0b000000010000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild can have an animated icon (doesn&apos;t mean it actually has one though) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fa2f620e3b0ccaf4c4e55fb83393f77ad6" prot="public">
          <name>g_banner</name>
          <initializer>=				0b000000100000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild can have a banner image </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602fa395413623895eaac5998ae8b4dc2031f" prot="public">
          <name>g_welcome_screen_enabled</name>
          <initializer>=		0b000001000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has a welcome screen </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602faa013ed7a6d95dfe09ef48449204ee72d" prot="public">
          <name>g_member_verification_gate</name>
          <initializer>=		0b000010000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has a member verification gate </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602faf3dd4637ed204605d0271d128ada7db8" prot="public">
          <name>g_preview_enabled</name>
          <initializer>=			0b000100000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has a preview </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602faccb9055123427741b9d4b08c0f0342c8" prot="public">
          <name>g_no_join_notifications</name>
          <initializer>=		0b001000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild join notifications are off </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602faeed2962f0767222fb28a046ee64fffaf" prot="public">
          <name>g_no_boost_notifications</name>
          <initializer>=		0b010000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild boost notifications are off </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a94aba4d1f2669c7da3b676859d54602faf86b8a8efaa0bd140bcf714d4a59f7c0" prot="public">
          <name>g_has_animated_icon</name>
          <initializer>=			0b100000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has an actual animated icon (set by the icon hash starting with &apos;a_&apos;) </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The various flags that represent the status of a <ref refid="classdpp_1_1guild" kindref="compound">dpp::guild</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="55" column="1" bodyfile="include/dpp/guild.h" bodystart="55" bodyend="98"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a7e036e9909741e00af34e2505117218d" prot="public" static="no" strong="no">
        <type></type>
        <name>guild_member_flags</name>
        <enumvalue id="namespacedpp_1a7e036e9909741e00af34e2505117218da966c5f8d7bd60e0daf9ceaafb556b4c4" prot="public">
          <name>gm_deaf</name>
          <initializer>=		0b00001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Member deafened </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7e036e9909741e00af34e2505117218da557d08c731cb82cfd66915aaa0466a2f" prot="public">
          <name>gm_mute</name>
          <initializer>=		0b00010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Member muted </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7e036e9909741e00af34e2505117218da0c44c916411b26b1b0a3b5288c346a41" prot="public">
          <name>gm_pending</name>
          <initializer>=		0b00100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Member pending verification by membership screening </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Various flags that can be used to indicate the status of a guild member. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="103" column="1" bodyfile="include/dpp/guild.h" bodystart="103" bodyend="110"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ae1540b4171f114c35864c752ef00f94f" prot="public" static="no" strong="no">
        <type></type>
        <name>integration_type</name>
        <enumvalue id="namespacedpp_1ae1540b4171f114c35864c752ef00f94faddc9e2ea6cfa8e6a5163742056a7ccdf" prot="public">
          <name>i_twitch</name>
          <briefdescription>
<para>Twitch integration. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae1540b4171f114c35864c752ef00f94fa899faa63fdc7c1fc7f44b64c926b5f40" prot="public">
          <name>i_youtube</name>
          <briefdescription>
<para>YouTube integration. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae1540b4171f114c35864c752ef00f94fab9837432650669ee78368c2ef5d45ffe" prot="public">
          <name>i_discord</name>
          <briefdescription>
<para>Discord integration. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Integration types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/integration.h" line="30" column="1" bodyfile="include/dpp/integration.h" bodystart="30" bodyend="37"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a5ca6af921218321ff8f2f8640f5b2dd0" prot="public" static="no" strong="no">
        <type></type>
        <name>integration_flags</name>
        <enumvalue id="namespacedpp_1a5ca6af921218321ff8f2f8640f5b2dd0aea01d18af1995c14b8f93a1def0c5187" prot="public">
          <name>if_enabled</name>
          <initializer>=     0b00000001</initializer>
          <briefdescription>
<para>Integration enabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a5ca6af921218321ff8f2f8640f5b2dd0af10c00f79febd6633620cc60ff214e11" prot="public">
          <name>if_syncing</name>
          <initializer>=     0b00000010</initializer>
          <briefdescription>
<para>Integration synching. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a5ca6af921218321ff8f2f8640f5b2dd0ac954473822136b410364f0e57b2f317f" prot="public">
          <name>if_emoticons</name>
          <initializer>=   0b00000100</initializer>
          <briefdescription>
<para>Emoji integration. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a5ca6af921218321ff8f2f8640f5b2dd0a29bde3bb98405da55ed02463ca320ef1" prot="public">
          <name>if_revoked</name>
          <initializer>=     0b00001000</initializer>
          <briefdescription>
<para>Integration revoked. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a5ca6af921218321ff8f2f8640f5b2dd0a8fa6e6961f9500c23086730960c35bad" prot="public">
          <name>if_expire_kick</name>
          <initializer>= 0b00010000</initializer>
          <briefdescription>
<para>Kick users when their subscription expires. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Integration flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/integration.h" line="42" column="1" bodyfile="include/dpp/integration.h" bodystart="42" bodyend="53"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5" prot="public" static="no" strong="no">
        <type></type>
        <name>intents</name>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5afdc0ced010f66a5c3a0c818ec5975359" prot="public">
          <name>i_guilds</name>
          <initializer>= (1 &lt;&lt; 0)</initializer>
          <briefdescription>
<para>Intent for receipt of guild information. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a414f0f169996a09f8fd1d423517dc0d0" prot="public">
          <name>i_guild_members</name>
          <initializer>= (1 &lt;&lt; 1)</initializer>
          <briefdescription>
<para>Intent for receipt of guild members. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a4278f54e9f1f408d43be33f7e0beac88" prot="public">
          <name>i_guild_bans</name>
          <initializer>= (1 &lt;&lt; 2)</initializer>
          <briefdescription>
<para>Intent for receipt of guild bans. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a8a963949d11ec8aeeac38ce96b47bdc0" prot="public">
          <name>i_guild_emojis</name>
          <initializer>= (1 &lt;&lt; 3)</initializer>
          <briefdescription>
<para>Intent for receipt of guild emojis. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a944508be9b272a33b626da260026bf83" prot="public">
          <name>i_guild_integrations</name>
          <initializer>= (1 &lt;&lt; 4)</initializer>
          <briefdescription>
<para>Intent for receipt of guild integrations. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5afa12813bc586d75c467a64a8ec793531" prot="public">
          <name>i_guild_webhooks</name>
          <initializer>= (1 &lt;&lt; 5)</initializer>
          <briefdescription>
<para>Intent for receipt of guild webhooks. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a311a6b6f7fc320d4c03ae72a851dce5c" prot="public">
          <name>i_guild_invites</name>
          <initializer>= (1 &lt;&lt; 6)</initializer>
          <briefdescription>
<para>Intent for receipt of guild invites. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a39ad4150b19142aad7ff4867e9ec9b69" prot="public">
          <name>i_guild_voice_states</name>
          <initializer>= (1 &lt;&lt; 7)</initializer>
          <briefdescription>
<para>Intent for receipt of guild voice states. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5af9f6255c96ad6a0e5a9e9af5eff1eaf9" prot="public">
          <name>i_guild_presences</name>
          <initializer>= (1 &lt;&lt; 8)</initializer>
          <briefdescription>
<para>Intent for receipt of guild presences. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a74dfa109a39b058dc814bed431911dcc" prot="public">
          <name>i_guild_messages</name>
          <initializer>= (1 &lt;&lt; 9)</initializer>
          <briefdescription>
<para>Intent for receipt of guild messages. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a86d9d5b3a2c86a240cdbd69e75f4b20b" prot="public">
          <name>i_guild_message_reactions</name>
          <initializer>= (1 &lt;&lt; 10)</initializer>
          <briefdescription>
<para>Intent for receipt of guild message reactions. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a9579627c0ed873d9f5c832e724af8482" prot="public">
          <name>i_guild_message_typing</name>
          <initializer>= (1 &lt;&lt; 11)</initializer>
          <briefdescription>
<para>Intent for receipt of guild message typing notifications. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5aaed663fb83df98a3b2797dbdffa1eec3" prot="public">
          <name>i_direct_messages</name>
          <initializer>= (1 &lt;&lt; 12)</initializer>
          <briefdescription>
<para>Intent for receipt of direct messages (DMs) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a5cdd239960ca917f44bab7be89625ae6" prot="public">
          <name>i_direct_message_reactions</name>
          <initializer>= (1 &lt;&lt; 13)</initializer>
          <briefdescription>
<para>Intent for receipt of direct message reactions. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a8a5fced64cc944ced2e4c69b877c45bf" prot="public">
          <name>i_direct_message_typing</name>
          <initializer>= (1 &lt;&lt; 14)</initializer>
          <briefdescription>
<para>Intent for receipt of direct message typing notifications. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a561a52b3c6883808735c41891351c68f" prot="public">
          <name>i_default_intents</name>
          <initializer>= dpp::i_guilds | dpp::i_guild_bans | dpp::i_guild_emojis | dpp::i_guild_integrations | dpp::i_guild_webhooks | dpp::i_guild_invites | dpp::i_guild_voice_states | dpp::i_guild_messages | dpp::i_guild_message_reactions | dpp::i_guild_message_typing | dpp::i_direct_messages | dpp::i_direct_message_typing | dpp::i_direct_message_reactions</initializer>
          <briefdescription>
<para>Default D++ intents (all non-privileged intents) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5ad4af85bb8ca011125370342f0961bf05" prot="public">
          <name>i_privileged_intents</name>
          <initializer>= dpp::i_guild_members | dpp::i_guild_presences</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a76061cf60f9d06cf58ca38ddee1b825d" prot="public">
          <name>i_all_intents</name>
          <initializer>= dpp::i_default_intents | dpp::i_privileged_intents</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>intents are a bitmask of allowed events on your websocket. </para>
        </briefdescription>
        <detaileddescription>
<para>Some of these are known as Privileged intents (GUILD_MEMBERS and GUILD_PRESENCES) and require verification of a bot over 100 servers by discord via submission of your real life ID. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/intents.h" line="32" column="1" bodyfile="include/dpp/intents.h" bodystart="32" bodyend="69"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1afce43206033521b990e3a72bb87481b7" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>component_type</name>
        <enumvalue id="namespacedpp_1afce43206033521b990e3a72bb87481b7afd32ce8be4a99a9d84fb4815370a0bf8" prot="public">
          <name>cot_action_row</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Action row, a container for other components. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1afce43206033521b990e3a72bb87481b7a98228836af5d0c180cfc05eb1f0bfde9" prot="public">
          <name>cot_button</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Clickable button. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1afce43206033521b990e3a72bb87481b7a952fb985d83755e2b9a415814c9edd8f" prot="public">
          <name>cot_selectmenu</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Select menu. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents the type of a component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="32" column="1" bodyfile="include/dpp/message.h" bodystart="32" bodyend="39"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>component_style</name>
        <enumvalue id="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5ad29e42f919f0ba23aff73e3ea6ac1f5c" prot="public">
          <name>cos_primary</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Blurple. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5aab0deba2352e4cf8e36af9389dfef612" prot="public">
          <name>cos_secondary</name>
          <briefdescription>
<para>Grey. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5a3f0379def90d866804bfd164944ff300" prot="public">
          <name>cos_success</name>
          <briefdescription>
<para>Green. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5aa62ddfb05e437c4d4bf7a3ef1b73752b" prot="public">
          <name>cos_danger</name>
          <briefdescription>
<para>Red. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5a96d13813649e792fc6d88d29b70202d6" prot="public">
          <name>cos_link</name>
          <briefdescription>
<para>An external hyperlink to a website. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents the style of a button. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="44" column="1" bodyfile="include/dpp/message.h" bodystart="44" bodyend="55"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a1e48af4f3b8fd3f07ea0c2c55de99bff" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>sticker_type</name>
        <enumvalue id="namespacedpp_1a1e48af4f3b8fd3f07ea0c2c55de99bffa8c6ea2a04a08ddefbb5af1d65fd522ca" prot="public">
          <name>st_standard</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Nitro pack sticker. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1e48af4f3b8fd3f07ea0c2c55de99bffab02bd29c3f40a3228fd1630d34882ede" prot="public">
          <name>st_guild</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Guild sticker. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="587" column="1" bodyfile="include/dpp/message.h" bodystart="587" bodyend="592"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ae2ee458707682eabe7d539c9a13beac2" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>sticker_format</name>
        <enumvalue id="namespacedpp_1ae2ee458707682eabe7d539c9a13beac2ad24e2db4ccb23d8fcedc1f5be8458484" prot="public">
          <name>sf_png</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae2ee458707682eabe7d539c9a13beac2abbf65271f1c4d1763e3edb1e803731d2" prot="public">
          <name>sf_apng</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae2ee458707682eabe7d539c9a13beac2a8d051716ffa935c99a5cf54c77a815b5" prot="public">
          <name>sf_lottie</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The file format (png, apng, lottie) of a sticker. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="597" column="1" bodyfile="include/dpp/message.h" bodystart="597" bodyend="601"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a0157b2de9cc3cf2f819b8e4d969f84a8" prot="public" static="no" strong="no">
        <type></type>
        <name>message_flags</name>
        <enumvalue id="namespacedpp_1a0157b2de9cc3cf2f819b8e4d969f84a8aab96a9099e9e1de98d2e0270dae49851" prot="public">
          <name>m_crossposted</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
<para>this message has been published to subscribed channels (via Channel Following) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0157b2de9cc3cf2f819b8e4d969f84a8ac60e9e9a6e22730c20443715ab88c04d" prot="public">
          <name>m_is_crosspost</name>
          <initializer>=  1 &lt;&lt; 1</initializer>
          <briefdescription>
<para>this message originated from a message in another channel (via Channel Following) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0157b2de9cc3cf2f819b8e4d969f84a8a3146754ba261ee065671c1e6876e1d01" prot="public">
          <name>m_suppress_embeds</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
<para>do not include any embeds when serializing this message </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0157b2de9cc3cf2f819b8e4d969f84a8ad4f634843bd43c8f59a78cbea112024d" prot="public">
          <name>m_source_message_deleted</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
<para>the source message for this crosspost has been deleted (via Channel Following) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0157b2de9cc3cf2f819b8e4d969f84a8aa36edb052b986802f865dc32fe8e1ff7" prot="public">
          <name>m_urgent</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
<para>this message came from the urgent message system </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0157b2de9cc3cf2f819b8e4d969f84a8a61709e40d160eb84fbd38ea63c01d4c1" prot="public">
          <name>m_has_thread</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
<para>this message has an associated thread, with the same id as the message </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0157b2de9cc3cf2f819b8e4d969f84a8a31f151a1f4b4763df16059ff4d88aeaf" prot="public">
          <name>m_ephemeral</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
<para>this message is only visible to the user who invoked the Interaction </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0157b2de9cc3cf2f819b8e4d969f84a8a347b30bfa696feef3b8948a5ea20127e" prot="public">
          <name>m_loading</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
<para>this message is an Interaction Response and the bot is &quot;thinking&quot; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Bitmask flags for a <ref refid="structdpp_1_1message" kindref="compound">dpp::message</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="718" column="1" bodyfile="include/dpp/message.h" bodystart="718" bodyend="735"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bc" prot="public" static="no" strong="no">
        <type></type>
        <name>message_type</name>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcac7573c73d464b30ffd2fee74f8618152" prot="public">
          <name>mt_default</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Default. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcae8c521e0821e3ce39219566726f46df3" prot="public">
          <name>mt_recipient_add</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Add recipient. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca2e93d061d961d64a50310ac4e5444c3b" prot="public">
          <name>mt_recipient_remove</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Remove recipient. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcab3bbd4be55810d639b4e46061a882203" prot="public">
          <name>mt_call</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Call. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcaeeb2b80decc86e5eb2060af5ac91b1d2" prot="public">
          <name>mt_channel_name_change</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Channel name change. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcab19bff5918591d0230159889a7b25b95" prot="public">
          <name>mt_channel_icon_change</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>Channel icon change. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca57b369b4b6b01c8061dad83b9e5eae9b" prot="public">
          <name>mt_channel_pinned_message</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>Message pinned. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca3dbb35e6017af75be21cd1e1eac708cc" prot="public">
          <name>mt_guild_member_join</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>Member joined. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcabac2f050715993fd79a820d2e04c8572" prot="public">
          <name>mt_user_premium_guild_subscription</name>
          <initializer>= 8</initializer>
          <briefdescription>
<para>Boost. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcacf707cbe6c016d2661c0375bb021c554" prot="public">
          <name>mt_user_premium_guild_subscription_tier_1</name>
          <initializer>= 9</initializer>
          <briefdescription>
<para>Boost level 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca1efe7500d0c09339b36e12249bd94b25" prot="public">
          <name>mt_user_premium_guild_subscription_tier_2</name>
          <initializer>= 10</initializer>
          <briefdescription>
<para>Boost level 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca01435a57a373ce70598dabdb6d330787" prot="public">
          <name>mt_user_premium_guild_subscription_tier_3</name>
          <initializer>= 11</initializer>
          <briefdescription>
<para>Boost level 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca45207c1afef758448fbc0b3c9a1830c6" prot="public">
          <name>mt_channel_follow_add</name>
          <initializer>= 12</initializer>
          <briefdescription>
<para>Follow channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca19a3b8cfddfc3dadbe11bb403b53f9ad" prot="public">
          <name>mt_guild_discovery_disqualified</name>
          <initializer>= 14</initializer>
          <briefdescription>
<para>Disqualified from discovery. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca0761b0d92c9f4c6d5fda7ac47cb7e596" prot="public">
          <name>mt_guild_discovery_requalified</name>
          <initializer>= 15</initializer>
          <briefdescription>
<para>Re-qualified for discovery. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcad8660ef6201f4b777a7f5f40216cf3aa" prot="public">
          <name>mt_guild_discovery_grace_period_initial_warning</name>
          <initializer>= 16</initializer>
          <briefdescription>
<para>Discovery grace period warning 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcadd602178260b393c54fd8a509b05c0cc" prot="public">
          <name>mt_guild_discovery_grace_period_final_warning</name>
          <initializer>= 17</initializer>
          <briefdescription>
<para>Discovery grace period warning 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca08b27991fef9b0c79308f33f29cffc88" prot="public">
          <name>mt_thread_created</name>
          <initializer>= 18</initializer>
          <briefdescription>
<para>Thread Created. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca13c1c1a4ead0ba6bfaca3c8e0fa53c7c" prot="public">
          <name>mt_reply</name>
          <initializer>= 19</initializer>
          <briefdescription>
<para>Reply. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcac0bfbd92c02b3e5e0a74f2b949c321fa" prot="public">
          <name>mt_application_command</name>
          <initializer>= 20</initializer>
          <briefdescription>
<para>Application command. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcaca707ebc93c56257189a2d10ae6f550f" prot="public">
          <name>mt_thread_starter_message</name>
          <initializer>= 21</initializer>
          <briefdescription>
<para>Thread starter message. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca316506608264a2b1546fd7b71c82748a" prot="public">
          <name>mt_guild_invite_reminder</name>
          <initializer>= 22</initializer>
          <briefdescription>
<para>Invite reminder. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca79aa113309ce945bd954058449e0f9fe" prot="public">
          <name>mt_context_menu_command</name>
          <initializer>= 23</initializer>
          <briefdescription>
<para>Context Menu Command. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Message types for <ref refid="structdpp_1_1message_1a2ed7eaf6f5ff69a94fcb4912c0c795c2" kindref="member">dpp::message::type</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="740" column="1" bodyfile="include/dpp/message.h" bodystart="740" bodyend="787"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52" prot="public" static="no" strong="no">
        <type></type>
        <name>cache_policy_setting_t</name>
        <enumvalue id="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" prot="public">
          <name>cp_aggressive</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>request aggressively on seeing new guilds, and also store missing data from messages. This is the default behaviour. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a055c40e9038f2345a5c1fb9a3d3d648c" prot="public">
          <name>cp_lazy</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>only cache when there is relavent activity, e.g. a message to the bot. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a68e2695356af38492410341873083c49" prot="public">
          <name>cp_none</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Don&apos;t cache anything. Fill details when we see them. (NOT IMPLEMENTED YET) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="789" column="1" bodyfile="include/dpp/message.h" bodystart="789" bodyend="804"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a953f1484a5140481ffab2b248618fb22" prot="public" static="no" strong="no">
        <type></type>
        <name>presence_flags</name>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22adbf7e907b0a558eafd5b8ecffa3923e0" prot="public">
          <name>p_desktop_online</name>
          <initializer>=	0b00000001</initializer>
          <briefdescription>
<para>Desktop: Online. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a515104603cf3e7d2836adf89eb2750e4" prot="public">
          <name>p_desktop_dnd</name>
          <initializer>=	0b00000010</initializer>
          <briefdescription>
<para>Desktop: DND. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a3ccbab447e338b7a46ecd9db69b9d374" prot="public">
          <name>p_desktop_idle</name>
          <initializer>=	0b00000011</initializer>
          <briefdescription>
<para>Desktop: Idle. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a1437c438cda97544bf7e2c12a06b1318" prot="public">
          <name>p_web_online</name>
          <initializer>=	0b00000100</initializer>
          <briefdescription>
<para>Web: Online. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a1d11dc77b54029a94e688698a7558786" prot="public">
          <name>p_web_dnd</name>
          <initializer>=	0b00001000</initializer>
          <briefdescription>
<para>Web: DND. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22adfd8c10b3d77722f0c6f563d692af8e3" prot="public">
          <name>p_web_idle</name>
          <initializer>=	0b00001100</initializer>
          <briefdescription>
<para>Web: Idle. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a60ba15ed9d7c31d172c73e6778ee46a6" prot="public">
          <name>p_mobile_online</name>
          <initializer>=	0b00010000</initializer>
          <briefdescription>
<para>Mobile: Online. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a56dae97b472d8e7264dea40b53b63fea" prot="public">
          <name>p_mobile_dnd</name>
          <initializer>=	0b00100000</initializer>
          <briefdescription>
<para>Mobile: DND. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a6fa8a493066cec741a1f11c3e2be6a65" prot="public">
          <name>p_mobile_idle</name>
          <initializer>=	0b00110000</initializer>
          <briefdescription>
<para>Mobile: Idle. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22aa789fd49e04b32c45df1d7c1ddefbcdf" prot="public">
          <name>p_status_online</name>
          <initializer>=	0b01000000</initializer>
          <briefdescription>
<para>General: Online. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a0764ea77fe1b19eebe243ffa50455517" prot="public">
          <name>p_status_dnd</name>
          <initializer>=	0b10000000</initializer>
          <briefdescription>
<para>General: DND. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22abc482a9a0da8d6aa4542224637426864" prot="public">
          <name>p_status_idle</name>
          <initializer>=	0b11000000</initializer>
          <briefdescription>
<para>General: Idle. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Presence flags bitmask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="31" column="1" bodyfile="include/dpp/presence.h" bodystart="31" bodyend="56"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a172aa830689e55f4bba337de1592db96" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>presence_status</name>
        <enumvalue id="namespacedpp_1a172aa830689e55f4bba337de1592db96a8d6db63cf4c29add56dbc76d58ea1677" prot="public">
          <name>ps_offline</name>
          <initializer>=	0</initializer>
          <briefdescription>
<para>Offline. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a172aa830689e55f4bba337de1592db96ae068013241cf08d0f4dbdd161e89aa2e" prot="public">
          <name>ps_online</name>
          <initializer>=	1</initializer>
          <briefdescription>
<para>Online. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a172aa830689e55f4bba337de1592db96a611b4149b435ab53bcba953a7818a760" prot="public">
          <name>ps_dnd</name>
          <initializer>=	2</initializer>
          <briefdescription>
<para>DND. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a172aa830689e55f4bba337de1592db96ac85606cb4be43da0a426d80f6ad2c90f" prot="public">
          <name>ps_idle</name>
          <initializer>=	3</initializer>
          <briefdescription>
<para>Idle. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Online presence status values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="61" column="1" bodyfile="include/dpp/presence.h" bodystart="61" bodyend="70"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>activity_type</name>
        <enumvalue id="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2a509e5165f7314a42b403fb97e796b701" prot="public">
          <name>at_game</name>
          <initializer>=	0</initializer>
          <briefdescription>
<para>&quot;Playing ...&quot; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2a2f8895bec6d58b1319a41255239d0918" prot="public">
          <name>at_streaming</name>
          <initializer>=	1</initializer>
          <briefdescription>
<para>&quot;Streaming ...&quot; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2a5fac5ede10ce3d8f563ddfa571367ae6" prot="public">
          <name>at_listening</name>
          <initializer>=	2</initializer>
          <briefdescription>
<para>&quot;Listening to...&quot; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2ad2f4a7cb64b961f30a1f98eb60b00400" prot="public">
          <name>at_custom</name>
          <initializer>=	3</initializer>
          <briefdescription>
<para>&quot;Watching...&quot; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2a093f8e827c5107ecc2cabe0647233d72" prot="public">
          <name>at_competing</name>
          <initializer>=	4</initializer>
          <briefdescription>
<para>&quot;Competing in...&quot; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Game types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="96" column="1" bodyfile="include/dpp/presence.h" bodystart="96" bodyend="107"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4d" prot="public" static="no" strong="no">
        <type></type>
        <name>activity_flags</name>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4da1ed1f728ed51babc825103062bf1b077" prot="public">
          <name>af_instance</name>
          <initializer>= 0b00000001</initializer>
          <briefdescription>
<para>In an instance. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4da9b8df9967d669188c072acbea0da5236" prot="public">
          <name>af_join</name>
          <initializer>= 0b00000010</initializer>
          <briefdescription>
<para>Joining. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4da6641e2affb027ec2ee799a06b388a2cd" prot="public">
          <name>af_spectate</name>
          <initializer>= 0b00000100</initializer>
          <briefdescription>
<para>Spectating. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4da0b89df17cf5e4e0632002adaeb9a6195" prot="public">
          <name>af_join_request</name>
          <initializer>= 0b00001000</initializer>
          <briefdescription>
<para>Sending join request. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4dab869609c55109a542a9505cc75f2d93f" prot="public">
          <name>af_sync</name>
          <initializer>= 0b00010000</initializer>
          <briefdescription>
<para>Synchronising. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4da0b2e1dc7c3c4dddcf91e1ded344a7119" prot="public">
          <name>af_play</name>
          <initializer>= 0b00100000</initializer>
          <briefdescription>
<para>Playing. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Activity types for rich presence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="112" column="1" bodyfile="include/dpp/presence.h" bodystart="112" bodyend="125"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ae525add0ec39d647375aabe5ce455449" prot="public" static="no" strong="no">
        <type></type>
        <name>http_error</name>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449ab072c2cf95f4a567183c1d9fb0e6f3da" prot="public">
          <name>h_success</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Request successful. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449ac4bebebf31327d34b0cef9846cf57d26" prot="public">
          <name>h_unknown</name>
          <briefdescription>
<para>Status unknown. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449a2733f3556e92a1cf264f17064ffe8fba" prot="public">
          <name>h_connection</name>
          <briefdescription>
<para>Connect failed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449abfaba5457d3e065a9cb76a6b8a606c15" prot="public">
          <name>h_bind_ip_address</name>
          <briefdescription>
<para>Invalid local ip address. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449a1d3eaa9c4c535305b27f31cca5658e84" prot="public">
          <name>h_read</name>
          <briefdescription>
<para>Read error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449aa6d32000fe1b31898ed22b07cb59fd4f" prot="public">
          <name>h_write</name>
          <briefdescription>
<para>Write error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449a156ae0ec15a21a9dc9e441a88fcd27df" prot="public">
          <name>h_exceed_redirect_count</name>
          <briefdescription>
<para>Too many 30x redirects. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449a0d1c6efb2738ae30a285d275d4a8c344" prot="public">
          <name>h_canceled</name>
          <briefdescription>
<para>Request cancelled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449abc69e4c147eb8f8329c3a56fd366111a" prot="public">
          <name>h_ssl_connection</name>
          <briefdescription>
<para>SSL connection error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449adebed5c3ac6b8afa99546334cfb32090" prot="public">
          <name>h_ssl_loading_certs</name>
          <briefdescription>
<para>SSL cert loading error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449a87de6a04c8faa6470259fad90d64125d" prot="public">
          <name>h_ssl_server_verification</name>
          <briefdescription>
<para>SSL server verification error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449ab64dc04f299fcfd9b1f4750908eb0a2e" prot="public">
          <name>h_unsupported_multipart_boundary_chars</name>
          <briefdescription>
<para>Unsupported multipart boundary characters. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449a65bb2cb9582bd3e13fc7704e36a5bf54" prot="public">
          <name>h_compression</name>
          <briefdescription>
<para>Compression error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error values. Don&apos;t change the order or add extra values here, as they map onto the error values of cpp-httplib </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/queues.h" line="40" column="1" bodyfile="include/dpp/queues.h" bodystart="40" bodyend="67"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88" prot="public" static="no" strong="no">
        <type></type>
        <name>http_method</name>
        <enumvalue id="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88a1c5397a2ab65a9b09e466d3e7cf5a82e" prot="public">
          <name>m_get</name>
          <briefdescription>
<para>GET. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88afc49711c29fdc4f00456e06562c9168e" prot="public">
          <name>m_post</name>
          <briefdescription>
<para>POST. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88aaaa5f54e87d3160af88f2bc295b77fb8" prot="public">
          <name>m_put</name>
          <briefdescription>
<para>PUT. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88ace6f9be8a174be8101dc04681777a09a" prot="public">
          <name>m_patch</name>
          <briefdescription>
<para>PATCH. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88a73688ae9310f5f6b452d1e5e0a09319f" prot="public">
          <name>m_delete</name>
          <briefdescription>
<para>DELETE. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Various types of http method supported by the Discord API </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/queues.h" line="108" column="1" bodyfile="include/dpp/queues.h" bodystart="108" bodyend="119"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1af803e69eddf23c5862947295f3df5d53" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>role_flags</name>
        <enumvalue id="namespacedpp_1af803e69eddf23c5862947295f3df5d53a28bd72d5ab200ddcdadd9759c84f2c2e" prot="public">
          <name>r_hoist</name>
          <initializer>=		0b00000001</initializer>
          <briefdescription>
<para>Hoisted role. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af803e69eddf23c5862947295f3df5d53aed8ce041eb7cb3a5cf913de8efbbddc6" prot="public">
          <name>r_managed</name>
          <initializer>=		0b00000010</initializer>
          <briefdescription>
<para>Managed role (introduced by a bot or application) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af803e69eddf23c5862947295f3df5d53a50fbd694d79806b3b099b76c36765b26" prot="public">
          <name>r_mentionable</name>
          <initializer>=		0b00000100</initializer>
          <briefdescription>
<para>Mentionable with a ping. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af803e69eddf23c5862947295f3df5d53a3db26ad1126a3dda385d750b0da11026" prot="public">
          <name>r_premium_subscriber</name>
          <initializer>=	0b00001000</initializer>
          <briefdescription>
<para>This is set for the role given to nitro. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Various flags related to <ref refid="classdpp_1_1role" kindref="compound">dpp::role</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/role.h" line="28" column="1" bodyfile="include/dpp/role.h" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604f" prot="public" static="no" strong="no">
        <type>uint64_t</type>
        <name>role_permissions</name>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa6a410bc90243712cf71cb8c39a11ebab" prot="public">
          <name>p_create_instant_invite</name>
          <initializer>=	0x00000001</initializer>
          <briefdescription>
<para>allows creationboosters of instant invites </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fae57cb8bf1870f74f2820f84255ca8104" prot="public">
          <name>p_kick_members</name>
          <initializer>=	0x00000002</initializer>
          <briefdescription>
<para>allows kicking members </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa6c9849fc7380edaf4ab8f169c2f4cc82" prot="public">
          <name>p_ban_members</name>
          <initializer>=	0x00000004</initializer>
          <briefdescription>
<para>allows banning members </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa43f62c967b9b16b49c315a0b23f86039" prot="public">
          <name>p_administrator</name>
          <initializer>=	0x00000008</initializer>
          <briefdescription>
<para>allows all permissions and bypasses channel permission overwrites </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fadc5505422542cd70bc9b77d8ac672fbc" prot="public">
          <name>p_manage_channels</name>
          <initializer>=	0x00000010</initializer>
          <briefdescription>
<para>allows management and editing of channels </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa18b5244cfb592afca2659104e694aff4" prot="public">
          <name>p_manage_guild</name>
          <initializer>=	0x00000020</initializer>
          <briefdescription>
<para>allows management and editing of the guild </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604faef865fd4526947d2c9195386769a021c" prot="public">
          <name>p_add_reactions</name>
          <initializer>=	0x00000040</initializer>
          <briefdescription>
<para>allows for the addition of reactions to messages </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa1491e4917cb525e97df238b995cd57fc" prot="public">
          <name>p_view_audit_log</name>
          <initializer>=	0x00000080</initializer>
          <briefdescription>
<para>allows for viewing of audit logs </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604faff4b56b63ea738a7e62b3f7372662ff9" prot="public">
          <name>p_priority_speaker</name>
          <initializer>=	0x00000100</initializer>
          <briefdescription>
<para>allows for using priority speaker in a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fafc77a3132f5a3f615ada9a19c486dec9" prot="public">
          <name>p_stream</name>
          <initializer>=	0x00000200</initializer>
          <briefdescription>
<para>allows the user to go live </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa5ca9e89b32af806f7c0c179c3bdfb1ad" prot="public">
          <name>p_view_channel</name>
          <initializer>=	0x00000400</initializer>
          <briefdescription>
<para>allows guild members to view a channel, which includes reading messages in text channels </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fad410586df8dba6f62b7770f1d08d3b79" prot="public">
          <name>p_send_messages</name>
          <initializer>=	0x00000800</initializer>
          <briefdescription>
<para>allows for sending messages in a channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa3d621da851d24381179506bef573fae6" prot="public">
          <name>p_send_tts_messages</name>
          <initializer>=	0x00001000</initializer>
          <briefdescription>
<para>allows for sending of /tts messages </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604faefd6d8454b40cdaa9c01a86038559988" prot="public">
          <name>p_manage_messages</name>
          <initializer>=	0x00002000</initializer>
          <briefdescription>
<para>allows for deletion of other users messages </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa1298ec58bdd34875c6ce723109637cf8" prot="public">
          <name>p_embed_links</name>
          <initializer>=	0x00004000</initializer>
          <briefdescription>
<para>links sent by users with this permission will be auto-embedded </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604faf68496d326e48c4e8fb8396b56711650" prot="public">
          <name>p_attach_files</name>
          <initializer>=	0x0000008000</initializer>
          <briefdescription>
<para>allows for uploading images and files </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa808dee0401adefdb0ffcd0b5364f8369" prot="public">
          <name>p_read_message_history</name>
          <initializer>=	0x0000010000</initializer>
          <briefdescription>
<para>allows for reading of message history </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa6d810371ed1b4b2ec4fd50e7e2210104" prot="public">
          <name>p_mention_everyone</name>
          <initializer>=	0x0000020000</initializer>
          <briefdescription>
<para>allows for using the everyone and the here tag to notify users in a channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa65d4c2c30983c92fc6c47748b5d50261" prot="public">
          <name>p_use_external_emojis</name>
          <initializer>=	0x0000040000</initializer>
          <briefdescription>
<para>allows the usage of custom emojis from other servers </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa4ffb9d1a4e882b865dbde6f7b2c8f11b" prot="public">
          <name>p_view_guild_insights</name>
          <initializer>=	0x0000080000</initializer>
          <briefdescription>
<para>allows for viewing guild insights </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604faa9d2af8bc1c498854bdd4a9f748d5dd5" prot="public">
          <name>p_connect</name>
          <initializer>=	0x0000100000</initializer>
          <briefdescription>
<para>allows for joining of a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa259ccc1aa795d6c3e91fd27ca26064e7" prot="public">
          <name>p_speak</name>
          <initializer>=	0x0000200000</initializer>
          <briefdescription>
<para>allows for speaking in a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fafc617e73d51078781873de54d56f2a9a" prot="public">
          <name>p_mute_members</name>
          <initializer>=	0x0000400000</initializer>
          <briefdescription>
<para>allows for muting members in a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa10433f34ee13298e9c51f5e9b7024934" prot="public">
          <name>p_deafen_members</name>
          <initializer>=	0x0000800000</initializer>
          <briefdescription>
<para>allows for deafening of members in a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa235c2b4cc39caac24ae439231e8575e2" prot="public">
          <name>p_move_members</name>
          <initializer>=	0x0001000000</initializer>
          <briefdescription>
<para>allows for moving of members between voice channels </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604faf51108cc668e552eadfa543d404904a8" prot="public">
          <name>p_use_vad</name>
          <initializer>=	0x0002000000</initializer>
          <briefdescription>
<para>allows for using voice-activity-detection in a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa61d9c9e5e9e0ce1808219c1bae1d501c" prot="public">
          <name>p_change_nickname</name>
          <initializer>=	0x0004000000</initializer>
          <briefdescription>
<para>allows for modification of own nickname </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604faf2cc3c251fd4d3a180b932220681c8c7" prot="public">
          <name>p_manage_nicknames</name>
          <initializer>=	0x0008000000</initializer>
          <briefdescription>
<para>allows for modification of other users nicknames </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa2fc44537c377d2b8f1d0038fb981d7b1" prot="public">
          <name>p_manage_roles</name>
          <initializer>=	0x0010000000</initializer>
          <briefdescription>
<para>allows management and editing of roles </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa549b4abc6dada6f0bf90867796811022" prot="public">
          <name>p_manage_webhooks</name>
          <initializer>=	0x0020000000</initializer>
          <briefdescription>
<para>allows management and editing of webhooks </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fad691e887806c25155195bee70d772311" prot="public">
          <name>p_manage_emojis_and_stickers</name>
          <initializer>=	0x0040000000</initializer>
          <briefdescription>
<para>allows management and editing of emojis and stickers </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fae628847e2db7d4b3d986d6546efde812" prot="public">
          <name>p_use_application_commands</name>
          <initializer>=	0x0080000000</initializer>
          <briefdescription>
<para>allows members to use application commands, including slash commands and context menus </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa36d490ca8b4746a76b4982dfa03d7396" prot="public">
          <name>p_request_to_speak</name>
          <initializer>=	0x0100000000</initializer>
          <briefdescription>
<para>allows for requesting to speak in stage channels. (Discord: This permission is under active development and may be changed or removed.) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fad89dbe2fc4c28f357e8fe579a1ad962b" prot="public">
          <name>p_manage_threads</name>
          <initializer>=	0x0400000000</initializer>
          <briefdescription>
<para>allows for deleting and archiving threads, and viewing all private threads </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa32c172d9953bb8cf72dea1a33762eddb" prot="public">
          <name>p_create_public_threads</name>
          <initializer>=	0x0800000000</initializer>
          <briefdescription>
<para>allows for creating threads </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa49988d7e19bd664514046a44ae8d6f34" prot="public">
          <name>p_create_private_threads</name>
          <initializer>=	0x1000000000</initializer>
          <briefdescription>
<para>allows for creating private threads </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fac53f7e2ab8f8b46f48943d281bc6c5b3" prot="public">
          <name>p_use_external_stickers</name>
          <initializer>=	0x2000000000</initializer>
          <briefdescription>
<para>allows the usage of custom stickers from other servers </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa5fe142c8d6eacec5ce80b3b42476d937" prot="public">
          <name>p_send_messages_in_threads</name>
          <initializer>=	0x4000000000</initializer>
          <briefdescription>
<para>allows for sending messages in threads </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a2b8b5573bf936e034d33a7238fe5604fa8b664cc72b2379ebe85894385e804e33" prot="public">
          <name>p_start_embedded_activities</name>
          <initializer>=	0x8000000000</initializer>
          <briefdescription>
<para>allows for launching activities (applications with the EMBEDDED flag) in a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents the various discord permissions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/role.h" line="38" column="1" bodyfile="include/dpp/role.h" bodystart="38" bodyend="78"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1abc401d86119c6443bf72d736857c1a58" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>command_option_type</name>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a1b0940a3156aada72e6fc41b0e17612c" prot="public">
          <name>co_sub_command</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A sub-command </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58aaf7efc648d35b8a702480f916c904547" prot="public">
          <name>co_sub_command_group</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A sub-command group </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58acd751201efe224973dfe952d8658a384" prot="public">
          <name>co_string</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A string value </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a7e18bae49699df4948c28c12bfa8bd19" prot="public">
          <name>co_integer</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An integer value </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a804453a3a94d413b634544e57f5ae2cc" prot="public">
          <name>co_boolean</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A boolean value </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a5a2ea837ca5ec64e6385acf392cef1e2" prot="public">
          <name>co_user</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A user snowflake id </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a96f8ffcbd6b293e75a0500d729fc9b31" prot="public">
          <name>co_channel</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A channel snowflake id </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a4476d79df02a4909cd7931d5a7e5f0ac" prot="public">
          <name>co_role</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A role snowflake id </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a6104d8b3d8c608855ccf8eab2d60a821" prot="public">
          <name>co_mentionable</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A mentionable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a516b70c3a0d502aeb6af3530c831e86b" prot="public">
          <name>co_number</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Any double between -2^53 and 2^53 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents command option types. These are the possible parameter value types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="35" column="1" bodyfile="include/dpp/slashcommand.h" bodystart="35" bodyend="56"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a83479ddaa45166def7719d5511b09d02" prot="public" static="no" strong="no">
        <type></type>
        <name>interaction_response_type</name>
        <enumvalue id="namespacedpp_1a83479ddaa45166def7719d5511b09d02a46a22844f01bdc70a45a67876e9eeede" prot="public">
          <name>ir_pong</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>ACK a Ping. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a83479ddaa45166def7719d5511b09d02a5a9b185d739d649208ea5e903391901c" prot="public">
          <name>ir_channel_message_with_source</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>respond to an interaction with a message </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a83479ddaa45166def7719d5511b09d02a34942bb9774f88000998c9f0c62b1294" prot="public">
          <name>ir_deferred_channel_message_with_source</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>ACK an interaction and edit a response later, the user sees a loading state. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a83479ddaa45166def7719d5511b09d02a8f370bb2d780a47b45846bf92b099312" prot="public">
          <name>ir_deferred_update_message</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>for components, ACK an interaction and edit the original message later; the user does not see a loading state </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a83479ddaa45166def7719d5511b09d02a9a0239abd933c1bdf511e1c8285f0847" prot="public">
          <name>ir_update_message</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>for components, edit the message the component was attached to </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Response types when responding to an interaction within on_interaction_create. Do not use ir_acknowledge or ir::channel_message, as these are deprecated in the Discord API spec. They are listed in this enum for completeness. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="174" column="1" bodyfile="include/dpp/slashcommand.h" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a53805450964cf3ad4a26f673aebebd96" prot="public" static="no" strong="no">
        <type></type>
        <name>interaction_type</name>
        <enumvalue id="namespacedpp_1a53805450964cf3ad4a26f673aebebd96aa1b23d55f5737159520e3accb8be8275" prot="public">
          <name>it_ping</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>ping </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a53805450964cf3ad4a26f673aebebd96a5d50f8860f3910c3aa52b9ab866d11c0" prot="public">
          <name>it_application_command</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>application command (slash command) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a53805450964cf3ad4a26f673aebebd96a4daa10fcda2dd54b45128e86e40bfcc1" prot="public">
          <name>it_component_button</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>button click (component interaction) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Types of interaction in the <ref refid="classdpp_1_1interaction" kindref="compound">dpp::interaction</ref> class </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="289" column="1" bodyfile="include/dpp/slashcommand.h" bodystart="289" bodyend="293"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a63342923617f0829b64c53cd02fafd1b" prot="public" static="no" strong="no">
        <type></type>
        <name>component_type_t</name>
        <enumvalue id="namespacedpp_1a63342923617f0829b64c53cd02fafd1baad47b544b108daba6abab7fd9f91a51e" prot="public">
          <name>cotype_button</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a63342923617f0829b64c53cd02fafd1ba6e7793ef67aa0c149233df8719f579cc" prot="public">
          <name>cotype_select</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="316" column="1" bodyfile="include/dpp/slashcommand.h" bodystart="316" bodyend="319"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ac66e44bd22afee53242581010ddd3728" prot="public" static="no" strong="no">
        <type></type>
        <name>command_permission_type</name>
        <enumvalue id="namespacedpp_1ac66e44bd22afee53242581010ddd3728ad60a51c5528e7aaaddaa6b7d9209b49f" prot="public">
          <name>cpt_role</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ac66e44bd22afee53242581010ddd3728af54d0925e774551ebc092ada807b349d" prot="public">
          <name>cpt_user</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>type of permission in the <ref refid="classdpp_1_1command__permission" kindref="compound">dpp::command_permission</ref> class </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="388" column="1" bodyfile="include/dpp/slashcommand.h" bodystart="388" bodyend="391"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a3af415bd74cead2c665a6a507ce843fb" prot="public" static="no" strong="no">
        <type></type>
        <name>slashcommand_contextmenu_type</name>
        <enumvalue id="namespacedpp_1a3af415bd74cead2c665a6a507ce843fba0de83a85048f2d44b3d70161de9e1824" prot="public">
          <name>ctxm_none</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a3af415bd74cead2c665a6a507ce843fba09b58fe33a8d8a5587a8e3676371151a" prot="public">
          <name>ctxm_chat_input</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>DEFAULT, these are the slash commands you&apos;re used to. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a3af415bd74cead2c665a6a507ce843fbaea38e9fafe712b690fe8db15c0eac659" prot="public">
          <name>ctxm_user</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Add command to user context menu. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a3af415bd74cead2c665a6a507ce843fbae5b2d37ae0e714e18602cbc2475ce88a" prot="public">
          <name>ctxm_message</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Add command to message context menu. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="435" column="1" bodyfile="include/dpp/slashcommand.h" bodystart="435" bodyend="440"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ace1318b24526febab72157cdd8b7b468" prot="public" static="no" strong="no">
        <type></type>
        <name>user_flags</name>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468a08571594b32cf14501db06b9a39c0d2b" prot="public">
          <name>u_bot</name>
          <initializer>=			0b00000000000000000000001</initializer>
          <briefdescription>
<para>User is a bot. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468ab798237a2b87e22960a9928fede47221" prot="public">
          <name>u_system</name>
          <initializer>=		0b00000000000000000000010</initializer>
          <briefdescription>
<para>User is a system user (Clyde!) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468a77ba30113792b4046dce41d9e0d3e092" prot="public">
          <name>u_mfa_enabled</name>
          <initializer>=		0b00000000000000000000100</initializer>
          <briefdescription>
<para>User has multi-factor authentication enabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468a8055b637db4c88b54da2c3157ebb7f74" prot="public">
          <name>u_verified</name>
          <initializer>=		0b00000000000000000001000</initializer>
          <briefdescription>
<para>User is verified (verified email address) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468a224c3134630104447a7d739f37f5f6f0" prot="public">
          <name>u_nitro_full</name>
          <initializer>=		0b00000000000000000010000</initializer>
          <briefdescription>
<para>User has full nitro. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468afe08f965f264db94c343e1cb6ed2ba76" prot="public">
          <name>u_nitro_classic</name>
          <initializer>=	0b00000000000000000100000</initializer>
          <briefdescription>
<para>User has nitro classic. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468a4ba288ac839eaff56a3d46e373764d76" prot="public">
          <name>u_discord_employee</name>
          <initializer>=	0b00000000000000001000000</initializer>
          <briefdescription>
<para>User is discord staff. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468a666e085f0d2ba3edbd420f36d68a5e7e" prot="public">
          <name>u_partnered_owner</name>
          <initializer>=	0b00000000000000010000000</initializer>
          <briefdescription>
<para>User owns a partnered server. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468ad59de70fe3833bd7b46b134bd6a77eeb" prot="public">
          <name>u_hypesquad_events</name>
          <initializer>=	0b00000000000000100000000</initializer>
          <briefdescription>
<para>User is a member of hypesquad events. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468aff3f9dd3f4da4e8c47c3dad9b080264e" prot="public">
          <name>u_bughunter_1</name>
          <initializer>=		0b00000000000001000000000</initializer>
          <briefdescription>
<para>User has BugHunter level 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468a90aa6259394b0cc214042c0fa0ae5f36" prot="public">
          <name>u_house_bravery</name>
          <initializer>=	0b00000000000010000000000</initializer>
          <briefdescription>
<para>User is a member of House Bravery. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468a092724653fc653a65807a13740eaec91" prot="public">
          <name>u_house_brilliance</name>
          <initializer>=	0b00000000000100000000000</initializer>
          <briefdescription>
<para>User is a member of House Brilliance. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468a3e99159c534d3cd8d2b62ddbb465a85a" prot="public">
          <name>u_house_balanace</name>
          <initializer>=	0b00000000001000000000000</initializer>
          <briefdescription>
<para>User is a member of House Balance. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468aefb9e680096448b61609f13e1b23736a" prot="public">
          <name>u_early_supporter</name>
          <initializer>=	0b00000000010000000000000</initializer>
          <briefdescription>
<para>User is an early supporter. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468ad9e65390bac5097c18380407eeaa8891" prot="public">
          <name>u_team_user</name>
          <initializer>=		0b00000000100000000000000</initializer>
          <briefdescription>
<para>User is a team user. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468a464829636537cdc63c5afae54f37f271" prot="public">
          <name>u_bughunter_2</name>
          <initializer>=		0b00000001000000000000000</initializer>
          <briefdescription>
<para>User is has Bug Hunter level 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468aa07166e5a0e4e1e29a43e924b9c6d41f" prot="public">
          <name>u_verified_bot</name>
          <initializer>=	0b00000010000000000000000</initializer>
          <briefdescription>
<para>User is a verified bot. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468a52e7662e76e7375fdb2b2df4d3780d70" prot="public">
          <name>u_verified_bot_dev</name>
          <initializer>=	0b00000100000000000000000</initializer>
          <briefdescription>
<para>User has the Early Verified Bot Developer badge. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468a2aef392b3338053d54a8e2bc0a3a465f" prot="public">
          <name>u_animated_icon</name>
          <initializer>=	0b00001000000000000000000</initializer>
          <briefdescription>
<para>User&apos;s icon is animated. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace1318b24526febab72157cdd8b7b468a05e7983fd9a8181c8d8e59faa6d43b79" prot="public">
          <name>u_certified_moderator</name>
          <initializer>=	0b00010000000000000000000</initializer>
          <briefdescription>
<para>User is a certified moderator. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Various bitmask flags used to represent information about a <ref refid="classdpp_1_1user" kindref="compound">dpp::user</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/user.h" line="30" column="1" bodyfile="include/dpp/user.h" bodystart="30" bodyend="71"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a03f707e068e2f7e7c7277094af901813" prot="public" static="no" strong="no">
        <type></type>
        <name>voiceregion_flags</name>
        <enumvalue id="namespacedpp_1a03f707e068e2f7e7c7277094af901813afb06fc75de5270a1646e4ed14754ac1c" prot="public">
          <name>v_optimal</name>
          <initializer>= 0x00000001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a03f707e068e2f7e7c7277094af901813a7ffeb4c61fc6bdfc3c66fc45837df985" prot="public">
          <name>v_deprecated</name>
          <initializer>= 0x00000010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a03f707e068e2f7e7c7277094af901813a2e982013a8628fec52e4d04c2079aa8f" prot="public">
          <name>v_custom</name>
          <initializer>= 0x00000100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a03f707e068e2f7e7c7277094af901813a17f33e1022039e04ac480b2956075cc2" prot="public">
          <name>v_vip</name>
          <initializer>= 0x00001000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flags related to a voice region. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="31" column="1" bodyfile="include/dpp/voiceregion.h" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a6a7cc94290184616d0267d751f02d53f" prot="public" static="no" strong="no">
        <type></type>
        <name>voicestate_flags</name>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53fad67d4828942e6cb916ad2911f79a3948" prot="public">
          <name>vs_deaf</name>
          <initializer>=	0b00000001</initializer>
          <briefdescription>
<para>Deafened. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53faa3f883725cc590d56f32a968eef566aa" prot="public">
          <name>vs_mute</name>
          <initializer>=	0b00000010</initializer>
          <briefdescription>
<para>Muted. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53fa320ea835cd4680b54d5935d8fb32953a" prot="public">
          <name>vs_self_mute</name>
          <initializer>=	0b00000100</initializer>
          <briefdescription>
<para>Self Muted. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53fabaf7cfcc392357c72245e847b3dc6954" prot="public">
          <name>vs_self_deaf</name>
          <initializer>=	0b00001000</initializer>
          <briefdescription>
<para>Self Deafened. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53faa71e77d5dec0a32ba01779884f83cf3b" prot="public">
          <name>vs_self_stream</name>
          <initializer>=	0b00010000</initializer>
          <briefdescription>
<para>Self Streaming. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53fa33cbc9aa408db6c7ee21d28dbbbdbe57" prot="public">
          <name>vs_self_video</name>
          <initializer>=	0b00100000</initializer>
          <briefdescription>
<para>Self Video. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53fab6b112d9c3a80339f4c722d127c5e4d6" prot="public">
          <name>vs_suppress</name>
          <initializer>=	0b01000000</initializer>
          <briefdescription>
<para>Suppression. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Bit mask flags relating to voice states. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="30" column="1" bodyfile="include/dpp/voicestate.h" bodystart="30" bodyend="38"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a20f1f69fbf5558149824584aeab4ecc0" prot="public" static="no" strong="no">
        <type></type>
        <name>webhook_type</name>
        <enumvalue id="namespacedpp_1a20f1f69fbf5558149824584aeab4ecc0aa051294204db430ee0ec49c4bbd6be7a" prot="public">
          <name>w_incoming</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Incoming webhook. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a20f1f69fbf5558149824584aeab4ecc0acc388c1bea88aabf998bae9889bdf354" prot="public">
          <name>w_channel_follower</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Channel following webhook. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines types of webhook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/webhook.h" line="31" column="1" bodyfile="include/dpp/webhook.h" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1af0e6c1fc5986facd4bb63a152ffa6057" prot="public" static="no" strong="no">
        <type></type>
        <name>ws_state</name>
        <enumvalue id="namespacedpp_1af0e6c1fc5986facd4bb63a152ffa6057ac4e7462fef7673f64bf129dde58c9f70" prot="public">
          <name>HTTP_HEADERS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sending/receiving HTTP headers prior to protocol switch </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af0e6c1fc5986facd4bb63a152ffa6057ab21dc4f63ee869c75f21c77922769e6d" prot="public">
          <name>CONNECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Connected, upgraded and sending/receiving frames </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Websocket connection status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/wsclient.h" line="34" column="1" bodyfile="include/dpp/wsclient.h" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a27a655378b0676c4444b32079c19d667" prot="public" static="no" strong="no">
        <type></type>
        <name>ws_opcode</name>
        <enumvalue id="namespacedpp_1a27a655378b0676c4444b32079c19d667ac641ff6036ee7056ef3a2617f7dc6163" prot="public">
          <name>OP_CONTINUATION</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
<para>Continuation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a27a655378b0676c4444b32079c19d667a24f8b16a9b360f9ab17180433018587e" prot="public">
          <name>OP_TEXT</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
<para>Text frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a27a655378b0676c4444b32079c19d667ac6c295924c27154cf564628ebb9677c9" prot="public">
          <name>OP_BINARY</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
<para>Binary frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a27a655378b0676c4444b32079c19d667af10fce37d364106c0d8d13472f031bb0" prot="public">
          <name>OP_CLOSE</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
<para>Close notification with close code. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a27a655378b0676c4444b32079c19d667a1cba9d927313c32ed6fdbf191018ee59" prot="public">
          <name>OP_PING</name>
          <initializer>= 0x09</initializer>
          <briefdescription>
<para>Low level ping. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a27a655378b0676c4444b32079c19d667a0dbab9ed2998b084825c4803c52fb7bc" prot="public">
          <name>OP_PONG</name>
          <initializer>= 0x0a</initializer>
          <briefdescription>
<para>Low level pong. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Low-level websocket opcodes for frames. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/wsclient.h" line="44" column="1" bodyfile="include/dpp/wsclient.h" bodystart="45" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacedpp_1ae9134a9d8edf8adcb87e979bb7a7343e" prot="public" static="no">
        <type>nlohmann::json</type>
        <definition>typedef nlohmann::json dpp::json</definition>
        <argsstring></argsstring>
        <name>json</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/auditlog.cpp" line="28" column="1" bodyfile="src/dpp/auditlog.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a52b195380df96e9c43f35fa2da82db14" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="classdpp_1_1ban" kindref="compound">ban</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, ban&gt; dpp::ban_map</definition>
        <argsstring></argsstring>
        <name>ban_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of bans </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/ban.h" line="62" column="28" bodyfile="include/dpp/ban.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a4524e2a056f2d16ba591516fbf275235" prot="public" static="no">
        <type>std::unordered_map&lt; uint64_t, <ref refid="classdpp_1_1managed" kindref="compound">managed</ref> * &gt;</type>
        <definition>typedef std::unordered_map&lt;uint64_t, managed*&gt; dpp::cache_container</definition>
        <argsstring></argsstring>
        <name>cache_container</name>
        <briefdescription>
<para>A set of cached managed objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="33" column="28" bodyfile="include/dpp/cache.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a57e84724c41fed341bee0d653a06076a" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="structdpp_1_1thread__member" kindref="compound">thread_member</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, thread_member&gt; dpp::thread_member_map</definition>
        <argsstring></argsstring>
        <name>thread_member_map</name>
        <briefdescription>
<para>A group of thread member objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="132" column="28" bodyfile="include/dpp/channel.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a7c77c4dd9434985643b2f1993b227f30" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="classdpp_1_1channel" kindref="compound">channel</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, channel&gt; dpp::channel_map</definition>
        <argsstring></argsstring>
        <name>channel_map</name>
        <briefdescription>
<para>A group of channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="299" column="28" bodyfile="include/dpp/channel.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a13c4d4e6238396245b349e6a637897e0" prot="public" static="no">
        <type>std::map&lt; uint32_t, class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> * &gt;</type>
        <definition>typedef std::map&lt;uint32_t, class discord_client*&gt; dpp::shard_list</definition>
        <argsstring></argsstring>
        <name>shard_list</name>
        <briefdescription>
<para>A list of shards. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cluster.h" line="41" column="18" bodyfile="include/dpp/cluster.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1aa9b8b2be70d0b0b5fdb8e9dddf3ece10" prot="public" static="no">
        <type>std::variant&lt; <ref refid="structdpp_1_1confirmation" kindref="compound">confirmation</ref>, <ref refid="structdpp_1_1message" kindref="compound">message</ref>, <ref refid="namespacedpp_1a44d4dd39b5d7c24c5fe97a76a73cf708" kindref="member">message_map</ref>, <ref refid="classdpp_1_1user" kindref="compound">user</ref>, <ref refid="namespacedpp_1a1c4073c92e19579c06591033a4a234e1" kindref="member">user_map</ref>, <ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref>, <ref refid="namespacedpp_1a219aedbe5bf37835c4a65115fccba278" kindref="member">guild_member_map</ref>, <ref refid="classdpp_1_1channel" kindref="compound">channel</ref>, <ref refid="namespacedpp_1a7c77c4dd9434985643b2f1993b227f30" kindref="member">channel_map</ref>, <ref refid="namespacedpp_1a57e84724c41fed341bee0d653a06076a" kindref="member">thread_member_map</ref>, <ref refid="classdpp_1_1guild" kindref="compound">guild</ref>, <ref refid="namespacedpp_1a0d9e1952e25391a3379ee3db2d930bf7" kindref="member">guild_map</ref>, <ref refid="classdpp_1_1role" kindref="compound">role</ref>, <ref refid="namespacedpp_1adb1c0770936ed4ac64158cf9523e638b" kindref="member">role_map</ref>, <ref refid="classdpp_1_1invite" kindref="compound">invite</ref>, <ref refid="namespacedpp_1aa85b043fd45cf24caa23ab6004a2415a" kindref="member">invite_map</ref>, <ref refid="classdpp_1_1dtemplate" kindref="compound">dtemplate</ref>, <ref refid="namespacedpp_1a9a1e92263bfa31397d459725d26e47b6" kindref="member">dtemplate_map</ref>, <ref refid="classdpp_1_1emoji" kindref="compound">emoji</ref>, <ref refid="namespacedpp_1a58e2720e1ccc11d2b3b1be2e18df79d9" kindref="member">emoji_map</ref>, <ref refid="classdpp_1_1ban" kindref="compound">ban</ref>, <ref refid="namespacedpp_1a52b195380df96e9c43f35fa2da82db14" kindref="member">ban_map</ref>, <ref refid="classdpp_1_1voiceregion" kindref="compound">voiceregion</ref>, <ref refid="namespacedpp_1ae90871830444cab0316109a1824fc0b8" kindref="member">voiceregion_map</ref>, <ref refid="classdpp_1_1integration" kindref="compound">integration</ref>, <ref refid="namespacedpp_1aa13e2c5898009fad42ebe12fd5641d8a" kindref="member">integration_map</ref>, <ref refid="classdpp_1_1webhook" kindref="compound">webhook</ref>, <ref refid="namespacedpp_1a1cb0cc074a1653521bab47f83498e9ca" kindref="member">webhook_map</ref>, <ref refid="structdpp_1_1prune" kindref="compound">prune</ref>, <ref refid="classdpp_1_1guild__widget" kindref="compound">guild_widget</ref>, <ref refid="structdpp_1_1gateway" kindref="compound">gateway</ref>, <ref refid="classdpp_1_1interaction" kindref="compound">interaction</ref>, <ref refid="structdpp_1_1interaction__response" kindref="compound">interaction_response</ref>, <ref refid="classdpp_1_1auditlog" kindref="compound">auditlog</ref>, <ref refid="classdpp_1_1slashcommand" kindref="compound">slashcommand</ref>, <ref refid="namespacedpp_1adfefe335636cdf5dbbba145a3828c554" kindref="member">slashcommand_map</ref>, <ref refid="structdpp_1_1sticker" kindref="compound">sticker</ref>, <ref refid="namespacedpp_1a0d09f413c01571a98b8ec9a267a0e48f" kindref="member">sticker_map</ref>, <ref refid="structdpp_1_1sticker__pack" kindref="compound">sticker_pack</ref>, <ref refid="namespacedpp_1adc1d24fba1d0f9fbdbe054d31efe5283" kindref="member">sticker_pack_map</ref> &gt;</type>
        <definition>typedef std::variant&lt; confirmation, message, message_map, user, user_map, guild_member, guild_member_map, channel, channel_map, thread_member_map, guild, guild_map, role, role_map, invite, invite_map, dtemplate, dtemplate_map, emoji, emoji_map, ban, ban_map, voiceregion, voiceregion_map, integration, integration_map, webhook, webhook_map, prune, guild_widget, gateway, interaction, interaction_response, auditlog, slashcommand, slashcommand_map, sticker, sticker_map, sticker_pack, sticker_pack_map &gt; dpp::confirmable_t</definition>
        <argsstring></argsstring>
        <name>confirmable_t</name>
        <briefdescription>
<para>A container for types that can be returned for a REST API call. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cluster.h" line="120" column="2" bodyfile="include/dpp/cluster.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a022dce6b086ec4515384eaece59c84c3" prot="public" static="no">
        <type>std::function&lt; void(const <ref refid="structdpp_1_1confirmation__callback__t" kindref="compound">confirmation_callback_t</ref> &amp;)&gt;</type>
        <definition>typedef std::function&lt; void(const confirmation_callback_t &amp;)&gt; dpp::command_completion_event_t</definition>
        <argsstring></argsstring>
        <name>command_completion_event_t</name>
        <briefdescription>
<para>A callback upon command completion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cluster.h" line="210" column="23" bodyfile="include/dpp/cluster.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1aafc7fb6792b12d92c4e77b46d20924ee" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="namespacedpp_1ae9134a9d8edf8adcb87e979bb7a7343e" kindref="member">json</ref> &amp;, const <ref refid="structdpp_1_1http__request__completion__t" kindref="compound">http_request_completion_t</ref> &amp;)&gt;</type>
        <definition>typedef std::function&lt;void(json&amp;, const http_request_completion_t&amp;)&gt; dpp::json_encode_t</definition>
        <argsstring></argsstring>
        <name>json_encode_t</name>
        <briefdescription>
<para>Automatically JSON encoded HTTP result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cluster.h" line="215" column="23" bodyfile="include/dpp/cluster.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1aeda63f2562bc6f52b50b793b70341abd" prot="public" static="no">
        <type>std::variant&lt; std::monostate, std::string, <ref refid="classdpp_1_1role" kindref="compound">dpp::role</ref>, <ref refid="classdpp_1_1channel" kindref="compound">dpp::channel</ref>, <ref refid="structdpp_1_1resolved__user" kindref="compound">dpp::resolved_user</ref>, int64_t, bool, double &gt;</type>
        <definition>typedef std::variant&lt;std::monostate, std::string, dpp::role, dpp::channel, dpp::resolved_user, int64_t, bool, double&gt; dpp::command_parameter</definition>
        <argsstring></argsstring>
        <name>command_parameter</name>
        <briefdescription>
<para>Represents a received parameter. We use variant so that multiple non-related types can be contained within. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="55" column="22" bodyfile="include/dpp/commandhandler.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a6daf230da747f01eeaa36fd3d5e51a65" prot="public" static="no">
        <type>std::vector&lt; std::pair&lt; std::string, <ref refid="structdpp_1_1param__info" kindref="compound">param_info</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::pair&lt;std::string, param_info&gt; &gt; dpp::parameter_registration_t</definition>
        <argsstring></argsstring>
        <name>parameter_registration_t</name>
        <briefdescription>
<para>Parameter list used during registration. Note that use of vector/pair is important here to preserve parameter order, as opposed to unordered_map (which doesnt guarantee any order at all) and std::map, which reorders keys alphabetically. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="120" column="21" bodyfile="include/dpp/commandhandler.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a632b6ae7b47a5feb95104644a487e4f1" prot="public" static="no">
        <type>std::vector&lt; std::pair&lt; std::string, <ref refid="namespacedpp_1aeda63f2562bc6f52b50b793b70341abd" kindref="member">command_parameter</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::pair&lt;std::string, command_parameter&gt; &gt; dpp::parameter_list_t</definition>
        <argsstring></argsstring>
        <name>parameter_list_t</name>
        <briefdescription>
<para>Parameter list for a called command. See <ref refid="namespacedpp_1a6daf230da747f01eeaa36fd3d5e51a65" kindref="member">dpp::parameter_registration_t</ref> for an explanation as to why vector is used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="126" column="21" bodyfile="include/dpp/commandhandler.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a72a8ab3231965d0e361f305a7fe431f3" prot="public" static="no">
        <type>std::function&lt; void(const std::string &amp;, const <ref refid="namespacedpp_1a632b6ae7b47a5feb95104644a487e4f1" kindref="member">parameter_list_t</ref> &amp;, <ref refid="structdpp_1_1command__source" kindref="compound">command_source</ref>)&gt;</type>
        <definition>typedef std::function&lt;void(const std::string&amp;, const parameter_list_t&amp;, command_source)&gt; dpp::command_handler</definition>
        <argsstring></argsstring>
        <name>command_handler</name>
        <briefdescription>
<para>The function definition for a command handler. Expects a command name string, and a list of command parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="163" column="23" bodyfile="include/dpp/commandhandler.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t dpp::snowflake</definition>
        <argsstring></argsstring>
        <name>snowflake</name>
        <briefdescription>
<para>A 64 bit unsigned value representing many things on discord. Discord calls the value a &apos;snowflake&apos; value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discord.h" line="36" column="18" bodyfile="include/dpp/discord.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a9a1e92263bfa31397d459725d26e47b6" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="classdpp_1_1dtemplate" kindref="compound">dtemplate</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, dtemplate&gt; dpp::dtemplate_map</definition>
        <argsstring></argsstring>
        <name>dtemplate_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A container of invites </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dtemplate.h" line="91" column="28" bodyfile="include/dpp/dtemplate.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a58e2720e1ccc11d2b3b1be2e18df79d9" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="classdpp_1_1emoji" kindref="compound">emoji</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, emoji&gt; dpp::emoji_map</definition>
        <argsstring></argsstring>
        <name>emoji_map</name>
        <briefdescription>
<para>Group of emojis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/emoji.h" line="153" column="28" bodyfile="include/dpp/emoji.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a674dfd30e37779538e80d95fcb13770f" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, guild_member&gt; dpp::members_container</definition>
        <argsstring></argsstring>
        <name>members_container</name>
        <briefdescription>
<para>Guild members container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="158" column="28" bodyfile="include/dpp/guild.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a0d9e1952e25391a3379ee3db2d930bf7" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="classdpp_1_1guild" kindref="compound">guild</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, guild&gt; dpp::guild_map</definition>
        <argsstring></argsstring>
        <name>guild_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A container of guilds </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="383" column="28" bodyfile="include/dpp/guild.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a219aedbe5bf37835c4a65115fccba278" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, guild_member&gt; dpp::guild_member_map</definition>
        <argsstring></argsstring>
        <name>guild_member_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A container of guild members </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="431" column="28" bodyfile="include/dpp/guild.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1aa13e2c5898009fad42ebe12fd5641d8a" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="classdpp_1_1integration" kindref="compound">integration</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, integration&gt; dpp::integration_map</definition>
        <argsstring></argsstring>
        <name>integration_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of integrations </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/integration.h" line="129" column="28" bodyfile="include/dpp/integration.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1aa85b043fd45cf24caa23ab6004a2415a" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="classdpp_1_1invite" kindref="compound">invite</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;std::string, invite&gt; dpp::invite_map</definition>
        <argsstring></argsstring>
        <name>invite_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A container of invites </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="92" column="28" bodyfile="include/dpp/invite.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a44d4dd39b5d7c24c5fe97a76a73cf708" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="structdpp_1_1message" kindref="compound">message</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, message&gt; dpp::message_map</definition>
        <argsstring></argsstring>
        <name>message_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of messages </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1114" column="28" bodyfile="include/dpp/message.h" bodystart="1114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a0d09f413c01571a98b8ec9a267a0e48f" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="structdpp_1_1sticker" kindref="compound">sticker</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, sticker&gt; dpp::sticker_map</definition>
        <argsstring></argsstring>
        <name>sticker_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of stickers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1117" column="28" bodyfile="include/dpp/message.h" bodystart="1117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1adc1d24fba1d0f9fbdbe054d31efe5283" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="structdpp_1_1sticker__pack" kindref="compound">sticker_pack</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, sticker_pack&gt; dpp::sticker_pack_map</definition>
        <argsstring></argsstring>
        <name>sticker_pack_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of sticker packs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1120" column="28" bodyfile="include/dpp/message.h" bodystart="1120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a037f40c104056183a26a4b4dbdf76f4f" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="classdpp_1_1presence" kindref="compound">presence</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;std::string, presence&gt; dpp::presence_map</definition>
        <argsstring></argsstring>
        <name>presence_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A container of presences </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="250" column="28" bodyfile="include/dpp/presence.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1ae3249e99494d04bb4be50341f474621e" prot="public" static="no">
        <type>std::function&lt; void(const <ref refid="structdpp_1_1http__request__completion__t" kindref="compound">http_request_completion_t</ref> &amp;)&gt;</type>
        <definition>typedef std::function&lt;void(const http_request_completion_t&amp;)&gt; dpp::http_completion_event</definition>
        <argsstring></argsstring>
        <name>http_completion_event</name>
        <briefdescription>
<para>Results of HTTP requests are called back to these std::function types. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Returned http_completion_events are called ASYNCRONOUSLY in your code which means they execute in a separate thread. The completion events arrive in order. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/queues.h" line="104" column="23" bodyfile="include/dpp/queues.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1adb1c0770936ed4ac64158cf9523e638b" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="classdpp_1_1role" kindref="compound">role</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, role&gt; dpp::role_map</definition>
        <argsstring></argsstring>
        <name>role_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of roles </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/role.h" line="223" column="28" bodyfile="include/dpp/role.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a710b32b577396ba92917d0578f0bedb6" prot="public" static="no">
        <type>std::variant&lt; std::monostate, std::string, int64_t, bool, <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, double &gt;</type>
        <definition>typedef std::variant&lt;std::monostate, std::string, int64_t, bool, snowflake, double&gt; dpp::command_value</definition>
        <argsstring></argsstring>
        <name>command_value</name>
        <briefdescription>
<para>This type is a variant that can hold any of the potential native data types represented by the enum above. It is used in interactions. </para>
        </briefdescription>
        <detaileddescription>
<para>std::monostate indicates an invalid parameter value, e.g. an unfilled optional parameter. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="65" column="22" bodyfile="include/dpp/slashcommand.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1adfefe335636cdf5dbbba145a3828c554" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="classdpp_1_1slashcommand" kindref="compound">slashcommand</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, slashcommand&gt; dpp::slashcommand_map</definition>
        <argsstring></argsstring>
        <name>slashcommand_map</name>
        <briefdescription>
<para>A group of application slash commands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/slashcommand.h" line="586" column="28" bodyfile="include/dpp/slashcommand.h" bodystart="586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a51156024d6211aef2731770340cfe452" prot="public" static="no">
        <type>int</type>
        <definition>typedef int dpp::socket</definition>
        <argsstring></argsstring>
        <name>socket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/socket.h" line="11" column="19" bodyfile="include/dpp/socket.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a1c4073c92e19579c06591033a4a234e1" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="classdpp_1_1user" kindref="compound">user</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, user&gt; dpp::user_map</definition>
        <argsstring></argsstring>
        <name>user_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of users </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/user.h" line="247" column="28" bodyfile="include/dpp/user.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1ae90871830444cab0316109a1824fc0b8" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="classdpp_1_1voiceregion" kindref="compound">voiceregion</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;std::string, voiceregion&gt; dpp::voiceregion_map</definition>
        <argsstring></argsstring>
        <name>voiceregion_map</name>
        <briefdescription>
<para>A group of voice regions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="115" column="28" bodyfile="include/dpp/voiceregion.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1aacfd609f0e027752b093141bc1739282" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="classdpp_1_1voicestate" kindref="compound">voicestate</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;std::string, voicestate&gt; dpp::voicestate_map</definition>
        <argsstring></argsstring>
        <name>voicestate_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A container of voicestates </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="103" column="28" bodyfile="include/dpp/voicestate.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a1cb0cc074a1653521bab47f83498e9ca" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref>, <ref refid="classdpp_1_1webhook" kindref="compound">webhook</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, webhook&gt; dpp::webhook_map</definition>
        <argsstring></argsstring>
        <name>webhook_map</name>
        <briefdescription>
<para>A group of webhooks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/webhook.h" line="91" column="28" bodyfile="include/dpp/webhook.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacedpp_1a04c02d7d0ead46eea16ed48015e82a99" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1managed" kindref="compound">managed</ref> *, time_t &gt;</type>
        <definition>std::unordered_map&lt;managed*, time_t&gt; dpp::deletion_queue</definition>
        <argsstring></argsstring>
        <name>deletion_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="30" column="20" bodyfile="src/dpp/cache.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1a2630b73cc2ee72fec720c5324655f400" prot="public" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex dpp::deletion_mutex</definition>
        <argsstring></argsstring>
        <name>deletion_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="31" column="12" bodyfile="src/dpp/cache.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1a6ddd481a6548ebed807a5cebbd2fba79" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1cache" kindref="compound">cache</ref> *</type>
        <definition>cache* dpp::user_cache</definition>
        <argsstring></argsstring>
        <name>user_cache</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="155" column="8" bodyfile="src/dpp/cache.cpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1adf9c30193655252606a5db50aaf9cb98" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1cache" kindref="compound">cache</ref> *</type>
        <definition>cache* dpp::channel_cache</definition>
        <argsstring></argsstring>
        <name>channel_cache</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="156" column="8" bodyfile="src/dpp/cache.cpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1a859e163ce0aca88e3d1f5379ee53ad3d" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1cache" kindref="compound">cache</ref> *</type>
        <definition>cache* dpp::role_cache</definition>
        <argsstring></argsstring>
        <name>role_cache</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="157" column="8" bodyfile="src/dpp/cache.cpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1a2bc14e10038152802645f051c747dc2f" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1cache" kindref="compound">cache</ref> *</type>
        <definition>cache* dpp::guild_cache</definition>
        <argsstring></argsstring>
        <name>guild_cache</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="158" column="8" bodyfile="src/dpp/cache.cpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1a3d2e114ba137f1f5bf6fd9782f41d2f2" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1cache" kindref="compound">cache</ref> *</type>
        <definition>cache* dpp::emoji_cache</definition>
        <argsstring></argsstring>
        <name>emoji_cache</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="159" column="8" bodyfile="src/dpp/cache.cpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1ac40602ddc592a7cfb7709375cfd8528e" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="classdpp_1_1events_1_1event" kindref="compound">dpp::events::event</ref> * &gt;</type>
        <definition>std::map&lt;std::string, dpp::events::event*&gt; dpp::eventmap</definition>
        <argsstring></argsstring>
        <name>eventmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="250" column="10" bodyfile="src/dpp/discordevents.cpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1af5d78d18a19b3fef2cf11ff545fee91c" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::external_ip</definition>
        <argsstring></argsstring>
        <name>external_ip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordvoiceclient.cpp" line="47" column="13" bodyfile="src/dpp/discordvoiceclient.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1a4f29330ede66fa21fc47c361a9c51a7b" prot="public" static="yes" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::http_version</definition>
        <argsstring></argsstring>
        <name>http_version</name>
        <initializer>= &quot;DiscordBot (https://github.com/brainboxdotcc/DPP, &quot; + std::to_string(DPP_VERSION_MAJOR) + &quot;.&quot; + std::to_string(DPP_VERSION_MINOR) + &quot;.&quot; + std::to_string(DPP_VERSION_PATCH) + &quot;)&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/queues.cpp" line="53" column="20" bodyfile="src/dpp/queues.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1a27df95e52167e3d7020ee6ad7958eaa8" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* dpp::DISCORD_HOST</definition>
        <argsstring></argsstring>
        <name>DISCORD_HOST</name>
        <initializer>= &quot;https://discord.com&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/queues.cpp" line="54" column="19" bodyfile="src/dpp/queues.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1a5dd1452ee8156729d4cb1ae5cbfdda87" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int dpp::ERROR_STATUS</definition>
        <argsstring></argsstring>
        <name>ERROR_STATUS</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/sslclient.cpp" line="83" column="11" bodyfile="src/dpp/sslclient.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1ab5f42fb08301629416cbca4d5412c0fd" prot="public" static="no" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char dpp::WS_MASKBIT</definition>
        <argsstring></argsstring>
        <name>WS_MASKBIT</name>
        <initializer>= (1u &lt;&lt; 7u)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/wsclient.cpp" line="29" column="21" bodyfile="src/dpp/wsclient.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1a9f1a62eaba2a019735abc7101cffee69" prot="public" static="no" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char dpp::WS_FINBIT</definition>
        <argsstring></argsstring>
        <name>WS_FINBIT</name>
        <initializer>= (1u &lt;&lt; 7u)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/wsclient.cpp" line="30" column="21" bodyfile="src/dpp/wsclient.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1ae6fd1619d39b4a2d583c09248f32cbe8" prot="public" static="no" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char dpp::WS_PAYLOAD_LENGTH_MAGIC_LARGE</definition>
        <argsstring></argsstring>
        <name>WS_PAYLOAD_LENGTH_MAGIC_LARGE</name>
        <initializer>= 126</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/wsclient.cpp" line="31" column="21" bodyfile="src/dpp/wsclient.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1ac49a4ce7276ce7386399c5cf020895f6" prot="public" static="no" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char dpp::WS_PAYLOAD_LENGTH_MAGIC_HUGE</definition>
        <argsstring></argsstring>
        <name>WS_PAYLOAD_LENGTH_MAGIC_HUGE</name>
        <initializer>= 127</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/wsclient.cpp" line="32" column="21" bodyfile="src/dpp/wsclient.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1a50b421a786601a401c22eccf3069d0f8" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t dpp::WS_MAX_PAYLOAD_LENGTH_SMALL</definition>
        <argsstring></argsstring>
        <name>WS_MAX_PAYLOAD_LENGTH_SMALL</name>
        <initializer>= 125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/wsclient.cpp" line="33" column="14" bodyfile="src/dpp/wsclient.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1a657e035c24d7cdf888ba40868167f098" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t dpp::WS_MAX_PAYLOAD_LENGTH_LARGE</definition>
        <argsstring></argsstring>
        <name>WS_MAX_PAYLOAD_LENGTH_LARGE</name>
        <initializer>= 65535</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/wsclient.cpp" line="34" column="14" bodyfile="src/dpp/wsclient.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1aeef0538fa45377c9b04fc944efec0f0c" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t dpp::MAXHEADERSIZE</definition>
        <argsstring></argsstring>
        <name>MAXHEADERSIZE</name>
        <initializer>= sizeof(uint64_t) + 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/wsclient.cpp" line="35" column="14" bodyfile="src/dpp/wsclient.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1ac9654800251161e0925af5d1ec1452f8" prot="public" static="no" mutable="no">
        <type>struct DPP_EXPORT</type>
        <definition>struct DPP_EXPORT dpp::confirmation_callback_t</definition>
        <argsstring></argsstring>
        <name>confirmation_callback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="32" column="17" bodyfile="include/dpp/dispatcher.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacedpp_1af9f0984484c2408f8bac07674720ef07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DPP_EXPORT dpp::garbage_collection</definition>
        <argsstring>()</argsstring>
        <name>garbage_collection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run garbage collection across all caches removing deleted items that have been deleted over 60 seconds ago. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="53" column="6" bodyfile="src/dpp/cache.cpp" bodystart="53" bodyend="78" declfile="include/dpp/cache.h" declline="116" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a368cff415172099d1d3c90e11721b37e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1user" kindref="compound">user</ref> *</type>
        <definition>DPP_EXPORT user * dpp::find_user</definition>
        <argsstring>(snowflake id)</argsstring>
        <name>find_user</name>
        <param>
          <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="155" column="31" bodyfile="src/dpp/cache.cpp" bodystart="155" bodyend="155" declfile="include/dpp/cache.h" declline="121" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1acee10a38322b1addfbc92aca3e763d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1cache" kindref="compound">cache</ref> *</type>
        <definition>DPP_EXPORT cache * dpp::get_user_cache</definition>
        <argsstring>()</argsstring>
        <name>get_user_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="155" column="127" bodyfile="src/dpp/cache.cpp" bodystart="155" bodyend="155" declfile="include/dpp/cache.h" declline="121" declcolumn="53"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ad70a66ea50fff65140d1dfcb803289f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>DPP_EXPORT uint64_t dpp::get_user_count</definition>
        <argsstring>()</argsstring>
        <name>get_user_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="155" column="239" bodyfile="src/dpp/cache.cpp" bodystart="155" bodyend="155" declfile="include/dpp/cache.h" declline="121" declcolumn="91"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a430445c5a47943ca2d1422f1f45434ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1channel" kindref="compound">channel</ref> *</type>
        <definition>DPP_EXPORT channel * dpp::find_channel</definition>
        <argsstring>(snowflake id)</argsstring>
        <name>find_channel</name>
        <param>
          <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="156" column="37" bodyfile="src/dpp/cache.cpp" bodystart="156" bodyend="156" declfile="include/dpp/cache.h" declline="124" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a3fdbe795e93af8ae42508a9eb8845ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1cache" kindref="compound">cache</ref> *</type>
        <definition>DPP_EXPORT cache * dpp::get_channel_cache</definition>
        <argsstring>()</argsstring>
        <name>get_channel_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="156" column="145" bodyfile="src/dpp/cache.cpp" bodystart="156" bodyend="156" declfile="include/dpp/cache.h" declline="124" declcolumn="59"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a564bd51f9aaa38759d667dee4a0c8615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>DPP_EXPORT uint64_t dpp::get_channel_count</definition>
        <argsstring>()</argsstring>
        <name>get_channel_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="156" column="269" bodyfile="src/dpp/cache.cpp" bodystart="156" bodyend="156" declfile="include/dpp/cache.h" declline="124" declcolumn="100"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ab1583937bb5eb90f8090a2e6b6b77839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1role" kindref="compound">role</ref> *</type>
        <definition>DPP_EXPORT role * dpp::find_role</definition>
        <argsstring>(snowflake id)</argsstring>
        <name>find_role</name>
        <param>
          <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="157" column="31" bodyfile="src/dpp/cache.cpp" bodystart="157" bodyend="157" declfile="include/dpp/cache.h" declline="123" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1af04446f6269f5ea06cd444c62eb04b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1cache" kindref="compound">cache</ref> *</type>
        <definition>DPP_EXPORT cache * dpp::get_role_cache</definition>
        <argsstring>()</argsstring>
        <name>get_role_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="157" column="127" bodyfile="src/dpp/cache.cpp" bodystart="157" bodyend="157" declfile="include/dpp/cache.h" declline="123" declcolumn="53"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a350d31a987f01b3fe24d17bc59b1d9b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>DPP_EXPORT uint64_t dpp::get_role_count</definition>
        <argsstring>()</argsstring>
        <name>get_role_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="157" column="239" bodyfile="src/dpp/cache.cpp" bodystart="157" bodyend="157" declfile="include/dpp/cache.h" declline="123" declcolumn="91"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a3a13097fcd3f19b409e2a15b9fa56f90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>DPP_EXPORT guild * dpp::find_guild</definition>
        <argsstring>(snowflake id)</argsstring>
        <name>find_guild</name>
        <param>
          <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="158" column="33" bodyfile="src/dpp/cache.cpp" bodystart="158" bodyend="158" declfile="include/dpp/cache.h" declline="122" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1aa525810bb08ad5c6a858951fd40d1596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1cache" kindref="compound">cache</ref> *</type>
        <definition>DPP_EXPORT cache * dpp::get_guild_cache</definition>
        <argsstring>()</argsstring>
        <name>get_guild_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="158" column="133" bodyfile="src/dpp/cache.cpp" bodystart="158" bodyend="158" declfile="include/dpp/cache.h" declline="122" declcolumn="55"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a6641a19f8dc7eba625f27c8835bf31ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>DPP_EXPORT uint64_t dpp::get_guild_count</definition>
        <argsstring>()</argsstring>
        <name>get_guild_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="158" column="249" bodyfile="src/dpp/cache.cpp" bodystart="158" bodyend="158" declfile="include/dpp/cache.h" declline="122" declcolumn="94"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a595cb5fb51cb3bca106454502f654e03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1emoji" kindref="compound">emoji</ref> *</type>
        <definition>DPP_EXPORT emoji * dpp::find_emoji</definition>
        <argsstring>(snowflake id)</argsstring>
        <name>find_emoji</name>
        <param>
          <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="159" column="33" bodyfile="src/dpp/cache.cpp" bodystart="159" bodyend="159" declfile="include/dpp/cache.h" declline="125" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1af7bf80aac0473a20777487bfd99cd1f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1cache" kindref="compound">cache</ref> *</type>
        <definition>DPP_EXPORT cache * dpp::get_emoji_cache</definition>
        <argsstring>()</argsstring>
        <name>get_emoji_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="159" column="133" bodyfile="src/dpp/cache.cpp" bodystart="159" bodyend="159" declfile="include/dpp/cache.h" declline="125" declcolumn="55"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a1728693a6b7bc12f1bb05e113e5c0428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>DPP_EXPORT uint64_t dpp::get_emoji_count</definition>
        <argsstring>()</argsstring>
        <name>get_emoji_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/cache.cpp" line="159" column="249" bodyfile="src/dpp/cache.cpp" bodystart="159" bodyend="159" declfile="include/dpp/cache.h" declline="125" declcolumn="94"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a82aba4478fa9f6b684d209af7a9eb754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t dpp::SnowflakeNotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>SnowflakeNotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a snowflake id from a json field value, if defined, else returns 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="53" column="10" bodyfile="src/dpp/discordevents.cpp" bodystart="53" bodyend="66" declfile="include/dpp/discordevents.h" declline="32" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a1216561cf2609de845f0085c6ba9c06c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::SetSnowflakeNotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, uint64_t &amp;v)</argsstring>
        <name>SetSnowflakeNotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>uint64_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets a snowflake id from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="68" column="6" bodyfile="src/dpp/discordevents.cpp" bodystart="68" bodyend="73" declfile="include/dpp/discordevents.h" declline="39" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1acd67ddd4f95dbdac48f554ddcbbeb0b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::StringNotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>StringNotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a string from a json field value, if defined, else returns an empty string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="76" column="13" bodyfile="src/dpp/discordevents.cpp" bodystart="76" bodyend="84" declfile="include/dpp/discordevents.h" declline="46" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a0372deb43206ac56d44b1ab77f07f98d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::SetStringNotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, std::string &amp;v)</argsstring>
        <name>SetStringNotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets a string from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="86" column="6" bodyfile="src/dpp/discordevents.cpp" bodystart="86" bodyend="92" declfile="include/dpp/discordevents.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1acbaec22075a1b65604103b2b90a6e282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t dpp::Int64NotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>Int64NotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a 64 bit unsigned integer from a json field value, if defined, else returns 0. DO NOT use this for snowflakes, as usually snowflakes are wrapped in a string! </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="94" column="10" bodyfile="src/dpp/discordevents.cpp" bodystart="94" bodyend="101" declfile="include/dpp/discordevents.h" declline="61" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1aaab450d8bc3301010a1f75df8ce63e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::SetInt64NotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, uint64_t &amp;v)</argsstring>
        <name>SetInt64NotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>uint64_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets an unsigned 64 bit integer from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="103" column="6" bodyfile="src/dpp/discordevents.cpp" bodystart="103" bodyend="108" declfile="include/dpp/discordevents.h" declline="68" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a0ec00af0eb7cc6ae98fffbbd589e102b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t dpp::Int32NotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>Int32NotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a 32 bit unsigned integer from a json field value, if defined, else returns 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="111" column="10" bodyfile="src/dpp/discordevents.cpp" bodystart="111" bodyend="118" declfile="include/dpp/discordevents.h" declline="75" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ac296a013a8ea5f03da0953ff263a6438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::SetInt32NotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, uint32_t &amp;v)</argsstring>
        <name>SetInt32NotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets an unsigned 32 bit integer from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="120" column="6" bodyfile="src/dpp/discordevents.cpp" bodystart="120" bodyend="125" declfile="include/dpp/discordevents.h" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a1ec69281fca102c8dbc0afb117e18c3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t dpp::Int16NotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>Int16NotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a 16 bit unsigned integer from a json field value, if defined, else returns 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="127" column="10" bodyfile="src/dpp/discordevents.cpp" bodystart="127" bodyend="134" declfile="include/dpp/discordevents.h" declline="89" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ab3ce48617238a41aebf1048467ebdfd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::SetInt16NotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, uint16_t &amp;v)</argsstring>
        <name>SetInt16NotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>uint16_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets an unsigned 16 bit integer from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="136" column="6" bodyfile="src/dpp/discordevents.cpp" bodystart="136" bodyend="141" declfile="include/dpp/discordevents.h" declline="96" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a36b79dfd40f25ebd4967f519b52e068f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t dpp::Int8NotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>Int8NotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns an 8 bit unsigned integer from a json field value, if defined, else returns 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="143" column="9" bodyfile="src/dpp/discordevents.cpp" bodystart="143" bodyend="150" declfile="include/dpp/discordevents.h" declline="103" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ad0ab4c9d88aa3224ca1b8513f9b7f91b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::SetInt8NotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, uint8_t &amp;v)</argsstring>
        <name>SetInt8NotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>uint8_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets an unsigned 8 bit integer from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="152" column="6" bodyfile="src/dpp/discordevents.cpp" bodystart="152" bodyend="157" declfile="include/dpp/discordevents.h" declline="110" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1af0b40be5029ec87c8df251f927e94eef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::BoolNotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>BoolNotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a boolean value from a json field value, if defined, else returns false. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="159" column="6" bodyfile="src/dpp/discordevents.cpp" bodystart="159" bodyend="166" declfile="include/dpp/discordevents.h" declline="117" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ab3eb25fd6578973e4b2bc86d5c073d1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::SetBoolNotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, bool &amp;v)</argsstring>
        <name>SetBoolNotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets a boolean from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="168" column="6" bodyfile="src/dpp/discordevents.cpp" bodystart="168" bodyend="173" declfile="include/dpp/discordevents.h" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a81eeb32f4e67cd830f6bc5f52c006c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::base64_encode</definition>
        <argsstring>(unsigned char const  *buf, unsigned int buffer_length)</argsstring>
        <name>base64_encode</name>
        <param>
          <type>unsigned char const *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>buffer_length</declname>
        </param>
        <briefdescription>
<para>Base64 encode data into a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw binary buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer length to encode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The base64 encoded string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="175" column="13" bodyfile="src/dpp/discordevents.cpp" bodystart="175" bodyend="200" declfile="include/dpp/discordevents.h" declline="146" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a39627e093f238673664294587921a590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t dpp::TimestampNotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>TimestampNotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a time_t from an ISO8601 timestamp field in a json value, if defined, else returns epoch value of 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="202" column="8" bodyfile="src/dpp/discordevents.cpp" bodystart="202" bodyend="224" declfile="include/dpp/discordevents.h" declline="132" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ad8d0229b64fda0313bdedc5966227aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::SetTimestampNotNull</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, time_t &amp;v)</argsstring>
        <name>SetTimestampNotNull</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>time_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets an timestamp from a json field value containing an ISO8601 string, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/discordevents.cpp" line="226" column="6" bodyfile="src/dpp/discordevents.cpp" bodystart="226" bodyend="248" declfile="include/dpp/discordevents.h" declline="139" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a177af60de5536cff95f417fce3d9487a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, guild_member &amp;gm)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> &amp;</type>
          <declname>gm</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize a <ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gm</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/guild.cpp" line="108" column="6" bodyfile="src/dpp/guild.cpp" bodystart="108" bodyend="123" declfile="include/dpp/guild.h" declline="428" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1acd18d41e47000c592ab63b702335e184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::to_json</definition>
        <argsstring>(json &amp;j, const component &amp;cp)</argsstring>
        <name>to_json</name>
        <param>
          <type><ref refid="namespacedpp_1ae9134a9d8edf8adcb87e979bb7a7343e" kindref="member">json</ref> &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="classdpp_1_1component" kindref="compound">component</ref> &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/message.cpp" line="129" column="6" bodyfile="src/dpp/message.cpp" bodystart="129" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a4d0e7257dbc68790bbaa6a34a20b776d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::populate_result</definition>
        <argsstring>(const std::string &amp;url, cluster *owner, http_request_completion_t &amp;rv, const httplib::Result &amp;res)</argsstring>
        <name>populate_result</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type><ref refid="classdpp_1_1cluster" kindref="compound">cluster</ref> *</type>
          <declname>owner</declname>
        </param>
        <param>
          <type><ref refid="structdpp_1_1http__request__completion__t" kindref="compound">http_request_completion_t</ref> &amp;</type>
          <declname>rv</declname>
        </param>
        <param>
          <type>const httplib::Result &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/queues.cpp" line="74" column="6" bodyfile="src/dpp/queues.cpp" bodystart="74" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a971c15a3dd2177d329cdef9c2cdc55f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::url_encode</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>url_encode</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encodes a url parameter similar to php urlencode() </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/queues.cpp" line="509" column="13" bodyfile="src/dpp/queues.cpp" bodystart="509" bodyend="530" declfile="include/dpp/queues.h" declline="35" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ae5041ec3547b4d4b7bf3416eea9b6403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::to_json</definition>
        <argsstring>(nlohmann::json &amp;j, const command_option_choice &amp;choice)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="structdpp_1_1command__option__choice" kindref="compound">command_option_choice</ref> &amp;</type>
          <declname>choice</declname>
        </param>
        <briefdescription>
<para>helper function to serialize a <ref refid="structdpp_1_1command__option__choice" kindref="compound">command_option_choice</ref> to json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>choice</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structdpp_1_1command__option__choice" kindref="compound">command_option_choice</ref> to be serialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/slashcommand.cpp" line="45" column="6" bodyfile="src/dpp/slashcommand.cpp" bodystart="45" bodyend="56" declfile="include/dpp/slashcommand.h" declline="100" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ae6a96c54dc4f6dad8f8f6bbe05fea254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::to_json</definition>
        <argsstring>(nlohmann::json &amp;j, const command_option &amp;opt)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref> &amp;</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
<para>helper function to serialize a <ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref> to json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opt</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref> to be serialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/slashcommand.cpp" line="58" column="6" bodyfile="src/dpp/slashcommand.cpp" bodystart="58" bodyend="89" declfile="include/dpp/slashcommand.h" declline="167" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a752b7140de023c34db60c92363aacf3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::to_json</definition>
        <argsstring>(nlohmann::json &amp;j, const command_permission &amp;cp)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="classdpp_1_1command__permission" kindref="compound">command_permission</ref> &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>helper function to serialize a <ref refid="classdpp_1_1command__permission" kindref="compound">command_permission</ref> to json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cp</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classdpp_1_1command__permission" kindref="compound">command_permission</ref> to be serialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/slashcommand.cpp" line="91" column="6" bodyfile="src/dpp/slashcommand.cpp" bodystart="91" bodyend="95" declfile="include/dpp/slashcommand.h" declline="412" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a735482218b54177427bc882605fa1e4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::to_json</definition>
        <argsstring>(nlohmann::json &amp;j, const guild_command_permissions &amp;gcp)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="classdpp_1_1guild__command__permissions" kindref="compound">guild_command_permissions</ref> &amp;</type>
          <declname>gcp</declname>
        </param>
        <briefdescription>
<para>helper function to serialize a <ref refid="classdpp_1_1guild__command__permissions" kindref="compound">guild_command_permissions</ref> to json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gcp</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classdpp_1_1guild__command__permissions" kindref="compound">guild_command_permissions</ref> to be serialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/slashcommand.cpp" line="97" column="6" bodyfile="src/dpp/slashcommand.cpp" bodystart="97" bodyend="102" declfile="include/dpp/slashcommand.h" declline="433" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a85aad7db48e1fc97a00f92044fa2c1c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::to_json</definition>
        <argsstring>(nlohmann::json &amp;j, const slashcommand &amp;cmd)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="classdpp_1_1slashcommand" kindref="compound">slashcommand</ref> &amp;</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>helper function to serialize a slashcommand to json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>slashcommand to be serialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/slashcommand.cpp" line="104" column="6" bodyfile="src/dpp/slashcommand.cpp" bodystart="104" bodyend="138" declfile="include/dpp/slashcommand.h" declline="581" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ac2ac98206ba62a7ddba95355743a9e07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, command_data_option &amp;cdo)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structdpp_1_1command__data__option" kindref="compound">command_data_option</ref> &amp;</type>
          <declname>cdo</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize a <ref refid="structdpp_1_1command__data__option" kindref="compound">command_data_option</ref> from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cdo</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structdpp_1_1command__data__option" kindref="compound">command_data_option</ref> to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/slashcommand.cpp" line="222" column="6" bodyfile="src/dpp/slashcommand.cpp" bodystart="222" bodyend="261" declfile="include/dpp/slashcommand.h" declline="285" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a1bfffa121ee7a78fe2c0e4d4a9a7fa17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, command_interaction &amp;ci)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structdpp_1_1command__interaction" kindref="compound">command_interaction</ref> &amp;</type>
          <declname>ci</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize a <ref refid="structdpp_1_1command__interaction" kindref="compound">command_interaction</ref> from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ci</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structdpp_1_1command__interaction" kindref="compound">command_interaction</ref> to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/slashcommand.cpp" line="263" column="6" bodyfile="src/dpp/slashcommand.cpp" bodystart="263" bodyend="270" declfile="include/dpp/slashcommand.h" declline="314" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1aabc378142329f7d4fe1ac82c81027114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, component_interaction &amp;bi)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structdpp_1_1component__interaction" kindref="compound">component_interaction</ref> &amp;</type>
          <declname>bi</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize a <ref refid="structdpp_1_1component__interaction" kindref="compound">component_interaction</ref> from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bi</parametername>
</parameternamelist>
<parameterdescription>
<para>button_interaction to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/slashcommand.cpp" line="272" column="6" bodyfile="src/dpp/slashcommand.cpp" bodystart="272" bodyend="281" declfile="include/dpp/slashcommand.h" declline="338" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a1d5a166cc8328a1d2728e9e451c966f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, interaction &amp;i)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="classdpp_1_1interaction" kindref="compound">interaction</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize an interaction from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>interaction to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/slashcommand.cpp" line="283" column="6" bodyfile="src/dpp/slashcommand.cpp" bodystart="283" bodyend="357" declfile="include/dpp/slashcommand.h" declline="383" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a36d2c45cce93740da4da28ef18e90a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, user &amp;u)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="classdpp_1_1user" kindref="compound">user</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize a user from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>user to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/user.cpp" line="156" column="6" bodyfile="src/dpp/user.cpp" bodystart="156" bodyend="182" declfile="include/dpp/user.h" declline="244" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a981df68922716d97ba921fd2027c3513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; dpp::tokenize</definition>
        <argsstring>(std::string const &amp;in, const char *sep=&quot;\r\n&quot;)</argsstring>
        <name>tokenize</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sep</declname>
          <defval>&quot;\r\n&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dpp/wsclient.cpp" line="126" column="13" bodyfile="src/dpp/wsclient.cpp" bodystart="126" bodyend="136"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The main namespace for D++ functions. classes and types. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/dpp/auditlog.cpp" line="26" column="1"/>
  </compounddef>
</doxygen>
