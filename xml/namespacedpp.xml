<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="namespacedpp" kind="namespace" language="C++">
    <compoundname>dpp</compoundname>
    <innerclass refid="classdpp_1_1activity" prot="public">dpp::activity</innerclass>
    <innerclass refid="structdpp_1_1activity__assets" prot="public">dpp::activity_assets</innerclass>
    <innerclass refid="structdpp_1_1activity__button" prot="public">dpp::activity_button</innerclass>
    <innerclass refid="structdpp_1_1activity__party" prot="public">dpp::activity_party</innerclass>
    <innerclass refid="structdpp_1_1activity__secrets" prot="public">dpp::activity_secrets</innerclass>
    <innerclass refid="classdpp_1_1app__team" prot="public">dpp::app_team</innerclass>
    <innerclass refid="classdpp_1_1application" prot="public">dpp::application</innerclass>
    <innerclass refid="structdpp_1_1application__install__params" prot="public">dpp::application_install_params</innerclass>
    <innerclass refid="structdpp_1_1attachment" prot="public">dpp::attachment</innerclass>
    <innerclass refid="structdpp_1_1audit__change" prot="public">dpp::audit_change</innerclass>
    <innerclass refid="structdpp_1_1audit__entry" prot="public">dpp::audit_entry</innerclass>
    <innerclass refid="structdpp_1_1audit__extra" prot="public">dpp::audit_extra</innerclass>
    <innerclass refid="classdpp_1_1auditlog" prot="public">dpp::auditlog</innerclass>
    <innerclass refid="structdpp_1_1autocomplete__interaction" prot="public">dpp::autocomplete_interaction</innerclass>
    <innerclass refid="structdpp_1_1autocomplete__t" prot="public">dpp::autocomplete_t</innerclass>
    <innerclass refid="structdpp_1_1automod__action" prot="public">dpp::automod_action</innerclass>
    <innerclass refid="structdpp_1_1automod__metadata" prot="public">dpp::automod_metadata</innerclass>
    <innerclass refid="classdpp_1_1automod__rule" prot="public">dpp::automod_rule</innerclass>
    <innerclass refid="structdpp_1_1automod__rule__create__t" prot="public">dpp::automod_rule_create_t</innerclass>
    <innerclass refid="structdpp_1_1automod__rule__delete__t" prot="public">dpp::automod_rule_delete_t</innerclass>
    <innerclass refid="structdpp_1_1automod__rule__execute__t" prot="public">dpp::automod_rule_execute_t</innerclass>
    <innerclass refid="structdpp_1_1automod__rule__update__t" prot="public">dpp::automod_rule_update_t</innerclass>
    <innerclass refid="structdpp_1_1awaitable" prot="public">dpp::awaitable</innerclass>
    <innerclass refid="classdpp_1_1ban" prot="public">dpp::ban</innerclass>
    <innerclass refid="structdpp_1_1bucket__t" prot="public">dpp::bucket_t</innerclass>
    <innerclass refid="structdpp_1_1button__click__t" prot="public">dpp::button_click_t</innerclass>
    <innerclass refid="classdpp_1_1cache" prot="public">dpp::cache</innerclass>
    <innerclass refid="classdpp_1_1cache__exception" prot="public">dpp::cache_exception</innerclass>
    <innerclass refid="structdpp_1_1cache__policy__t" prot="public">dpp::cache_policy_t</innerclass>
    <innerclass refid="classdpp_1_1channel" prot="public">dpp::channel</innerclass>
    <innerclass refid="classdpp_1_1channel__collector" prot="public">dpp::channel_collector</innerclass>
    <innerclass refid="structdpp_1_1channel__create__t" prot="public">dpp::channel_create_t</innerclass>
    <innerclass refid="structdpp_1_1channel__delete__t" prot="public">dpp::channel_delete_t</innerclass>
    <innerclass refid="structdpp_1_1channel__pins__update__t" prot="public">dpp::channel_pins_update_t</innerclass>
    <innerclass refid="structdpp_1_1channel__update__t" prot="public">dpp::channel_update_t</innerclass>
    <innerclass refid="classdpp_1_1cluster" prot="public">dpp::cluster</innerclass>
    <innerclass refid="classdpp_1_1collected__reaction" prot="public">dpp::collected_reaction</innerclass>
    <innerclass refid="classdpp_1_1collector" prot="public">dpp::collector</innerclass>
    <innerclass refid="structdpp_1_1command__data__option" prot="public">dpp::command_data_option</innerclass>
    <innerclass refid="structdpp_1_1command__info__t" prot="public">dpp::command_info_t</innerclass>
    <innerclass refid="structdpp_1_1command__interaction" prot="public">dpp::command_interaction</innerclass>
    <innerclass refid="structdpp_1_1command__option" prot="public">dpp::command_option</innerclass>
    <innerclass refid="structdpp_1_1command__option__choice" prot="public">dpp::command_option_choice</innerclass>
    <innerclass refid="classdpp_1_1command__permission" prot="public">dpp::command_permission</innerclass>
    <innerclass refid="structdpp_1_1command__resolved" prot="public">dpp::command_resolved</innerclass>
    <innerclass refid="structdpp_1_1command__source" prot="public">dpp::command_source</innerclass>
    <innerclass refid="classdpp_1_1commandhandler" prot="public">dpp::commandhandler</innerclass>
    <innerclass refid="classdpp_1_1component" prot="public">dpp::component</innerclass>
    <innerclass refid="structdpp_1_1component__interaction" prot="public">dpp::component_interaction</innerclass>
    <innerclass refid="structdpp_1_1confirmation" prot="public">dpp::confirmation</innerclass>
    <innerclass refid="structdpp_1_1confirmation__callback__t" prot="public">dpp::confirmation_callback_t</innerclass>
    <innerclass refid="classdpp_1_1connection" prot="public">dpp::connection</innerclass>
    <innerclass refid="classdpp_1_1connection__exception" prot="public">dpp::connection_exception</innerclass>
    <innerclass refid="structdpp_1_1context__menu__t" prot="public">dpp::context_menu_t</innerclass>
    <innerclass refid="classdpp_1_1discord__client" prot="public">dpp::discord_client</innerclass>
    <innerclass refid="classdpp_1_1discord__voice__client" prot="public">dpp::discord_voice_client</innerclass>
    <innerclass refid="structdpp_1_1dns__cache__entry" prot="public">dpp::dns_cache_entry</innerclass>
    <innerclass refid="classdpp_1_1dtemplate" prot="public">dpp::dtemplate</innerclass>
    <innerclass refid="structdpp_1_1embed" prot="public">dpp::embed</innerclass>
    <innerclass refid="structdpp_1_1embed__author" prot="public">dpp::embed_author</innerclass>
    <innerclass refid="structdpp_1_1embed__field" prot="public">dpp::embed_field</innerclass>
    <innerclass refid="structdpp_1_1embed__footer" prot="public">dpp::embed_footer</innerclass>
    <innerclass refid="structdpp_1_1embed__image" prot="public">dpp::embed_image</innerclass>
    <innerclass refid="structdpp_1_1embed__provider" prot="public">dpp::embed_provider</innerclass>
    <innerclass refid="classdpp_1_1emoji" prot="public">dpp::emoji</innerclass>
    <innerclass refid="structdpp_1_1error__detail" prot="public">dpp::error_detail</innerclass>
    <innerclass refid="structdpp_1_1error__info" prot="public">dpp::error_info</innerclass>
    <innerclass refid="structdpp_1_1etf__buffer" prot="public">dpp::etf_buffer</innerclass>
    <innerclass refid="classdpp_1_1etf__parser" prot="public">dpp::etf_parser</innerclass>
    <innerclass refid="structdpp_1_1event__dispatch__t" prot="public">dpp::event_dispatch_t</innerclass>
    <innerclass refid="structdpp_1_1event__entities" prot="public">dpp::event_entities</innerclass>
    <innerclass refid="structdpp_1_1event__member" prot="public">dpp::event_member</innerclass>
    <innerclass refid="classdpp_1_1exception" prot="public">dpp::exception</innerclass>
    <innerclass refid="classdpp_1_1file__exception" prot="public">dpp::file_exception</innerclass>
    <innerclass refid="structdpp_1_1form__submit__t" prot="public">dpp::form_submit_t</innerclass>
    <innerclass refid="structdpp_1_1forum__tag" prot="public">dpp::forum_tag</innerclass>
    <innerclass refid="structdpp_1_1gateway" prot="public">dpp::gateway</innerclass>
    <innerclass refid="classdpp_1_1guild" prot="public">dpp::guild</innerclass>
    <innerclass refid="structdpp_1_1guild__ban__add__t" prot="public">dpp::guild_ban_add_t</innerclass>
    <innerclass refid="structdpp_1_1guild__ban__remove__t" prot="public">dpp::guild_ban_remove_t</innerclass>
    <innerclass refid="classdpp_1_1guild__command__permissions" prot="public">dpp::guild_command_permissions</innerclass>
    <innerclass refid="structdpp_1_1guild__create__t" prot="public">dpp::guild_create_t</innerclass>
    <innerclass refid="structdpp_1_1guild__delete__t" prot="public">dpp::guild_delete_t</innerclass>
    <innerclass refid="structdpp_1_1guild__emojis__update__t" prot="public">dpp::guild_emojis_update_t</innerclass>
    <innerclass refid="structdpp_1_1guild__integrations__update__t" prot="public">dpp::guild_integrations_update_t</innerclass>
    <innerclass refid="structdpp_1_1guild__join__request__delete__t" prot="public">dpp::guild_join_request_delete_t</innerclass>
    <innerclass refid="classdpp_1_1guild__member" prot="public">dpp::guild_member</innerclass>
    <innerclass refid="structdpp_1_1guild__member__add__t" prot="public">dpp::guild_member_add_t</innerclass>
    <innerclass refid="structdpp_1_1guild__member__remove__t" prot="public">dpp::guild_member_remove_t</innerclass>
    <innerclass refid="structdpp_1_1guild__member__update__t" prot="public">dpp::guild_member_update_t</innerclass>
    <innerclass refid="structdpp_1_1guild__members__chunk__t" prot="public">dpp::guild_members_chunk_t</innerclass>
    <innerclass refid="structdpp_1_1guild__role__create__t" prot="public">dpp::guild_role_create_t</innerclass>
    <innerclass refid="structdpp_1_1guild__role__delete__t" prot="public">dpp::guild_role_delete_t</innerclass>
    <innerclass refid="structdpp_1_1guild__role__update__t" prot="public">dpp::guild_role_update_t</innerclass>
    <innerclass refid="structdpp_1_1guild__scheduled__event__create__t" prot="public">dpp::guild_scheduled_event_create_t</innerclass>
    <innerclass refid="structdpp_1_1guild__scheduled__event__delete__t" prot="public">dpp::guild_scheduled_event_delete_t</innerclass>
    <innerclass refid="structdpp_1_1guild__scheduled__event__update__t" prot="public">dpp::guild_scheduled_event_update_t</innerclass>
    <innerclass refid="structdpp_1_1guild__scheduled__event__user__add__t" prot="public">dpp::guild_scheduled_event_user_add_t</innerclass>
    <innerclass refid="structdpp_1_1guild__scheduled__event__user__remove__t" prot="public">dpp::guild_scheduled_event_user_remove_t</innerclass>
    <innerclass refid="structdpp_1_1guild__stickers__update__t" prot="public">dpp::guild_stickers_update_t</innerclass>
    <innerclass refid="structdpp_1_1guild__update__t" prot="public">dpp::guild_update_t</innerclass>
    <innerclass refid="classdpp_1_1guild__widget" prot="public">dpp::guild_widget</innerclass>
    <innerclass refid="structdpp_1_1http__connect__info" prot="public">dpp::http_connect_info</innerclass>
    <innerclass refid="classdpp_1_1http__request" prot="public">dpp::http_request</innerclass>
    <innerclass refid="structdpp_1_1http__request__completion__t" prot="public">dpp::http_request_completion_t</innerclass>
    <innerclass refid="classdpp_1_1https__client" prot="public">dpp::https_client</innerclass>
    <innerclass refid="classdpp_1_1in__thread" prot="public">dpp::in_thread</innerclass>
    <innerclass refid="classdpp_1_1integration" prot="public">dpp::integration</innerclass>
    <innerclass refid="structdpp_1_1integration__app" prot="public">dpp::integration_app</innerclass>
    <innerclass refid="structdpp_1_1integration__create__t" prot="public">dpp::integration_create_t</innerclass>
    <innerclass refid="structdpp_1_1integration__delete__t" prot="public">dpp::integration_delete_t</innerclass>
    <innerclass refid="structdpp_1_1integration__update__t" prot="public">dpp::integration_update_t</innerclass>
    <innerclass refid="classdpp_1_1interaction" prot="public">dpp::interaction</innerclass>
    <innerclass refid="structdpp_1_1interaction__create__t" prot="public">dpp::interaction_create_t</innerclass>
    <innerclass refid="structdpp_1_1interaction__modal__response" prot="public">dpp::interaction_modal_response</innerclass>
    <innerclass refid="structdpp_1_1interaction__response" prot="public">dpp::interaction_response</innerclass>
    <innerclass refid="classdpp_1_1invalid__token__exception" prot="public">dpp::invalid_token_exception</innerclass>
    <innerclass refid="classdpp_1_1invite" prot="public">dpp::invite</innerclass>
    <innerclass refid="structdpp_1_1invite__create__t" prot="public">dpp::invite_create_t</innerclass>
    <innerclass refid="structdpp_1_1invite__delete__t" prot="public">dpp::invite_delete_t</innerclass>
    <innerclass refid="structdpp_1_1json__interface" prot="public">dpp::json_interface</innerclass>
    <innerclass refid="classdpp_1_1length__exception" prot="public">dpp::length_exception</innerclass>
    <innerclass refid="structdpp_1_1log__t" prot="public">dpp::log_t</innerclass>
    <innerclass refid="classdpp_1_1logic__exception" prot="public">dpp::logic_exception</innerclass>
    <innerclass refid="classdpp_1_1managed" prot="public">dpp::managed</innerclass>
    <innerclass refid="structdpp_1_1message" prot="public">dpp::message</innerclass>
    <innerclass refid="classdpp_1_1message__collector" prot="public">dpp::message_collector</innerclass>
    <innerclass refid="structdpp_1_1message__context__menu__t" prot="public">dpp::message_context_menu_t</innerclass>
    <innerclass refid="structdpp_1_1message__create__t" prot="public">dpp::message_create_t</innerclass>
    <innerclass refid="structdpp_1_1message__delete__bulk__t" prot="public">dpp::message_delete_bulk_t</innerclass>
    <innerclass refid="structdpp_1_1message__delete__t" prot="public">dpp::message_delete_t</innerclass>
    <innerclass refid="structdpp_1_1message__reaction__add__t" prot="public">dpp::message_reaction_add_t</innerclass>
    <innerclass refid="structdpp_1_1message__reaction__remove__all__t" prot="public">dpp::message_reaction_remove_all_t</innerclass>
    <innerclass refid="structdpp_1_1message__reaction__remove__emoji__t" prot="public">dpp::message_reaction_remove_emoji_t</innerclass>
    <innerclass refid="structdpp_1_1message__reaction__remove__t" prot="public">dpp::message_reaction_remove_t</innerclass>
    <innerclass refid="structdpp_1_1message__update__t" prot="public">dpp::message_update_t</innerclass>
    <innerclass refid="structdpp_1_1multipart__content" prot="public">dpp::multipart_content</innerclass>
    <innerclass refid="classdpp_1_1oneshot__timer" prot="public">dpp::oneshot_timer</innerclass>
    <innerclass refid="structdpp_1_1param__info" prot="public">dpp::param_info</innerclass>
    <innerclass refid="classdpp_1_1parse__exception" prot="public">dpp::parse_exception</innerclass>
    <innerclass refid="classdpp_1_1permission" prot="public">dpp::permission</innerclass>
    <innerclass refid="structdpp_1_1permission__overwrite" prot="public">dpp::permission_overwrite</innerclass>
    <innerclass refid="classdpp_1_1presence" prot="public">dpp::presence</innerclass>
    <innerclass refid="structdpp_1_1presence__update__t" prot="public">dpp::presence_update_t</innerclass>
    <innerclass refid="structdpp_1_1promise" prot="public">dpp::promise</innerclass>
    <innerclass refid="structdpp_1_1prune" prot="public">dpp::prune</innerclass>
    <innerclass refid="structdpp_1_1reaction" prot="public">dpp::reaction</innerclass>
    <innerclass refid="classdpp_1_1reaction__collector" prot="public">dpp::reaction_collector</innerclass>
    <innerclass refid="structdpp_1_1ready__t" prot="public">dpp::ready_t</innerclass>
    <innerclass refid="classdpp_1_1request__queue" prot="public">dpp::request_queue</innerclass>
    <innerclass refid="structdpp_1_1resolved__user" prot="public">dpp::resolved_user</innerclass>
    <innerclass refid="classdpp_1_1rest__exception" prot="public">dpp::rest_exception</innerclass>
    <innerclass refid="structdpp_1_1resumed__t" prot="public">dpp::resumed_t</innerclass>
    <innerclass refid="classdpp_1_1role" prot="public">dpp::role</innerclass>
    <innerclass refid="classdpp_1_1role__collector" prot="public">dpp::role_collector</innerclass>
    <innerclass refid="structdpp_1_1scheduled__event" prot="public">dpp::scheduled_event</innerclass>
    <innerclass refid="classdpp_1_1scheduled__event__collector" prot="public">dpp::scheduled_event_collector</innerclass>
    <innerclass refid="structdpp_1_1select__click__t" prot="public">dpp::select_click_t</innerclass>
    <innerclass refid="structdpp_1_1select__option" prot="public">dpp::select_option</innerclass>
    <innerclass refid="classdpp_1_1slashcommand" prot="public">dpp::slashcommand</innerclass>
    <innerclass refid="structdpp_1_1slashcommand__t" prot="public">dpp::slashcommand_t</innerclass>
    <innerclass refid="classdpp_1_1snowflake" prot="public">dpp::snowflake</innerclass>
    <innerclass refid="classdpp_1_1ssl__client" prot="public">dpp::ssl_client</innerclass>
    <innerclass refid="structdpp_1_1stage__instance" prot="public">dpp::stage_instance</innerclass>
    <innerclass refid="structdpp_1_1stage__instance__create__t" prot="public">dpp::stage_instance_create_t</innerclass>
    <innerclass refid="structdpp_1_1stage__instance__delete__t" prot="public">dpp::stage_instance_delete_t</innerclass>
    <innerclass refid="structdpp_1_1stage__instance__update__t" prot="public">dpp::stage_instance_update_t</innerclass>
    <innerclass refid="structdpp_1_1sticker" prot="public">dpp::sticker</innerclass>
    <innerclass refid="structdpp_1_1sticker__pack" prot="public">dpp::sticker_pack</innerclass>
    <innerclass refid="structdpp_1_1task" prot="public">dpp::task</innerclass>
    <innerclass refid="classdpp_1_1team__member" prot="public">dpp::team_member</innerclass>
    <innerclass refid="classdpp_1_1thread" prot="public">dpp::thread</innerclass>
    <innerclass refid="classdpp_1_1thread__collector" prot="public">dpp::thread_collector</innerclass>
    <innerclass refid="structdpp_1_1thread__create__t" prot="public">dpp::thread_create_t</innerclass>
    <innerclass refid="structdpp_1_1thread__delete__t" prot="public">dpp::thread_delete_t</innerclass>
    <innerclass refid="structdpp_1_1thread__list__sync__t" prot="public">dpp::thread_list_sync_t</innerclass>
    <innerclass refid="structdpp_1_1thread__member" prot="public">dpp::thread_member</innerclass>
    <innerclass refid="structdpp_1_1thread__member__update__t" prot="public">dpp::thread_member_update_t</innerclass>
    <innerclass refid="structdpp_1_1thread__members__update__t" prot="public">dpp::thread_members_update_t</innerclass>
    <innerclass refid="structdpp_1_1thread__metadata" prot="public">dpp::thread_metadata</innerclass>
    <innerclass refid="structdpp_1_1thread__update__t" prot="public">dpp::thread_update_t</innerclass>
    <innerclass refid="classdpp_1_1timed__listener" prot="public">dpp::timed_listener</innerclass>
    <innerclass refid="structdpp_1_1timer__t" prot="public">dpp::timer_t</innerclass>
    <innerclass refid="uniondpp_1_1type__punner" prot="public">dpp::type_punner</innerclass>
    <innerclass refid="structdpp_1_1typing__start__t" prot="public">dpp::typing_start_t</innerclass>
    <innerclass refid="classdpp_1_1user" prot="public">dpp::user</innerclass>
    <innerclass refid="structdpp_1_1user__context__menu__t" prot="public">dpp::user_context_menu_t</innerclass>
    <innerclass refid="classdpp_1_1user__identified" prot="public">dpp::user_identified</innerclass>
    <innerclass refid="structdpp_1_1user__update__t" prot="public">dpp::user_update_t</innerclass>
    <innerclass refid="structdpp_1_1version__checker" prot="public">dpp::version_checker</innerclass>
    <innerclass refid="structdpp_1_1voice__buffer__send__t" prot="public">dpp::voice_buffer_send_t</innerclass>
    <innerclass refid="structdpp_1_1voice__client__disconnect__t" prot="public">dpp::voice_client_disconnect_t</innerclass>
    <innerclass refid="structdpp_1_1voice__client__speaking__t" prot="public">dpp::voice_client_speaking_t</innerclass>
    <innerclass refid="classdpp_1_1voice__exception" prot="public">dpp::voice_exception</innerclass>
    <innerclass refid="structdpp_1_1voice__out__packet" prot="public">dpp::voice_out_packet</innerclass>
    <innerclass refid="structdpp_1_1voice__ready__t" prot="public">dpp::voice_ready_t</innerclass>
    <innerclass refid="structdpp_1_1voice__receive__t" prot="public">dpp::voice_receive_t</innerclass>
    <innerclass refid="structdpp_1_1voice__server__update__t" prot="public">dpp::voice_server_update_t</innerclass>
    <innerclass refid="structdpp_1_1voice__state__update__t" prot="public">dpp::voice_state_update_t</innerclass>
    <innerclass refid="structdpp_1_1voice__track__marker__t" prot="public">dpp::voice_track_marker_t</innerclass>
    <innerclass refid="structdpp_1_1voice__user__talking__t" prot="public">dpp::voice_user_talking_t</innerclass>
    <innerclass refid="classdpp_1_1voiceconn" prot="public">dpp::voiceconn</innerclass>
    <innerclass refid="classdpp_1_1voiceregion" prot="public">dpp::voiceregion</innerclass>
    <innerclass refid="classdpp_1_1voicestate" prot="public">dpp::voicestate</innerclass>
    <innerclass refid="classdpp_1_1webhook" prot="public">dpp::webhook</innerclass>
    <innerclass refid="structdpp_1_1webhooks__update__t" prot="public">dpp::webhooks_update_t</innerclass>
    <innerclass refid="classdpp_1_1websocket__client" prot="public">dpp::websocket_client</innerclass>
    <innerclass refid="structdpp_1_1welcome__channel__t" prot="public">dpp::welcome_channel_t</innerclass>
    <innerclass refid="structdpp_1_1welcome__screen__t" prot="public">dpp::welcome_screen_t</innerclass>
    <innernamespace refid="namespacedpp_1_1colors">dpp::colors</innernamespace>
    <innernamespace refid="namespacedpp_1_1embed__type">dpp::embed_type</innernamespace>
    <innernamespace refid="namespacedpp_1_1events">dpp::events</innernamespace>
    <innernamespace refid="namespacedpp_1_1utility">dpp::utility</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacedpp_1abc401d86119c6443bf72d736857c1a58" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>command_option_type</name>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a1b0940a3156aada72e6fc41b0e17612c" prot="public">
          <name>co_sub_command</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A sub-command </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58aaf7efc648d35b8a702480f916c904547" prot="public">
          <name>co_sub_command_group</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A sub-command group </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58acd751201efe224973dfe952d8658a384" prot="public">
          <name>co_string</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A string value </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a7e18bae49699df4948c28c12bfa8bd19" prot="public">
          <name>co_integer</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An integer value </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a804453a3a94d413b634544e57f5ae2cc" prot="public">
          <name>co_boolean</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A boolean value </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a5a2ea837ca5ec64e6385acf392cef1e2" prot="public">
          <name>co_user</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A user snowflake id </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a96f8ffcbd6b293e75a0500d729fc9b31" prot="public">
          <name>co_channel</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A channel snowflake id. Includes all channel types and categories </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a4476d79df02a4909cd7931d5a7e5f0ac" prot="public">
          <name>co_role</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A role snowflake id </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a6104d8b3d8c608855ccf8eab2d60a821" prot="public">
          <name>co_mentionable</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A mentionable. Includes users and roles </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a516b70c3a0d502aeb6af3530c831e86b" prot="public">
          <name>co_number</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Any double between -2^53 and 2^53 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1abc401d86119c6443bf72d736857c1a58a51165f79fe5d1c99da7b663042d8622a" prot="public">
          <name>co_attachment</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>File attachment type </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents command option types. These are the possible parameter value types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="49" column="1" bodyfile="include/dpp/appcommand.h" bodystart="49" bodyend="72"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a83479ddaa45166def7719d5511b09d02" prot="public" static="no" strong="no">
        <type></type>
        <name>interaction_response_type</name>
        <enumvalue id="namespacedpp_1a83479ddaa45166def7719d5511b09d02a46a22844f01bdc70a45a67876e9eeede" prot="public">
          <name>ir_pong</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Acknowledge a Ping. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a83479ddaa45166def7719d5511b09d02a5a9b185d739d649208ea5e903391901c" prot="public">
          <name>ir_channel_message_with_source</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>respond to an interaction with a message </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a83479ddaa45166def7719d5511b09d02a34942bb9774f88000998c9f0c62b1294" prot="public">
          <name>ir_deferred_channel_message_with_source</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>Acknowledge an interaction and edit a response later, the user sees a loading state. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a83479ddaa45166def7719d5511b09d02a8f370bb2d780a47b45846bf92b099312" prot="public">
          <name>ir_deferred_update_message</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>for components, acknowledge an interaction and edit the original message later; the user does not see a loading state </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a83479ddaa45166def7719d5511b09d02a9a0239abd933c1bdf511e1c8285f0847" prot="public">
          <name>ir_update_message</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>for components, edit the message the component was attached to </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a83479ddaa45166def7719d5511b09d02a78d890228291650cd463e3fd43b1c075" prot="public">
          <name>ir_autocomplete_reply</name>
          <initializer>= 8</initializer>
          <briefdescription>
<para>Reply to autocomplete interaction. Be sure to do this within 500ms of the interaction! </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a83479ddaa45166def7719d5511b09d02a85b5ff6f0109f5832f7d70a998ed50f5" prot="public">
          <name>ir_modal_dialog</name>
          <initializer>= 9</initializer>
          <briefdescription>
<para>A modal dialog box. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Response types when responding to an interaction within on_interaction_create. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="289" column="1" bodyfile="include/dpp/appcommand.h" bodystart="289" bodyend="297"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a53805450964cf3ad4a26f673aebebd96" prot="public" static="no" strong="no">
        <type></type>
        <name>interaction_type</name>
        <enumvalue id="namespacedpp_1a53805450964cf3ad4a26f673aebebd96aa1b23d55f5737159520e3accb8be8275" prot="public">
          <name>it_ping</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>ping </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a53805450964cf3ad4a26f673aebebd96a5d50f8860f3910c3aa52b9ab866d11c0" prot="public">
          <name>it_application_command</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>application command (slash command) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a53805450964cf3ad4a26f673aebebd96a4daa10fcda2dd54b45128e86e40bfcc1" prot="public">
          <name>it_component_button</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>button click (component interaction) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a53805450964cf3ad4a26f673aebebd96aa7d743b466a7d074f308bf0671d98ed4" prot="public">
          <name>it_autocomplete</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Autocomplete interaction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a53805450964cf3ad4a26f673aebebd96a2260f71b08edd3a605b6bc6c49c0659b" prot="public">
          <name>it_modal_submit</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>Modal form submission. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Types of interaction in the <ref refid="classdpp_1_1interaction" kindref="compound">dpp::interaction</ref> class </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="544" column="1" bodyfile="include/dpp/appcommand.h" bodystart="544" bodyend="550"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a3af415bd74cead2c665a6a507ce843fb" prot="public" static="no" strong="no">
        <type></type>
        <name>slashcommand_contextmenu_type</name>
        <enumvalue id="namespacedpp_1a3af415bd74cead2c665a6a507ce843fba0de83a85048f2d44b3d70161de9e1824" prot="public">
          <name>ctxm_none</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Undefined context menu type. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a3af415bd74cead2c665a6a507ce843fba09b58fe33a8d8a5587a8e3676371151a" prot="public">
          <name>ctxm_chat_input</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>DEFAULT, these are the slash commands you&apos;re used to. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a3af415bd74cead2c665a6a507ce843fbaea38e9fafe712b690fe8db15c0eac659" prot="public">
          <name>ctxm_user</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Add command to user context menu. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a3af415bd74cead2c665a6a507ce843fbae5b2d37ae0e714e18602cbc2475ce88a" prot="public">
          <name>ctxm_message</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Add command to message context menu. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Right-click context menu types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="555" column="1" bodyfile="include/dpp/appcommand.h" bodystart="555" bodyend="560"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a63342923617f0829b64c53cd02fafd1b" prot="public" static="no" strong="no">
        <type></type>
        <name>component_type_t</name>
        <enumvalue id="namespacedpp_1a63342923617f0829b64c53cd02fafd1baad47b544b108daba6abab7fd9f91a51e" prot="public">
          <name>cotype_button</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Button. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a63342923617f0829b64c53cd02fafd1ba6e7793ef67aa0c149233df8719f579cc" prot="public">
          <name>cotype_select</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Option select list (drop-down) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Component type, either button or select. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="607" column="1" bodyfile="include/dpp/appcommand.h" bodystart="607" bodyend="616"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ac66e44bd22afee53242581010ddd3728" prot="public" static="no" strong="no">
        <type></type>
        <name>command_permission_type</name>
        <enumvalue id="namespacedpp_1ac66e44bd22afee53242581010ddd3728ad60a51c5528e7aaaddaa6b7d9209b49f" prot="public">
          <name>cpt_role</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Role permission. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ac66e44bd22afee53242581010ddd3728af54d0925e774551ebc092ada807b349d" prot="public">
          <name>cpt_user</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>User permission. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>type of permission in the <ref refid="classdpp_1_1command__permission" kindref="compound">dpp::command_permission</ref> class </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="889" column="1" bodyfile="include/dpp/appcommand.h" bodystart="889" bodyend="900"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ad2ee47e8839a8445d88bf66e927cb0d4" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>team_member_status</name>
        <enumvalue id="namespacedpp_1ad2ee47e8839a8445d88bf66e927cb0d4aadd1b9b1c6d956f1ca1ae6bf737e7230" prot="public">
          <name>tms_invited</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>User was invited to the team. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad2ee47e8839a8445d88bf66e927cb0d4ac08ecf36ff4980d4b1cc5ed3d0e4cf31" prot="public">
          <name>tms_accepted</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>User has accepted membership onto the team. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>status of a member of a team who maintain a bot/application </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/application.h" line="37" column="1" bodyfile="include/dpp/application.h" bodystart="37" bodyend="42"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a9ee31b61c76a466e853bf04c22a25b72" prot="public" static="no" strong="no">
        <type>uint32_t</type>
        <name>application_flags</name>
        <enumvalue id="namespacedpp_1a9ee31b61c76a466e853bf04c22a25b72a08dc8a2e3715e84bb24a63c7d158202a" prot="public">
          <name>apf_gateway_presence</name>
          <initializer>= (1 &lt;&lt; 12)</initializer>
          <briefdescription>
<para>Has gateway presence intent. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9ee31b61c76a466e853bf04c22a25b72a1455a34f5d35a17d88b671560f4a2822" prot="public">
          <name>apf_gateway_presence_limited</name>
          <initializer>= (1 &lt;&lt; 13)</initializer>
          <briefdescription>
<para>Has gateway presence intent for &lt;100 guilds. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9ee31b61c76a466e853bf04c22a25b72a6797cde1207f7f9e2ad8ecb2a3c477f6" prot="public">
          <name>apf_gateway_guild_members</name>
          <initializer>= (1 &lt;&lt; 14)</initializer>
          <briefdescription>
<para>Has guild members intent. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9ee31b61c76a466e853bf04c22a25b72a655d4febe1df4e5c3f6992cacd7ee3f1" prot="public">
          <name>apf_gateway_guild_members_limited</name>
          <initializer>= (1 &lt;&lt; 15)</initializer>
          <briefdescription>
<para>Has guild members intent for &lt;100 guilds. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9ee31b61c76a466e853bf04c22a25b72a8e2969052ac05d4aac4c7c1ad1ad8546" prot="public">
          <name>apf_verification_pending_guild_limit</name>
          <initializer>= (1 &lt;&lt; 16)</initializer>
          <briefdescription>
<para>Verification is pending. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9ee31b61c76a466e853bf04c22a25b72aa84f5e794fef323f94d4824d7c133033" prot="public">
          <name>apf_embedded</name>
          <initializer>= (1 &lt;&lt; 17)</initializer>
          <briefdescription>
<para>Embedded. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9ee31b61c76a466e853bf04c22a25b72a33aabc481930927e85b7a410bd456379" prot="public">
          <name>apf_gateway_message_content</name>
          <initializer>= (1 &lt;&lt; 18)</initializer>
          <briefdescription>
<para>Has approval for message content. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9ee31b61c76a466e853bf04c22a25b72a4d794600b5fa9f1479b0f43af7e31888" prot="public">
          <name>apf_gateway_message_content_limited</name>
          <initializer>= (1 &lt;&lt; 19)</initializer>
          <briefdescription>
<para>Has message content, but &lt;100 guilds. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9ee31b61c76a466e853bf04c22a25b72a401e761d72bd0b9bc94b95e4d2271d4e" prot="public">
          <name>apf_application_command_badge</name>
          <initializer>= (1 &lt;&lt; 23)</initializer>
          <briefdescription>
<para>Indicates if the app has registered global application commands. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flags for a bot or application. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/application.h" line="47" column="1" bodyfile="include/dpp/application.h" bodystart="47" bodyend="66"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3d" prot="public" static="no" strong="no">
        <type></type>
        <name>audit_type</name>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dac44ff864aff617a63ebd9601246d7742" prot="public">
          <name>aut_guild_update</name>
          <initializer>=	1</initializer>
          <briefdescription>
<para>Guild update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da8711f028368cf6df76e56b687d675006" prot="public">
          <name>aut_channel_create</name>
          <initializer>=	10</initializer>
          <briefdescription>
<para>Channel create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dacd9b4a98d27e94387b7f53a3b432f3ab" prot="public">
          <name>aut_channel_update</name>
          <initializer>=	11</initializer>
          <briefdescription>
<para>Channel update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da641b74bd5350c80129c119456fde402f" prot="public">
          <name>aut_channel_delete</name>
          <initializer>=	12</initializer>
          <briefdescription>
<para>Channel delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dacb72e0c3920bd76726937e5c92ee0acd" prot="public">
          <name>aut_channel_overwrite_create</name>
          <initializer>=	13</initializer>
          <briefdescription>
<para>Channel overwrite create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da239e0c0101a458f3797557e4ad45ee0b" prot="public">
          <name>aut_channel_overwrite_update</name>
          <initializer>=	14</initializer>
          <briefdescription>
<para>Channel overwrite update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dae8d03182e83800e29678ebfb04f1df94" prot="public">
          <name>aut_channel_overwrite_delete</name>
          <initializer>=	15</initializer>
          <briefdescription>
<para>Channel overwrite delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da0cbd9fbee92211f6766fbbccc9e6ebd2" prot="public">
          <name>aut_member_kick</name>
          <initializer>=	20</initializer>
          <briefdescription>
<para>Channel member kick. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3daf8d7596287374c1749dc8619977aaa9a" prot="public">
          <name>aut_member_prune</name>
          <initializer>=	21</initializer>
          <briefdescription>
<para>Channel member prune. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3daff619c3a047868175c1b3ff433e09abe" prot="public">
          <name>aut_member_ban_add</name>
          <initializer>=	22</initializer>
          <briefdescription>
<para>Channel member ban add. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dac03cfeefcc8d3d3d5c56e984e7aa88af" prot="public">
          <name>aut_member_ban_remove</name>
          <initializer>=	23</initializer>
          <briefdescription>
<para>Channel member ban remove. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da1aaffaee656b387059cfe3f85f50c60f" prot="public">
          <name>aut_member_update</name>
          <initializer>=	24</initializer>
          <briefdescription>
<para>Guild member update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da1e7d9bea51966ca345af284095ab5987" prot="public">
          <name>aut_member_role_update</name>
          <initializer>=	25</initializer>
          <briefdescription>
<para>Guild member role update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dabe897b344ab1ad466af19f1f62b3df99" prot="public">
          <name>aut_member_move</name>
          <initializer>=	26</initializer>
          <briefdescription>
<para>Guild member move. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da8f105ca0d6043b7f6df8500393410d3e" prot="public">
          <name>aut_member_disconnect</name>
          <initializer>=	27</initializer>
          <briefdescription>
<para>Guild member voice disconnect. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da8f54bfcfce55fa27ce8f3ea279af90f5" prot="public">
          <name>aut_bot_add</name>
          <initializer>=	28</initializer>
          <briefdescription>
<para>Guild bot add. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da577d37d974bca37507f96698a370f5d6" prot="public">
          <name>aut_role_create</name>
          <initializer>=	30</initializer>
          <briefdescription>
<para>Guild role create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dac983ab780a007d389a64e470818da24b" prot="public">
          <name>aut_role_update</name>
          <initializer>=	31</initializer>
          <briefdescription>
<para>Guild role update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da3a12e430d10e7adb7891ab7a7c0351a3" prot="public">
          <name>aut_role_delete</name>
          <initializer>=	32</initializer>
          <briefdescription>
<para>Guild role delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dad710b805e2cffdee0acc3978471531c7" prot="public">
          <name>aut_invite_create</name>
          <initializer>=	40</initializer>
          <briefdescription>
<para>Guild invite create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da0c82a5ff83035e5fb41f03c3bc9d31e1" prot="public">
          <name>aut_invite_update</name>
          <initializer>=	41</initializer>
          <briefdescription>
<para>Guild invite update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dafe9ed0c4ebb55ca6fc71d84179657ce0" prot="public">
          <name>aut_invite_delete</name>
          <initializer>=	42</initializer>
          <briefdescription>
<para>Guild invite delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da0a052b5ae2a48cf79545b5eb4634ec1e" prot="public">
          <name>aut_webhook_create</name>
          <initializer>=	50</initializer>
          <briefdescription>
<para>Guild webhook create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da8b0e4c2c57f07363bb91decc933a4e16" prot="public">
          <name>aut_webhook_update</name>
          <initializer>=	51</initializer>
          <briefdescription>
<para>Guild webhook update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da4d3b487279abd6baf5fc4330c6e7cd80" prot="public">
          <name>aut_webhook_delete</name>
          <initializer>=	52</initializer>
          <briefdescription>
<para>Guild webhook delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da565919ae96661b85448732b65aab6ede" prot="public">
          <name>aut_emoji_create</name>
          <initializer>=	60</initializer>
          <briefdescription>
<para>Guild emoji create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da41bb64a9468bfd325ccffd59dd59cb91" prot="public">
          <name>aut_emoji_update</name>
          <initializer>=	61</initializer>
          <briefdescription>
<para>Guild emoji update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3daceb20282697c73e1d5b1eef3ac45e19c" prot="public">
          <name>aut_emoji_delete</name>
          <initializer>=	62</initializer>
          <briefdescription>
<para>Guild emoji delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dad068bbed29517768ba7aff817cf5fd77" prot="public">
          <name>aut_message_delete</name>
          <initializer>=	72</initializer>
          <briefdescription>
<para>Guild message delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da0669793c484cf708f689aa9fcc94f7b3" prot="public">
          <name>aut_message_bulk_delete</name>
          <initializer>=	73</initializer>
          <briefdescription>
<para>Guild message bulk delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da1900d5cc6e660c81cf8c5cc6879aa3e8" prot="public">
          <name>aut_message_pin</name>
          <initializer>=	74</initializer>
          <briefdescription>
<para>Guild message pin. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da126ed4119f99b4b03778bd1b5028d7e6" prot="public">
          <name>aut_message_unpin</name>
          <initializer>=	75</initializer>
          <briefdescription>
<para>Guild message unpin. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da7962b7d68079e32d52216b76a8de4fe3" prot="public">
          <name>aut_integration_create</name>
          <initializer>=	80</initializer>
          <briefdescription>
<para>Guild integration create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da77243fb222755daaef89291e75f300e8" prot="public">
          <name>aut_integration_update</name>
          <initializer>=	81</initializer>
          <briefdescription>
<para>Guild integration update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da204955cf70a9f20762f162f29c583674" prot="public">
          <name>aut_integration_delete</name>
          <initializer>=	82</initializer>
          <briefdescription>
<para>Guild integration delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3daf5cd56aa01c56ae4c268c872bfed4b26" prot="public">
          <name>aut_stage_instance_create</name>
          <initializer>=	83</initializer>
          <briefdescription>
<para>Stage instance create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dac99002cba341e114b90c3ff37bbd9398" prot="public">
          <name>aut_stage_instance_update</name>
          <initializer>=	84</initializer>
          <briefdescription>
<para>Stage instance update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da094813c7b248e43b3cdac6efe5d2da19" prot="public">
          <name>aut_stage_instance_delete</name>
          <initializer>=	85</initializer>
          <briefdescription>
<para>stage instance delete </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3daeb04a4f9a9f3116846fd645fc606973b" prot="public">
          <name>aut_sticker_create</name>
          <initializer>=	90</initializer>
          <briefdescription>
<para>Sticker create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dacff873b5a978ed870f527fecaa81737c" prot="public">
          <name>aut_sticker_update</name>
          <initializer>=	91</initializer>
          <briefdescription>
<para>Sticker update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dab18b5d3d0cf359b42acc7314e3c7ccbb" prot="public">
          <name>aut_sticker_delete</name>
          <initializer>=	92</initializer>
          <briefdescription>
<para>Sticker delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da751a6146bc458b2d199fd54d321ab233" prot="public">
          <name>aut_guild_scheduled_event_create</name>
          <initializer>=	100</initializer>
          <briefdescription>
<para>Scheduled event creation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da4baee027cff2b059898f6c2756d9b850" prot="public">
          <name>aut_guild_scheduled_event_update</name>
          <initializer>=	101</initializer>
          <briefdescription>
<para>Scheduled event update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3daa7c2370a5ff71b2c746c6f84e9fbec35" prot="public">
          <name>aut_guild_scheduled_event_delete</name>
          <initializer>=	102</initializer>
          <briefdescription>
<para>Scheduled event deletion. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3daeae4705b887e90b3c3edea529244a444" prot="public">
          <name>aut_thread_create</name>
          <initializer>=	110</initializer>
          <briefdescription>
<para>Thread create. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da68ed76145ad8869ff1c4cc0e71794a2f" prot="public">
          <name>aut_thread_update</name>
          <initializer>=	111</initializer>
          <briefdescription>
<para>Thread update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da2f0656adcea25b6a7d811f43de66d772" prot="public">
          <name>aut_thread_delete</name>
          <initializer>=	112</initializer>
          <briefdescription>
<para>Thread delete. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da56d4210cb3246cf69a35ad4f9e50d3ee" prot="public">
          <name>aut_appcommand_permission_update</name>
          <initializer>=	121</initializer>
          <briefdescription>
<para>Application command permissions update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3dacfd1f4fd1d1faeb63dac7abfba4f4a48" prot="public">
          <name>aut_automod_rule_create</name>
          <initializer>=	140</initializer>
          <briefdescription>
<para>Auto moderation rule creation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da58a25fdc42553b266fabb6789c7581c1" prot="public">
          <name>aut_automod_rule_update</name>
          <initializer>=	141</initializer>
          <briefdescription>
<para>Auto moderation rule update. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3daacd059685b2f4ea31f0737f8fbad79be" prot="public">
          <name>aut_automod_rule_delete</name>
          <initializer>=	142</initializer>
          <briefdescription>
<para>Auto moderation rule deletion. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da7e0e253d58c1eeebf4d8c3a65d08975d" prot="public">
          <name>aut_automod_block_message</name>
          <initializer>=	143</initializer>
          <briefdescription>
<para>Auto moderation block message. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da072a4f02429a92e83acbd6502fe383e7" prot="public">
          <name>aut_automod_flag_to_channel</name>
          <initializer>=	144</initializer>
          <briefdescription>
<para>Message was flagged by AutoMod. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29a51ae6f6d959baee7d5e77d53d6c3da57a1690ffdfea4c9082a539aa966212b" prot="public">
          <name>aut_automod_user_communication_disabled</name>
          <initializer>=	145</initializer>
          <briefdescription>
<para>Member was timed out by AutoMod. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines types of audit log entry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/auditlog.h" line="34" column="1" bodyfile="include/dpp/auditlog.h" bodystart="34" bodyend="143"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a8d92860238000a25eeff7eed29ec1067" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>automod_preset_type</name>
        <enumvalue id="namespacedpp_1a8d92860238000a25eeff7eed29ec1067ae3d6e7a290032b8571d00acdc92ccc85" prot="public">
          <name>amod_preset_profanity</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Strong swearing. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a8d92860238000a25eeff7eed29ec1067a5d0f5f57914890b3f60fa03059ccfa63" prot="public">
          <name>amod_preset_sexual_content</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Sexual phrases and words. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a8d92860238000a25eeff7eed29ec1067ae05d576d5de5ddb272392fe7c5471e00" prot="public">
          <name>amod_preset_slurs</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Racial and other slurs, hate speech. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Possible types of preset filter lists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/automod.h" line="35" column="1" bodyfile="include/dpp/automod.h" bodystart="35" bodyend="48"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a3ad85ab5a039a0c7f46107a02440a14c" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>automod_action_type</name>
        <enumvalue id="namespacedpp_1a3ad85ab5a039a0c7f46107a02440a14ca1a78446ae2f6da41fb144c25e2b53e56" prot="public">
          <name>amod_action_block_message</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Block the message. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a3ad85ab5a039a0c7f46107a02440a14caccf0e42b2f286ea0631e4a427662425c" prot="public">
          <name>amod_action_send_alert</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Send an alert to a given channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a3ad85ab5a039a0c7f46107a02440a14ca8c7c0985bb106bc4da6690a0c1693fd8" prot="public">
          <name>amod_action_timeout</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>time out the user </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Action types to perform on filtering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/automod.h" line="53" column="1" bodyfile="include/dpp/automod.h" bodystart="53" bodyend="66"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a397e69e257d7cb9733f1449317e27d90" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>automod_event_type</name>
        <enumvalue id="namespacedpp_1a397e69e257d7cb9733f1449317e27d90a24fd461c263fecbfc3291b29b44e9338" prot="public">
          <name>amod_message_send</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Trigger on message send or edit. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Event types, only message send is currently supported. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/automod.h" line="71" column="1" bodyfile="include/dpp/automod.h" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a6c4401c19cd7e8b05ba2c066f1fdddb6" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>automod_trigger_type</name>
        <enumvalue id="namespacedpp_1a6c4401c19cd7e8b05ba2c066f1fdddb6a648f271e93317f37a59fa53ae8bcf292" prot="public">
          <name>amod_type_keyword</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Check if content contains words from a user defined list of keywords. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6c4401c19cd7e8b05ba2c066f1fdddb6a66616e096af7b4299ae5d013de686d57" prot="public">
          <name>amod_type_harmful_link</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Harmful/malware links. </para>
          </briefdescription>
          <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Removed by Discord </para>
</xrefdescription></xrefsect></para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6c4401c19cd7e8b05ba2c066f1fdddb6a5ab9fd884c477842d67045e962097fa2" prot="public">
          <name>amod_type_spam</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Check if content represents generic spam. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6c4401c19cd7e8b05ba2c066f1fdddb6ad17b8d9b0d990b569290be887484fc05" prot="public">
          <name>amod_type_keyword_preset</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Check if content contains words from discord pre-defined wordsets. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6c4401c19cd7e8b05ba2c066f1fdddb6a731ef6151c387a4310d83b39ad34eea7" prot="public">
          <name>amod_type_mention_spam</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>Check if content contains more mentions than allowed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of moderation to trigger. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/automod.h" line="81" column="1" bodyfile="include/dpp/automod.h" bodystart="81" bodyend="103"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a732e832861149a278f27ea7840b8e4ca" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>channel_type</name>
        <enumvalue id="namespacedpp_1a732e832861149a278f27ea7840b8e4caadee0dce423516e720f8ef4f77628428e" prot="public">
          <name>CHANNEL_TEXT</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>a text channel within a server </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a732e832861149a278f27ea7840b8e4caaea2cd43492b5252e09a6c9b29c58d159" prot="public">
          <name>DM</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>a direct message between users </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a732e832861149a278f27ea7840b8e4caa368c0770040b2aef829c2aa893d1ab15" prot="public">
          <name>CHANNEL_VOICE</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>a voice channel within a server </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a732e832861149a278f27ea7840b8e4caa0e46c57251ffbb0889dded66229de5e3" prot="public">
          <name>GROUP_DM</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>a direct message between multiple users </para>
          </briefdescription>
          <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000007"><xreftitle>Deprecated</xreftitle><xrefdescription><para>this channel type was intended to be used with the now deprecated GameBridge SDK. Existing group dms with bots will continue to function, but newly created channels will be unusable </para>
</xrefdescription></xrefsect></para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a732e832861149a278f27ea7840b8e4caa011b9de335165146c33c71cf53092423" prot="public">
          <name>CHANNEL_CATEGORY</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>an organizational category that contains up to 50 channels </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a732e832861149a278f27ea7840b8e4caa662c4994f226e264df106d13ad970934" prot="public">
          <name>CHANNEL_ANNOUNCEMENT</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>a channel that users can follow and crosspost into their own server </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a732e832861149a278f27ea7840b8e4caa1f0ad199c68182aa0da452551a967238" prot="public">
          <name>CHANNEL_STORE</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>a channel in which game developers can sell their game on Discord </para>
          </briefdescription>
          <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000008"><xreftitle>Deprecated</xreftitle><xrefdescription><para>store channels are deprecated by Discord </para>
</xrefdescription></xrefsect></para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a732e832861149a278f27ea7840b8e4caa1d63f7e5fb4e2685480ac64452d0397e" prot="public">
          <name>CHANNEL_ANNOUNCEMENT_THREAD</name>
          <initializer>= 10</initializer>
          <briefdescription>
<para>a temporary sub-channel within a GUILD_ANNOUNCEMENT channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a732e832861149a278f27ea7840b8e4caae84793ca2b167358c2bebc90846cfa23" prot="public">
          <name>CHANNEL_PUBLIC_THREAD</name>
          <initializer>= 11</initializer>
          <briefdescription>
<para>a temporary sub-channel within a GUILD_TEXT channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a732e832861149a278f27ea7840b8e4caae7eb62155b17af4f21bd92aab3970b77" prot="public">
          <name>CHANNEL_PRIVATE_THREAD</name>
          <initializer>= 12</initializer>
          <briefdescription>
<para>a temporary sub-channel within a GUILD_TEXT channel that is only viewable by those invited and those with the MANAGE_THREADS permission </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a732e832861149a278f27ea7840b8e4caa6aeb82d5948ce154bf6db5c43efdca4b" prot="public">
          <name>CHANNEL_STAGE</name>
          <initializer>= 13</initializer>
          <briefdescription>
<para>a &quot;stage&quot; channel, like a voice channel with one authorised speaker </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a732e832861149a278f27ea7840b8e4caa9cf6db4c566fd0b5e3d3042612036a2e" prot="public">
          <name>CHANNEL_DIRECTORY</name>
          <initializer>= 14</initializer>
          <briefdescription>
<para>the channel in a <ulink url="https://support.discord.com/hc/en-us/articles/4406046651927-Discord-Student-Hubs-FAQ">hub</ulink> containing the listed servers </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a732e832861149a278f27ea7840b8e4caadefa4b5b2fdae86eda8f8e90807ec922" prot="public">
          <name>CHANNEL_FORUM</name>
          <initializer>= 15</initializer>
          <briefdescription>
<para>forum channel that can only contain threads </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flag integers as received from and sent to discord. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="38" column="1" bodyfile="include/dpp/channel.h" bodystart="38" bodyend="60"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ab11f2d909f48313331797465e3fbba7d" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>channel_flags</name>
        <enumvalue id="namespacedpp_1ab11f2d909f48313331797465e3fbba7da0b0d31477f484ddc8b5da869e8a020bd" prot="public">
          <name>c_nsfw</name>
          <initializer>=		0b00010000</initializer>
          <briefdescription>
<para>NSFW Gated Channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ab11f2d909f48313331797465e3fbba7da76fb8f7043c63103db86dc0ef1f14fca" prot="public">
          <name>c_video_quality_720p</name>
          <initializer>=	0b00100000</initializer>
          <briefdescription>
<para>Video quality forced to 720p. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ab11f2d909f48313331797465e3fbba7da616b3dd8173ca7ca0d249d82c573e3c0" prot="public">
          <name>c_lock_permissions</name>
          <initializer>=	0b01000000</initializer>
          <briefdescription>
<para>Lock permissions (only used when updating channel positions) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ab11f2d909f48313331797465e3fbba7da9d8e493824376dc1bfe241597e27fa89" prot="public">
          <name>c_pinned_thread</name>
          <initializer>=	0b10000000</initializer>
          <briefdescription>
<para>Thread pinned in a forum (type 15) channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Our flags as stored in the object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The bottom four bits of this flag are reserved to contain the channel_type values listed above as provided by Discord. If discord add another value &gt; 15, we will have to shuffle these values upwards by one bit. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="67" column="1" bodyfile="include/dpp/channel.h" bodystart="67" bodyend="76"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a1a3c6f970a9ba600ecf7c8e16f6ec480" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>discord_channel_flags</name>
        <enumvalue id="namespacedpp_1a1a3c6f970a9ba600ecf7c8e16f6ec480afb0426619d0a2959643cb47e23f9813d" prot="public">
          <name>dc_pinned_thread</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
<para>Thread pinned in a forum (type 15) channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1a3c6f970a9ba600ecf7c8e16f6ec480a44ed89a3873a10219db7f4b9b41bbd9d" prot="public">
          <name>dc_require_tag</name>
          <initializer>=   1 &lt;&lt; 4</initializer>
          <briefdescription>
<para>whether a tag is required to be specified when creating a thread in a forum channel. Tags are specified in the <ref refid="classdpp_1_1thread_1a8ab5e0ee2b50f2bab43090312749ce3d" kindref="member">thread::applied_tags</ref> field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The flags in discord channel&apos;s raw &quot;flags&quot; field. We use these for serialisation only, right now. Might be better to create a new field than to make the existing <ref refid="classdpp_1_1channel_1a709f24110a06b558170cae9231572bef" kindref="member">channel::flags</ref> from uint8_t to uint16_t, if discord adds more flags in future. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="81" column="1" bodyfile="include/dpp/channel.h" bodystart="81" bodyend="86"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ab8154fdded2c361ae6c91397cd3e4f06" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>default_forum_sort_order_t</name>
        <enumvalue id="namespacedpp_1ab8154fdded2c361ae6c91397cd3e4f06aa98a3e666bb50cb225a1e31be8c7ae5f" prot="public">
          <name>so_latest_activity</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Sort forum posts by activity (default) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ab8154fdded2c361ae6c91397cd3e4f06a51f6e6db5517bae1664dd2c9407eb8ee" prot="public">
          <name>so_creation_date</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Sort forum posts by creation time (from most recent to oldest) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types for sort posts in a forum channel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="91" column="1" bodyfile="include/dpp/channel.h" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a1111f17373e7a972e77ffc0a6e621522" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>overwrite_type</name>
        <enumvalue id="namespacedpp_1a1111f17373e7a972e77ffc0a6e621522ab1e3ea27fc98089b63c9e89fe7c44df5" prot="public">
          <name>ot_role</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Role. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1111f17373e7a972e77ffc0a6e621522a55d9fc605a432262deb345fd89af929b" prot="public">
          <name>ot_member</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Member. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>channel permission overwrite types </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="101" column="1" bodyfile="include/dpp/channel.h" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a9ea85c1ebdea9ba69a289c812bd630f8" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>auto_archive_duration_t</name>
        <enumvalue id="namespacedpp_1a9ea85c1ebdea9ba69a289c812bd630f8a3c1c9e404925889813eb8d6af391fbab" prot="public">
          <name>arc_1_hour</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Auto archive duration of 1 hour. (60 minutes) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9ea85c1ebdea9ba69a289c812bd630f8ab732b80a7a0f8b1bb5b60c4f317dee4a" prot="public">
          <name>arc_1_day</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Auto archive duration of 1 day. (1440 minutes) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9ea85c1ebdea9ba69a289c812bd630f8a3078b5981fc57205ef537a51998ad9aa" prot="public">
          <name>arc_3_days</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Auto archive duration of 3 days. (4320 minutes) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9ea85c1ebdea9ba69a289c812bd630f8a4f3c0a59162c2c11a368ba9bdcbeb452" prot="public">
          <name>arc_1_week</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Auto archive duration of 1 week. (10080 minutes) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Auto archive duration of threads which will stop showing in the channel list after the specified period of inactivity. Defined as an enum to fit into 1 byte. Internally it&apos;ll be translated to minutes to match the API. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="157" column="1" bodyfile="include/dpp/channel.h" bodystart="157" bodyend="166"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1af447e04d0490cd4a9de085e4a758faa4" prot="public" static="no" strong="no">
        <type>bool</type>
        <name>start_type</name>
        <enumvalue id="namespacedpp_1af447e04d0490cd4a9de085e4a758faa4a155f7db65696b4c09b5fcc41787e4726" prot="public">
          <name>st_wait</name>
          <initializer>= false</initializer>
          <briefdescription>
<para>Wait forever on a condition variable. The cluster will spawn threads for each shard and start() will not return in normal operation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af447e04d0490cd4a9de085e4a758faa4ad7671c39cba8f6577475ce3cc8ac1f5e" prot="public">
          <name>st_return</name>
          <initializer>= true</initializer>
          <briefdescription>
<para>Return immediately after starting shard threads. If you set the parameter of <ref refid="classdpp_1_1cluster_1a40e99d13e1380eccd30d13123014594f" kindref="member">cluster::start()</ref> to this value, you will have to manage the lifetime and scope of your cluster object yourself. Taking it out of scope or deleting its pointer will terminate the bot. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of startup for <ref refid="classdpp_1_1cluster_1a40e99d13e1380eccd30d13123014594f" kindref="member">cluster::start()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cluster.h" line="59" column="1" bodyfile="include/dpp/cluster.h" bodystart="59" bodyend="76"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864" prot="public" static="no" strong="no">
        <type></type>
        <name>parameter_type</name>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864a36958c192951cad2ae2b921de3db644a" prot="public">
          <name>pt_string</name>
          <briefdescription>
<para>String value. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864a44145f9f2768b2c9419f3e56b03691d9" prot="public">
          <name>pt_role</name>
          <briefdescription>
<para>Role object. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864a35cd631f30378b96f3ea002e74b8f026" prot="public">
          <name>pt_channel</name>
          <briefdescription>
<para>Channel object. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864a65e5825b1a709ece15c7de9dd2b21bdf" prot="public">
          <name>pt_user</name>
          <briefdescription>
<para>User object. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864a3db63d1dc9d5c994cf5258372d40b270" prot="public">
          <name>pt_integer</name>
          <briefdescription>
<para>64 bit signed integer </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864a095d2a7bbe72af8c679d3f02f4395650" prot="public">
          <name>pt_double</name>
          <briefdescription>
<para>double floating point </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a9a2049904620e4f62b82f8dc818de864acdd3703d49822d51598fa8575ce7bbd9" prot="public">
          <name>pt_boolean</name>
          <briefdescription>
<para>boolean </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Parameter types when registering a command. We don&apos;t pass these in when triggering the command in the handler, because it is expected the developer added the command so they know what types to expect for each named parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="71" column="1" bodyfile="include/dpp/commandhandler.h" bodystart="71" bodyend="79"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a79e9b19c1aa69ef048c79d37801b947c" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>emoji_flags</name>
        <enumvalue id="namespacedpp_1a79e9b19c1aa69ef048c79d37801b947cad9baba8ca224a0acb80019fcd3a9a0cb" prot="public">
          <name>e_require_colons</name>
          <initializer>= 0b00000001</initializer>
          <briefdescription>
<para>Emoji requires colons. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a79e9b19c1aa69ef048c79d37801b947caa8e9ef37a91a1bbe4012548a0fd3bd82" prot="public">
          <name>e_managed</name>
          <initializer>=        0b00000010</initializer>
          <briefdescription>
<para>Managed (introduced by application) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a79e9b19c1aa69ef048c79d37801b947ca9036ca4ebc156999b7efd35de1adb2f5" prot="public">
          <name>e_animated</name>
          <initializer>=       0b00000100</initializer>
          <briefdescription>
<para>Animated. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a79e9b19c1aa69ef048c79d37801b947ca5acfa9eb7e214d29511692811b93890d" prot="public">
          <name>e_available</name>
          <initializer>=      0b00001000</initializer>
          <briefdescription>
<para>Available (false if the guild doesn&apos;t meet boosting criteria, etc) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flags for <ref refid="classdpp_1_1emoji" kindref="compound">dpp::emoji</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/emoji.h" line="37" column="1" bodyfile="include/dpp/emoji.h" bodystart="37" bodyend="46"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>etf_token_type</name>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a1f73d99cedad0b2bef42243ab11a7fd5" prot="public">
          <name>ett_distribution</name>
          <initializer>=	&apos;D&apos;</initializer>
          <briefdescription>
<para>68 [Distribution header] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a32dd2a0b5c25dc0b1cafe45e17cbd565" prot="public">
          <name>ett_new_float</name>
          <initializer>=		&apos;F&apos;</initializer>
          <briefdescription>
<para>70 [Float64:IEEE float] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2addfd91f61e4526b26ed57eca79068bd6" prot="public">
          <name>ett_bit_binary</name>
          <initializer>=	&apos;M&apos;</initializer>
          <briefdescription>
<para>77 [UInt32:Len, UInt8:Bits, Len:Data] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a98358f51ddecfaca60dbe919a0dccfcf" prot="public">
          <name>ett_compressed</name>
          <initializer>=	&apos;P&apos;</initializer>
          <briefdescription>
<para>80 [UInt4:UncompressedSize, N:ZlibCompressedData] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a4acfaee981ed2e5388421872e9bfc6fd" prot="public">
          <name>ett_smallint</name>
          <initializer>=		&apos;a&apos;</initializer>
          <briefdescription>
<para>97 [UInt8:Int] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a4fecf0dff32cfdfcd7e50c63ee7f0948" prot="public">
          <name>ett_integer</name>
          <initializer>=		&apos;b&apos;</initializer>
          <briefdescription>
<para>98 [Int32:Int] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a4a5576e1fa114561afa0c4b55be4ffcf" prot="public">
          <name>ett_float</name>
          <initializer>=		&apos;c&apos;</initializer>
          <briefdescription>
<para>99 [31:Float String] Float in string format (formatted &quot;%.20e&quot;, sscanf &quot;%lf&quot;). Superseded by ett_new_float </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a580b992b7d9f3e298cf19ec34fc74aa4" prot="public">
          <name>ett_atom</name>
          <initializer>=		&apos;d&apos;</initializer>
          <briefdescription>
<para>100 [UInt16:Len, Len:AtomName] max Len is 255 </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2aedad025b362501ebe380dd4af18b2ff5" prot="public">
          <name>ett_reference</name>
          <initializer>=		&apos;e&apos;</initializer>
          <briefdescription>
<para>101 [atom:Node, UInt32:ID, UInt8:Creation] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a2ef4fa472fdffdbea13b0dfcb80e16db" prot="public">
          <name>ett_port</name>
          <initializer>=		&apos;f&apos;</initializer>
          <briefdescription>
<para>102 [atom:Node, UInt32:ID, UInt8:Creation] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2aa6d31eaec30ab5b342e7ea8bf0b02965" prot="public">
          <name>ett_pid</name>
          <initializer>=		&apos;g&apos;</initializer>
          <briefdescription>
<para>103 [atom:Node, UInt32:ID, UInt32:Serial, UInt8:Creation] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2ae7ee9228d42ffcd2f35564a1dee46d16" prot="public">
          <name>ett_small_tuple</name>
          <initializer>=	&apos;h&apos;</initializer>
          <briefdescription>
<para>104 [UInt8:Arity, N:Elements] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2ac90c9dde063b58dd2fd74db7cdf2bff2" prot="public">
          <name>ett_large_tuple</name>
          <initializer>=	&apos;i&apos;</initializer>
          <briefdescription>
<para>105 [UInt32:Arity, N:Elements] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a26c10fa455e8a6516ca6962cf65fd4d9" prot="public">
          <name>ett_nil</name>
          <initializer>=		&apos;j&apos;</initializer>
          <briefdescription>
<para>106 empty list </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a1edbdd50825e2b684a846b1a4de88381" prot="public">
          <name>ett_string</name>
          <initializer>=		&apos;k&apos;</initializer>
          <briefdescription>
<para>107 [UInt16:Len, Len:Characters] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2add4a9d5b29063cae17049c9d042e7cad" prot="public">
          <name>ett_list</name>
          <initializer>=		&apos;l&apos;</initializer>
          <briefdescription>
<para>108 [UInt32:Len, Elements, Tail] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a6c8d2de13b77e4ec3db1c48b934f7986" prot="public">
          <name>ett_binary</name>
          <initializer>=		&apos;m&apos;</initializer>
          <briefdescription>
<para>109 [UInt32:Len, Len:Data] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a573ee2bc05bae14a777128f2cca5bc0d" prot="public">
          <name>ett_bigint_small</name>
          <initializer>=	&apos;n&apos;</initializer>
          <briefdescription>
<para>110 [UInt8:n, UInt8:Sign, n:nums] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2adc24520fc22044d022fe85d31ed1d557" prot="public">
          <name>ett_bigint_large</name>
          <initializer>=	&apos;o&apos;</initializer>
          <briefdescription>
<para>111 [UInt32:n, UInt8:Sign, n:nums] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2aa4499dd74f76d02b7df9e036329ea05d" prot="public">
          <name>ett_new_function</name>
          <initializer>=	&apos;p&apos;</initializer>
          <briefdescription>
<para>112 [UInt32:Size, UInt8:Arity, 16*Uint6-MD5:Uniq, UInt32:Index, UInt32:NumFree, atom:Module, int:OldIndex, int:OldUniq, pid:Pid, NunFree*ext:FreeVars] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a842624fd67967024c1c735b6122e9d81" prot="public">
          <name>ett_export</name>
          <initializer>=		&apos;q&apos;</initializer>
          <briefdescription>
<para>113 [atom:Module, atom:Function, smallint:Arity] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2ab5f84f9c81ca445439ec9e4091a0f37e" prot="public">
          <name>ett_new_reference</name>
          <initializer>=	&apos;r&apos;</initializer>
          <briefdescription>
<para>114 [UInt16:Len, atom:Node, UInt8:Creation, Len*UInt32:ID] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a8525587f75b2826d6a327a0a5b97a905" prot="public">
          <name>ett_atom_small</name>
          <initializer>=	&apos;s&apos;</initializer>
          <briefdescription>
<para>115 [UInt8:Len, Len:AtomName] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2aec729b9fd2ca1ef89e1f39000094ae39" prot="public">
          <name>ett_map</name>
          <initializer>=	 	&apos;t&apos;</initializer>
          <briefdescription>
<para>116 [UInt32:Airty, N:Pairs] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a94655693c447cbe3350e03794e657147" prot="public">
          <name>ett_function</name>
          <initializer>=		&apos;u&apos;</initializer>
          <briefdescription>
<para>117 [UInt4:NumFree, pid:Pid, atom:Module, int:Index, int:Uniq, NumFree*ext:FreeVars] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2ac7c37fe169d1e290a015840f3bfd29ed" prot="public">
          <name>ett_atom_utf8</name>
          <initializer>=		&apos;v&apos;</initializer>
          <briefdescription>
<para>118 [UInt16:Len, Len:AtomName] max Len is 255 characters (up to 4 bytes per) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad775fb0c6c9e6923fb562c95907d26c2a54033a22a349ecba43ec1f4cbb34013c" prot="public">
          <name>ett_atom_utf8_small</name>
          <initializer>=	&apos;w&apos;</initializer>
          <briefdescription>
<para>119 [UInt8:Len, Len:AtomName] </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents a token which identifies the type of value which follows it in the ETF binary structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="48" column="1" bodyfile="include/dpp/etf.h" bodystart="48" bodyend="103"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a51891a9e382f9c396d378de00fa65099" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>region</name>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a9edcd6257d71d2339549f2a5b667a313" prot="public">
          <name>r_brazil</name>
          <briefdescription>
<para>Brazil. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099aadbae70817769d6551c51f3da468dac8" prot="public">
          <name>r_central_europe</name>
          <briefdescription>
<para>Central Europe. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099af7d0b58ca7fee21a8131b704558f7d02" prot="public">
          <name>r_hong_kong</name>
          <briefdescription>
<para>Hong Kong. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a7ad00eff38e894d72279e13b29e4ab87" prot="public">
          <name>r_india</name>
          <briefdescription>
<para>India. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099aaf3dc305ad57fce93bd2ffedfda56c9e" prot="public">
          <name>r_japan</name>
          <briefdescription>
<para>Japan. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099add96d40dff33aeaa90caa7979c469da3" prot="public">
          <name>r_russia</name>
          <briefdescription>
<para>Russia. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099aba9d0404b39ea6672b3bcf52feae17b1" prot="public">
          <name>r_singapore</name>
          <briefdescription>
<para>Singapore. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099aa9cf62c258d60209c8cded95f3bdda5f" prot="public">
          <name>r_south_africa</name>
          <briefdescription>
<para>South Africa. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a1497e7d00b13f4eec2dd1556af760885" prot="public">
          <name>r_sydney</name>
          <briefdescription>
<para>Sydney. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099aefde0f307a19a2ca2b3091099c962131" prot="public">
          <name>r_us_central</name>
          <briefdescription>
<para>US Central. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a64b0c58ed6fc338811fa50e4001c739b" prot="public">
          <name>r_us_east</name>
          <briefdescription>
<para>US East Coast. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a406609dc4e2712b0abc9ca72bf57e390" prot="public">
          <name>r_us_south</name>
          <briefdescription>
<para>US South. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a6c27cbd85161eb3666d8f136391a5f58" prot="public">
          <name>r_us_west</name>
          <briefdescription>
<para>US West Coast. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a51891a9e382f9c396d378de00fa65099a8d6403af9f4d5b0b849c3f883d0e49e8" prot="public">
          <name>r_western_europe</name>
          <briefdescription>
<para>Western Europe. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents voice regions for guilds and channels. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000028"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Deprecated in favour of per-channel regions. Please use <ref refid="classdpp_1_1channel_1a05f56fbd37e993e0fc36df06b3d65bad" kindref="member">channel::rtc_region</ref> instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="42" column="1" bodyfile="include/dpp/guild.h" bodystart="42" bodyend="57"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383a" prot="public" static="no" strong="no">
        <type>uint32_t</type>
        <name>guild_flags</name>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aad6705273a057a9c7f7032a22f29e538b" prot="public">
          <name>g_large</name>
          <initializer>=				0b00000000000000000000000000000001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Large guild </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa6f5a2b3aa3e079cd62bb3ad595f04359" prot="public">
          <name>g_unavailable</name>
          <initializer>= 			0b00000000000000000000000000000010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unavailable guild (inaccessible due to an outage) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa95bab65c1394b0a2cbd23083a788be5c" prot="public">
          <name>g_widget_enabled</name>
          <initializer>=			0b00000000000000000000000000000100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has widget enabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa08b2f4c963b17f60801f9a2deb17ccd7" prot="public">
          <name>g_invite_splash</name>
          <initializer>=			0b00000000000000000000000000001000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild can have an invite splash image </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa5b7123fe609093340a16c80264d09172" prot="public">
          <name>g_vip_regions</name>
          <initializer>=				0b00000000000000000000000000010000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild can have VIP regions </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aaf7bd4841ddff627c7aa89d2fb714a0fa" prot="public">
          <name>g_vanity_url</name>
          <initializer>=				0b00000000000000000000000000100000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild can have a vanity url </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aad0048575cf495f4069fbe6d885da6c25" prot="public">
          <name>g_verified</name>
          <initializer>=				0b00000000000000000000000001000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild is verified </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa2475366e2137c374d70e109a4f558e67" prot="public">
          <name>g_partnered</name>
          <initializer>=				0b00000000000000000000000010000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild is partnered </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa07826673632e29a3f19ffb92f92de6b2" prot="public">
          <name>g_community</name>
          <initializer>=				0b00000000000000000000000100000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Community features enabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa857663f1db666045ea04595a6168e02f" prot="public">
          <name>g_commerce</name>
          <initializer>=				0b00000000000000000000001000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has commerce features enabled <xrefsect id="deprecated_1_deprecated000029"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Removed by Discord</para>
</xrefdescription></xrefsect></para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aaeee130a9c893f8b40a40032cb1e103dd" prot="public">
          <name>g_news</name>
          <initializer>=				0b00000000000000000000010000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has access to create announcement channels </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aabc22c6fe89086b9a5e99134118d675af" prot="public">
          <name>g_discoverable</name>
          <initializer>=			0b00000000000000000000100000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild is discoverable in discovery </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa1ac4e8b1bf2d97e934def6e656b6853b" prot="public">
          <name>g_featureable</name>
          <initializer>=				0b00000000000000000001000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild is featureable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa41116ed045326dcffe6c89f69b8a16b4" prot="public">
          <name>g_animated_icon</name>
          <initializer>=			0b00000000000000000010000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild can have an animated icon (doesn&apos;t mean it actually has one though) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa2f620e3b0ccaf4c4e55fb83393f77ad6" prot="public">
          <name>g_banner</name>
          <initializer>=				0b00000000000000000100000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild can have a banner image </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa395413623895eaac5998ae8b4dc2031f" prot="public">
          <name>g_welcome_screen_enabled</name>
          <initializer>=		0b00000000000000001000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has a welcome screen </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aaa013ed7a6d95dfe09ef48449204ee72d" prot="public">
          <name>g_member_verification_gate</name>
          <initializer>=		0b00000000000000010000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has a member verification gate </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aaf3dd4637ed204605d0271d128ada7db8" prot="public">
          <name>g_preview_enabled</name>
          <initializer>=			0b00000000000000100000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has a preview </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aaccb9055123427741b9d4b08c0f0342c8" prot="public">
          <name>g_no_join_notifications</name>
          <initializer>=		0b00000000000001000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild join notifications are off </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aaeed2962f0767222fb28a046ee64fffaf" prot="public">
          <name>g_no_boost_notifications</name>
          <initializer>=		0b00000000000010000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild boost notifications are off </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aaf86b8a8efaa0bd140bcf714d4a59f7c0" prot="public">
          <name>g_has_animated_icon</name>
          <initializer>=			0b00000000000100000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has an actual animated icon (set by the icon hash starting with &apos;a_&apos;) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa7886733c68622fb94d225d97b0f58d91" prot="public">
          <name>g_has_animated_banner</name>
          <initializer>=			0b00000000001000000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has an actual animated banner (set by the icon hash starting with &apos;a_&apos;) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa746b47a905f2094b65516cfaac098778" prot="public">
          <name>g_no_setup_tips</name>
          <initializer>=			0b00000000010000000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild setup tips are off </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aadee23452bb4b1dbfdb4999d5cec75036" prot="public">
          <name>g_no_sticker_greeting</name>
          <initializer>=			0b00000000100000000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>&quot;Wave to say hi&quot; sticker prompt buttons are off </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aab4c9237135054d4b28c3a287840a5ecc" prot="public">
          <name>g_monetization_enabled</name>
          <initializer>=		0b00000001000000000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>guild has enabled monetization </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa3688ffdc21bb6808e169de041a74095e" prot="public">
          <name>g_more_stickers</name>
          <initializer>=			0b00000010000000000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>guild has increased custom sticker slots </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aacf87942af70f28ce0d758d436e45a57b" prot="public">
          <name>g_private_threads</name>
          <initializer>=			0b00000100000000000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>guild has access to create private threads </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa1471f351d0cbe0aaae622d50c8050bbf" prot="public">
          <name>g_role_icons</name>
          <initializer>=				0b00001000000000000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>guild is able to set role icons </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa0ec280972e684f49e958e9b882e01760" prot="public">
          <name>g_seven_day_thread_archive</name>
          <initializer>=		0b00010000000000000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>guild has access to the seven day archive time for threads </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa58c9c9013412ff54052a11bae62d48fb" prot="public">
          <name>g_three_day_thread_archive</name>
          <initializer>=		0b00100000000000000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>guild has access to the three day archive time for threads </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa5fce362e803c63fe1ef9ebb2b06bb5a8" prot="public">
          <name>g_ticketed_events</name>
          <initializer>=			0b01000000000000000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>guild has enabled ticketed events </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5fc4a0db4c08d37d3a1b8e7e22383aa35aa6bdeb78a4e8c80b4896c6fde3965" prot="public">
          <name>g_channel_banners</name>
          <initializer>=			0b10000000000000000000000000000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>guild can have channel banners </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The various flags that represent the status of a <ref refid="classdpp_1_1guild" kindref="compound">dpp::guild</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="62" column="1" bodyfile="include/dpp/guild.h" bodystart="62" bodyend="129"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1aef5a99cfd5c5e87f039782311d2f2f4e" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>guild_flags_extra</name>
        <enumvalue id="namespacedpp_1aef5a99cfd5c5e87f039782311d2f2f4ea6fb4a086c12954347ccb438b53f8997e" prot="public">
          <name>g_premium_progress_bar_enabled</name>
          <initializer>=	0b00000001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has premium progress bar enabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aef5a99cfd5c5e87f039782311d2f2f4eab63667e028c002ffc28b39a53a62cb0e" prot="public">
          <name>g_animated_banner</name>
          <initializer>=			0b00000010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild can have an animated banner (doesn&apos;t mean it actually has one though) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aef5a99cfd5c5e87f039782311d2f2f4eade43e3e0128402f02a12a5bd4971f73b" prot="public">
          <name>g_auto_moderation</name>
          <initializer>=			0b00000100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has auto moderation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aef5a99cfd5c5e87f039782311d2f2f4eabc65e4309cc670db60917406e82b981a" prot="public">
          <name>g_invites_disabled</name>
          <initializer>=		0b00001000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Guild has paused invites, preventing new users from joining </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Additional boolean flag values for guild, as guild_flags is full. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="134" column="1" bodyfile="include/dpp/guild.h" bodystart="134" bodyend="143"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1aa4ffb1848bf700da25bc187e38054a30" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>guild_member_flags</name>
        <enumvalue id="namespacedpp_1aa4ffb1848bf700da25bc187e38054a30a966c5f8d7bd60e0daf9ceaafb556b4c4" prot="public">
          <name>gm_deaf</name>
          <initializer>=		0b00001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Member deafened in voice channels </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aa4ffb1848bf700da25bc187e38054a30a557d08c731cb82cfd66915aaa0466a2f" prot="public">
          <name>gm_mute</name>
          <initializer>=		0b00010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Member muted in voice channels </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aa4ffb1848bf700da25bc187e38054a30a0c44c916411b26b1b0a3b5288c346a41" prot="public">
          <name>gm_pending</name>
          <initializer>=		0b00100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Member pending verification by membership screening </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aa4ffb1848bf700da25bc187e38054a30a5fdf0027681c83f79661940b012518e4" prot="public">
          <name>gm_animated_avatar</name>
          <initializer>= 	0b01000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Member has animated guild-specific avatar </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aa4ffb1848bf700da25bc187e38054a30a932d7b56679a161e1af9020570e0810d" prot="public">
          <name>gm_voice_action</name>
          <initializer>= 			0b10000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>gm_deaf or gm_mute has been toggled </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Various flags that can be used to indicate the status of a guild member. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Use set_mute and set_deaf member functions and do not toggle the bits yourself. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="149" column="1" bodyfile="include/dpp/guild.h" bodystart="149" bodyend="160"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1afd5e6717b5f1f374c5c29f91394aa591" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>guild_nsfw_level_t</name>
        <enumvalue id="namespacedpp_1afd5e6717b5f1f374c5c29f91394aa591a02ef7539f34acc2c71e80b9d5513e0fa" prot="public">
          <name>nsfw_default</name>
          <initializer>=	0</initializer>
          <briefdescription>
<para>Default setting, not configured. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1afd5e6717b5f1f374c5c29f91394aa591a874c549de86f7e835ef471d6c9f05b35" prot="public">
          <name>nsfw_explicit</name>
          <initializer>=	1</initializer>
          <briefdescription>
<para>Explicit content may be in this guild. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1afd5e6717b5f1f374c5c29f91394aa591a5b915fea251bc3a57ff13b40b4eeeef9" prot="public">
          <name>nsfw_safe</name>
          <initializer>=	2</initializer>
          <briefdescription>
<para>Safe for work content only. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1afd5e6717b5f1f374c5c29f91394aa591a50782d1bfac8ee3e7c44afabe1ce8113" prot="public">
          <name>nsfw_age_restricted</name>
          <initializer>=	3</initializer>
          <briefdescription>
<para>Age restricted, 18+. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Guild NSFW level. Used to represent just how naughty this guild is. Naughty guild, go sit in the corner. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is set by Discord, and cannot be set by any bot or user on the guild. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="338" column="1" bodyfile="include/dpp/guild.h" bodystart="338" bodyend="347"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a47f79e1142def583c59df70b1382319f" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>guild_explicit_content_t</name>
        <enumvalue id="namespacedpp_1a47f79e1142def583c59df70b1382319fa96ac568d12de35d133472107513a1479" prot="public">
          <name>expl_disabled</name>
          <initializer>=			0</initializer>
          <briefdescription>
<para>media content will not be scanned </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a47f79e1142def583c59df70b1382319fa57b0f622812998eaab7b0e2c98c537ce" prot="public">
          <name>expl_members_without_roles</name>
          <initializer>=	1</initializer>
          <briefdescription>
<para>media content sent by members without roles will be scanned </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a47f79e1142def583c59df70b1382319fa4a5d95e0b883b55ab4320e985be7d9c3" prot="public">
          <name>expl_all_members</name>
          <initializer>=		2</initializer>
          <briefdescription>
<para>media content sent by all members will be scanned </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>explicit content filter level. This is set by a guild admin, but can be forced to a setting if the server is verified, partnered, official etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="354" column="1" bodyfile="include/dpp/guild.h" bodystart="354" bodyend="361"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a99a41e59054cde79c2b893ddb9320e4a" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>mfa_level_t</name>
        <enumvalue id="namespacedpp_1a99a41e59054cde79c2b893ddb9320e4aaca2f84896f4202cf23eaaba3c4c8ff5e" prot="public">
          <name>mfa_none</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>MFA not elevated. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a41e59054cde79c2b893ddb9320e4aaf85178c8a67b9194513ebe7c9507914f" prot="public">
          <name>mfa_elevated</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>MFA elevated. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MFA level for server. If set to elevated all moderators need MFA to perform specific actions such as kick or ban. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="367" column="1" bodyfile="include/dpp/guild.h" bodystart="367" bodyend="372"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a15724514db1d98eb10a8bd2d5ba44c85" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>verification_level_t</name>
        <enumvalue id="namespacedpp_1a15724514db1d98eb10a8bd2d5ba44c85a40641216d07d139fe3c2744f2318f75f" prot="public">
          <name>ver_none</name>
          <initializer>=	0</initializer>
          <briefdescription>
<para>unrestricted </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a15724514db1d98eb10a8bd2d5ba44c85a838e511c735776d803d52c7c7b0d38c3" prot="public">
          <name>ver_low</name>
          <initializer>= 	1</initializer>
          <briefdescription>
<para>must have verified email on account </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a15724514db1d98eb10a8bd2d5ba44c85abfd923a1a12342f4b61722cdeefdac99" prot="public">
          <name>ver_medium</name>
          <initializer>=	2</initializer>
          <briefdescription>
<para>must be registered on Discord for longer than 5 minutes </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a15724514db1d98eb10a8bd2d5ba44c85a637cb88d1e072ae739f24ea01982c456" prot="public">
          <name>ver_high</name>
          <initializer>=	3</initializer>
          <briefdescription>
<para>must be a member of the server for longer than 10 minutes </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a15724514db1d98eb10a8bd2d5ba44c85aba06f9c0033583341762686e4e76679b" prot="public">
          <name>ver_very_high</name>
          <initializer>=	4</initializer>
          <briefdescription>
<para>must have a verified phone number </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Guild verification level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="377" column="1" bodyfile="include/dpp/guild.h" bodystart="377" bodyend="388"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a3be39a31818d9499750c3efd43281d13" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>default_message_notification_t</name>
        <enumvalue id="namespacedpp_1a3be39a31818d9499750c3efd43281d13ac05d61f047e3b275d068f6d53d00a51e" prot="public">
          <name>dmn_all</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>members will receive notifications for all messages by default </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a3be39a31818d9499750c3efd43281d13a5fa1b59a563d5f28705eab0f2b112821" prot="public">
          <name>dmn_only_mentions</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>members will receive notifications only for messages that @mention them by default </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Default message notification level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="393" column="1" bodyfile="include/dpp/guild.h" bodystart="393" bodyend="398"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ab7f40af8c547f08790e620708879fcba" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>guild_premium_tier_t</name>
        <enumvalue id="namespacedpp_1ab7f40af8c547f08790e620708879fcbaaa99f6b37813bbe811aa62973aa794874" prot="public">
          <name>tier_none</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>guild has not unlocked any Server Boost perks </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ab7f40af8c547f08790e620708879fcbaad417497864f8554fccd1b45a00f5e42d" prot="public">
          <name>tier_1</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>guild has unlocked Server Boost level 1 perks </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ab7f40af8c547f08790e620708879fcbaa13f2b83dc517dcd8a6284d69a4b537b1" prot="public">
          <name>tier_2</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>guild has unlocked Server Boost level 2 perks </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ab7f40af8c547f08790e620708879fcbaa1c2ba6f22c52d59c46886bb81aa20780" prot="public">
          <name>tier_3</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>guild has unlocked Server Boost level 3 perks </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Premium tier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="403" column="1" bodyfile="include/dpp/guild.h" bodystart="403" bodyend="412"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ad195bc4d4cd3a639ac2090b69997fc9b" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>guild_afk_timeout_t</name>
        <enumvalue id="namespacedpp_1ad195bc4d4cd3a639ac2090b69997fc9ba0f8f2ce101e751132131dc1053d22e17" prot="public">
          <name>afk_off</name>
          <briefdescription>
<para>AFK timeout disabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad195bc4d4cd3a639ac2090b69997fc9babfb2b47382085d68d09188b6579a8d00" prot="public">
          <name>afk_60</name>
          <briefdescription>
<para>AFK timeout of 1 Minute. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad195bc4d4cd3a639ac2090b69997fc9baf43e8954a3e455ee603ef58c1588ccfa" prot="public">
          <name>afk_300</name>
          <briefdescription>
<para>AFK timeout of 5 Minutes. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad195bc4d4cd3a639ac2090b69997fc9ba6710063e434ccecc53279d3270ce901a" prot="public">
          <name>afk_900</name>
          <briefdescription>
<para>AFK timeout of 15 Minutes. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad195bc4d4cd3a639ac2090b69997fc9baed62c4ee1f1048a19d2db0604866a07b" prot="public">
          <name>afk_1800</name>
          <briefdescription>
<para>AFK timeout of 30 Minutes. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad195bc4d4cd3a639ac2090b69997fc9bae3e1cecae1718a6b28505f32a92efdec" prot="public">
          <name>afk_3600</name>
          <briefdescription>
<para>AFK timeout of 1 Hour. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Voice AFK timeout values for <ref refid="classdpp_1_1guild_1ad10c23d452ceab28023eace3bc072ad2" kindref="member">guild::afk_timeout</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="417" column="1" bodyfile="include/dpp/guild.h" bodystart="417" bodyend="430"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1aaaa159f13811e8d13973c2794e171091" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>http_state</name>
        <enumvalue id="namespacedpp_1aaaa159f13811e8d13973c2794e171091a1cb90f896a57c9a108a44c99d84964ad" prot="public">
          <name>HTTPS_HEADERS</name>
          <briefdescription>
<para>Sending/receiving HTTP headers and request body. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aaaa159f13811e8d13973c2794e171091a1eab41dc1b7d4eb0e8f68217318f6068" prot="public">
          <name>HTTPS_CONTENT</name>
          <briefdescription>
<para>Receiving body content. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aaaa159f13811e8d13973c2794e171091aa4cbb0b5e2760ec5ab444e7b787f5a02" prot="public">
          <name>HTTPS_DONE</name>
          <briefdescription>
<para>Completed connection, as it was closed or the body is &gt;= Content-Length. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aaaa159f13811e8d13973c2794e171091a61111f54baecc9385a8812cc8ebf4128" prot="public">
          <name>HTTPS_CHUNK_LEN</name>
          <briefdescription>
<para>Received chunk length. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aaaa159f13811e8d13973c2794e171091a14a882845dbc07216ce9093e6b8326a1" prot="public">
          <name>HTTPS_CHUNK_TRAILER</name>
          <briefdescription>
<para>Received chunk trailing CRLF. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aaaa159f13811e8d13973c2794e171091aae0ac9fd46782eff729f30165376b78d" prot="public">
          <name>HTTPS_CHUNK_LAST</name>
          <briefdescription>
<para>The last received chunk is the final chunk. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aaaa159f13811e8d13973c2794e171091af202968d765aaa0b2d9e262fbda347d7" prot="public">
          <name>HTTPS_CHUNK_CONTENT</name>
          <briefdescription>
<para>Receiving contents of a chunk. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>HTTP connection status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httpsclient.h" line="35" column="1" bodyfile="include/dpp/httpsclient.h" bodystart="35" bodyend="72"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ae1540b4171f114c35864c752ef00f94f" prot="public" static="no" strong="no">
        <type></type>
        <name>integration_type</name>
        <enumvalue id="namespacedpp_1ae1540b4171f114c35864c752ef00f94faddc9e2ea6cfa8e6a5163742056a7ccdf" prot="public">
          <name>i_twitch</name>
          <briefdescription>
<para>Twitch integration. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae1540b4171f114c35864c752ef00f94fa899faa63fdc7c1fc7f44b64c926b5f40" prot="public">
          <name>i_youtube</name>
          <briefdescription>
<para>YouTube integration. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae1540b4171f114c35864c752ef00f94fab9837432650669ee78368c2ef5d45ffe" prot="public">
          <name>i_discord</name>
          <briefdescription>
<para>Discord integration. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Integration types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/integration.h" line="34" column="1" bodyfile="include/dpp/integration.h" bodystart="34" bodyend="41"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a5ca6af921218321ff8f2f8640f5b2dd0" prot="public" static="no" strong="no">
        <type></type>
        <name>integration_flags</name>
        <enumvalue id="namespacedpp_1a5ca6af921218321ff8f2f8640f5b2dd0aea01d18af1995c14b8f93a1def0c5187" prot="public">
          <name>if_enabled</name>
          <initializer>=     0b00000001</initializer>
          <briefdescription>
<para>Integration enabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a5ca6af921218321ff8f2f8640f5b2dd0af10c00f79febd6633620cc60ff214e11" prot="public">
          <name>if_syncing</name>
          <initializer>=     0b00000010</initializer>
          <briefdescription>
<para>Integration syncing. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a5ca6af921218321ff8f2f8640f5b2dd0ac954473822136b410364f0e57b2f317f" prot="public">
          <name>if_emoticons</name>
          <initializer>=   0b00000100</initializer>
          <briefdescription>
<para>Emoji integration. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a5ca6af921218321ff8f2f8640f5b2dd0a29bde3bb98405da55ed02463ca320ef1" prot="public">
          <name>if_revoked</name>
          <initializer>=     0b00001000</initializer>
          <briefdescription>
<para>Integration revoked. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a5ca6af921218321ff8f2f8640f5b2dd0a8fa6e6961f9500c23086730960c35bad" prot="public">
          <name>if_expire_kick</name>
          <initializer>= 0b00010000</initializer>
          <briefdescription>
<para>Kick users when their subscription expires. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Integration flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/integration.h" line="46" column="1" bodyfile="include/dpp/integration.h" bodystart="46" bodyend="57"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5" prot="public" static="no" strong="no">
        <type></type>
        <name>intents</name>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5afdc0ced010f66a5c3a0c818ec5975359" prot="public">
          <name>i_guilds</name>
          <initializer>= (1 &lt;&lt; 0)</initializer>
          <briefdescription>
<para>Intent for receipt of guild information. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a414f0f169996a09f8fd1d423517dc0d0" prot="public">
          <name>i_guild_members</name>
          <initializer>= (1 &lt;&lt; 1)</initializer>
          <briefdescription>
<para>Intent for receipt of guild members. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a4278f54e9f1f408d43be33f7e0beac88" prot="public">
          <name>i_guild_bans</name>
          <initializer>= (1 &lt;&lt; 2)</initializer>
          <briefdescription>
<para>Intent for receipt of guild bans. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a8a963949d11ec8aeeac38ce96b47bdc0" prot="public">
          <name>i_guild_emojis</name>
          <initializer>= (1 &lt;&lt; 3)</initializer>
          <briefdescription>
<para>Intent for receipt of guild emojis. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a944508be9b272a33b626da260026bf83" prot="public">
          <name>i_guild_integrations</name>
          <initializer>= (1 &lt;&lt; 4)</initializer>
          <briefdescription>
<para>Intent for receipt of guild integrations. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5afa12813bc586d75c467a64a8ec793531" prot="public">
          <name>i_guild_webhooks</name>
          <initializer>= (1 &lt;&lt; 5)</initializer>
          <briefdescription>
<para>Intent for receipt of guild webhooks. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a311a6b6f7fc320d4c03ae72a851dce5c" prot="public">
          <name>i_guild_invites</name>
          <initializer>= (1 &lt;&lt; 6)</initializer>
          <briefdescription>
<para>Intent for receipt of guild invites. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a39ad4150b19142aad7ff4867e9ec9b69" prot="public">
          <name>i_guild_voice_states</name>
          <initializer>= (1 &lt;&lt; 7)</initializer>
          <briefdescription>
<para>Intent for receipt of guild voice states. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5af9f6255c96ad6a0e5a9e9af5eff1eaf9" prot="public">
          <name>i_guild_presences</name>
          <initializer>= (1 &lt;&lt; 8)</initializer>
          <briefdescription>
<para>Intent for receipt of guild presences. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a74dfa109a39b058dc814bed431911dcc" prot="public">
          <name>i_guild_messages</name>
          <initializer>= (1 &lt;&lt; 9)</initializer>
          <briefdescription>
<para>Intent for receipt of guild messages. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a86d9d5b3a2c86a240cdbd69e75f4b20b" prot="public">
          <name>i_guild_message_reactions</name>
          <initializer>= (1 &lt;&lt; 10)</initializer>
          <briefdescription>
<para>Intent for receipt of guild message reactions. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a9579627c0ed873d9f5c832e724af8482" prot="public">
          <name>i_guild_message_typing</name>
          <initializer>= (1 &lt;&lt; 11)</initializer>
          <briefdescription>
<para>Intent for receipt of guild message typing notifications. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5aaed663fb83df98a3b2797dbdffa1eec3" prot="public">
          <name>i_direct_messages</name>
          <initializer>= (1 &lt;&lt; 12)</initializer>
          <briefdescription>
<para>Intent for receipt of direct messages (DMs) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a5cdd239960ca917f44bab7be89625ae6" prot="public">
          <name>i_direct_message_reactions</name>
          <initializer>= (1 &lt;&lt; 13)</initializer>
          <briefdescription>
<para>Intent for receipt of direct message reactions. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a8a5fced64cc944ced2e4c69b877c45bf" prot="public">
          <name>i_direct_message_typing</name>
          <initializer>= (1 &lt;&lt; 14)</initializer>
          <briefdescription>
<para>Intent for receipt of direct message typing notifications. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a27810e825c157ded5d59df6dede23414" prot="public">
          <name>i_message_content</name>
          <initializer>= (1 &lt;&lt; 15)</initializer>
          <briefdescription>
<para>Intent for receipt of message content. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5ae8e1fccd9f13d710f2221ad8064f45e2" prot="public">
          <name>i_guild_scheduled_events</name>
          <initializer>= (1 &lt;&lt; 16)</initializer>
          <briefdescription>
<para>Scheduled events. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5af495c258f332d75a27b64cc5a9b7d302" prot="public">
          <name>i_auto_moderation_configuration</name>
          <initializer>= (1 &lt;&lt; 20)</initializer>
          <briefdescription>
<para>Auto moderation configuration. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5abbd9494f63b45f5d7a0723cf18ad65cb" prot="public">
          <name>i_auto_moderation_execution</name>
          <initializer>= (1 &lt;&lt; 21)</initializer>
          <briefdescription>
<para>Auto moderation configuration. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a561a52b3c6883808735c41891351c68f" prot="public">
          <name>i_default_intents</name>
          <initializer>= dpp::i_guilds | dpp::i_guild_bans | dpp::i_guild_emojis | dpp::i_guild_integrations |
					dpp::i_guild_webhooks | dpp::i_guild_invites | dpp::i_guild_voice_states |
					dpp::i_guild_messages | dpp::i_guild_message_reactions | dpp::i_guild_message_typing |
					dpp::i_direct_messages | dpp::i_direct_message_typing | dpp::i_direct_message_reactions |
					dpp::i_guild_scheduled_events | dpp::i_auto_moderation_configuration |
					dpp::i_auto_moderation_execution</initializer>
          <briefdescription>
<para>Default D++ intents (all non-privileged intents) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5ad4af85bb8ca011125370342f0961bf05" prot="public">
          <name>i_privileged_intents</name>
          <initializer>= dpp::i_guild_members | dpp::i_guild_presences | dpp::i_message_content</initializer>
          <briefdescription>
<para>Privileged intents requiring ID. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a76061cf60f9d06cf58ca38ddee1b825d" prot="public">
          <name>i_all_intents</name>
          <initializer>= dpp::i_default_intents | dpp::i_privileged_intents</initializer>
          <briefdescription>
<para>Every single intent. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a0042c0fc8164da4239b977d5be8e2ef5a78fe83dd74ee3a92448dc0142c168220" prot="public">
          <name>i_unverified_default_intents</name>
          <initializer>= dpp::i_default_intents | dpp::i_message_content</initializer>
          <briefdescription>
<para>Unverified bots default intents. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>intents are a bitmask of allowed events on your websocket. </para>
        </briefdescription>
        <detaileddescription>
<para>Some of these are known as Privileged intents (GUILD_MEMBERS and GUILD_PRESENCES) and require verification of a bot over 100 servers by discord via submission of your real life ID. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/intents.h" line="32" column="1" bodyfile="include/dpp/intents.h" bodystart="32" bodyend="84"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1afce43206033521b990e3a72bb87481b7" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>component_type</name>
        <enumvalue id="namespacedpp_1afce43206033521b990e3a72bb87481b7afd32ce8be4a99a9d84fb4815370a0bf8" prot="public">
          <name>cot_action_row</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Action row, a container for other components. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1afce43206033521b990e3a72bb87481b7a98228836af5d0c180cfc05eb1f0bfde9" prot="public">
          <name>cot_button</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Clickable button. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1afce43206033521b990e3a72bb87481b7a952fb985d83755e2b9a415814c9edd8f" prot="public">
          <name>cot_selectmenu</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Select menu. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1afce43206033521b990e3a72bb87481b7a8fdd4137c3888268fad7cab29c7b765b" prot="public">
          <name>cot_text</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Text input. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents the type of a component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="38" column="1" bodyfile="include/dpp/message.h" bodystart="38" bodyend="47"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a284d405e6b10bc80ec459ff2505edbb3" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>text_style_type</name>
        <enumvalue id="namespacedpp_1a284d405e6b10bc80ec459ff2505edbb3ae35e0964ac06220055227ed1176a1bd8" prot="public">
          <name>text_short</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Intended for short single-line text. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a284d405e6b10bc80ec459ff2505edbb3af6a87598b5d0eeb4d0fda285b6b8af30" prot="public">
          <name>text_paragraph</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Intended for much longer inputs. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of text input. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="52" column="1" bodyfile="include/dpp/message.h" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>component_style</name>
        <enumvalue id="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5ad29e42f919f0ba23aff73e3ea6ac1f5c" prot="public">
          <name>cos_primary</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Blurple. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5aab0deba2352e4cf8e36af9389dfef612" prot="public">
          <name>cos_secondary</name>
          <briefdescription>
<para>Grey. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5a3f0379def90d866804bfd164944ff300" prot="public">
          <name>cos_success</name>
          <briefdescription>
<para>Green. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5aa62ddfb05e437c4d4bf7a3ef1b73752b" prot="public">
          <name>cos_danger</name>
          <briefdescription>
<para>Red. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad1aac955c38caa8b8581de35d6c432d5a96d13813649e792fc6d88d29b70202d6" prot="public">
          <name>cos_link</name>
          <briefdescription>
<para>An external hyperlink to a website. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents the style of a button. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="62" column="1" bodyfile="include/dpp/message.h" bodystart="62" bodyend="73"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a1e48af4f3b8fd3f07ea0c2c55de99bff" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>sticker_type</name>
        <enumvalue id="namespacedpp_1a1e48af4f3b8fd3f07ea0c2c55de99bffa8c6ea2a04a08ddefbb5af1d65fd522ca" prot="public">
          <name>st_standard</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Nitro pack sticker. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1e48af4f3b8fd3f07ea0c2c55de99bffab02bd29c3f40a3228fd1630d34882ede" prot="public">
          <name>st_guild</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Guild sticker. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents the type of a sticker. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="802" column="1" bodyfile="include/dpp/message.h" bodystart="802" bodyend="807"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ae2ee458707682eabe7d539c9a13beac2" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>sticker_format</name>
        <enumvalue id="namespacedpp_1ae2ee458707682eabe7d539c9a13beac2ad24e2db4ccb23d8fcedc1f5be8458484" prot="public">
          <name>sf_png</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae2ee458707682eabe7d539c9a13beac2abbf65271f1c4d1763e3edb1e803731d2" prot="public">
          <name>sf_apng</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae2ee458707682eabe7d539c9a13beac2a8d051716ffa935c99a5cf54c77a815b5" prot="public">
          <name>sf_lottie</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The file format (png, apng, lottie) of a sticker. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="812" column="1" bodyfile="include/dpp/message.h" bodystart="812" bodyend="816"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ad0f89d72815d4d483f689baa5cca5107" prot="public" static="no" strong="no">
        <type>uint16_t</type>
        <name>message_flags</name>
        <enumvalue id="namespacedpp_1ad0f89d72815d4d483f689baa5cca5107aab96a9099e9e1de98d2e0270dae49851" prot="public">
          <name>m_crossposted</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
<para>this message has been published to subscribed channels (via Channel Following) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad0f89d72815d4d483f689baa5cca5107ac60e9e9a6e22730c20443715ab88c04d" prot="public">
          <name>m_is_crosspost</name>
          <initializer>=  1 &lt;&lt; 1</initializer>
          <briefdescription>
<para>this message originated from a message in another channel (via Channel Following) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad0f89d72815d4d483f689baa5cca5107a3146754ba261ee065671c1e6876e1d01" prot="public">
          <name>m_suppress_embeds</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
<para>do not include any embeds when serializing this message </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad0f89d72815d4d483f689baa5cca5107ad4f634843bd43c8f59a78cbea112024d" prot="public">
          <name>m_source_message_deleted</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
<para>the source message for this crosspost has been deleted (via Channel Following) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad0f89d72815d4d483f689baa5cca5107aa36edb052b986802f865dc32fe8e1ff7" prot="public">
          <name>m_urgent</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
<para>this message came from the urgent message system </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad0f89d72815d4d483f689baa5cca5107a61709e40d160eb84fbd38ea63c01d4c1" prot="public">
          <name>m_has_thread</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
<para>this message has an associated thread, with the same id as the message </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad0f89d72815d4d483f689baa5cca5107a31f151a1f4b4763df16059ff4d88aeaf" prot="public">
          <name>m_ephemeral</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
<para>this message is only visible to the user who invoked the Interaction </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad0f89d72815d4d483f689baa5cca5107a347b30bfa696feef3b8948a5ea20127e" prot="public">
          <name>m_loading</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
<para>this message is an Interaction Response and the bot is &quot;thinking&quot; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ad0f89d72815d4d483f689baa5cca5107a7d137ac1c65c3f6282670aabaac99746" prot="public">
          <name>m_thread_mention_failed</name>
          <initializer>= 1 &lt;&lt; 8</initializer>
          <briefdescription>
<para>this message failed to mention some roles and add their members to the thread </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Bitmask flags for a <ref refid="structdpp_1_1message" kindref="compound">dpp::message</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="943" column="1" bodyfile="include/dpp/message.h" bodystart="943" bodyend="962"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bc" prot="public" static="no" strong="no">
        <type></type>
        <name>message_type</name>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcac7573c73d464b30ffd2fee74f8618152" prot="public">
          <name>mt_default</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Default. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcae8c521e0821e3ce39219566726f46df3" prot="public">
          <name>mt_recipient_add</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Add recipient. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca2e93d061d961d64a50310ac4e5444c3b" prot="public">
          <name>mt_recipient_remove</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Remove recipient. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcab3bbd4be55810d639b4e46061a882203" prot="public">
          <name>mt_call</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Call. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcaeeb2b80decc86e5eb2060af5ac91b1d2" prot="public">
          <name>mt_channel_name_change</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Channel name change. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcab19bff5918591d0230159889a7b25b95" prot="public">
          <name>mt_channel_icon_change</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>Channel icon change. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca57b369b4b6b01c8061dad83b9e5eae9b" prot="public">
          <name>mt_channel_pinned_message</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>Message pinned. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca3dbb35e6017af75be21cd1e1eac708cc" prot="public">
          <name>mt_guild_member_join</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>Member joined. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcabac2f050715993fd79a820d2e04c8572" prot="public">
          <name>mt_user_premium_guild_subscription</name>
          <initializer>= 8</initializer>
          <briefdescription>
<para>Boost. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcacf707cbe6c016d2661c0375bb021c554" prot="public">
          <name>mt_user_premium_guild_subscription_tier_1</name>
          <initializer>= 9</initializer>
          <briefdescription>
<para>Boost level 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca1efe7500d0c09339b36e12249bd94b25" prot="public">
          <name>mt_user_premium_guild_subscription_tier_2</name>
          <initializer>= 10</initializer>
          <briefdescription>
<para>Boost level 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca01435a57a373ce70598dabdb6d330787" prot="public">
          <name>mt_user_premium_guild_subscription_tier_3</name>
          <initializer>= 11</initializer>
          <briefdescription>
<para>Boost level 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca45207c1afef758448fbc0b3c9a1830c6" prot="public">
          <name>mt_channel_follow_add</name>
          <initializer>= 12</initializer>
          <briefdescription>
<para>Follow channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca19a3b8cfddfc3dadbe11bb403b53f9ad" prot="public">
          <name>mt_guild_discovery_disqualified</name>
          <initializer>= 14</initializer>
          <briefdescription>
<para>Disqualified from discovery. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca0761b0d92c9f4c6d5fda7ac47cb7e596" prot="public">
          <name>mt_guild_discovery_requalified</name>
          <initializer>= 15</initializer>
          <briefdescription>
<para>Re-qualified for discovery. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcad8660ef6201f4b777a7f5f40216cf3aa" prot="public">
          <name>mt_guild_discovery_grace_period_initial_warning</name>
          <initializer>= 16</initializer>
          <briefdescription>
<para>Discovery grace period warning 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcadd602178260b393c54fd8a509b05c0cc" prot="public">
          <name>mt_guild_discovery_grace_period_final_warning</name>
          <initializer>= 17</initializer>
          <briefdescription>
<para>Discovery grace period warning 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca08b27991fef9b0c79308f33f29cffc88" prot="public">
          <name>mt_thread_created</name>
          <initializer>= 18</initializer>
          <briefdescription>
<para>Thread Created. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca13c1c1a4ead0ba6bfaca3c8e0fa53c7c" prot="public">
          <name>mt_reply</name>
          <initializer>= 19</initializer>
          <briefdescription>
<para>Reply. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcac0bfbd92c02b3e5e0a74f2b949c321fa" prot="public">
          <name>mt_application_command</name>
          <initializer>= 20</initializer>
          <briefdescription>
<para>Application command. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bcaca707ebc93c56257189a2d10ae6f550f" prot="public">
          <name>mt_thread_starter_message</name>
          <initializer>= 21</initializer>
          <briefdescription>
<para>Thread starter message. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca316506608264a2b1546fd7b71c82748a" prot="public">
          <name>mt_guild_invite_reminder</name>
          <initializer>= 22</initializer>
          <briefdescription>
<para>Invite reminder. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca79aa113309ce945bd954058449e0f9fe" prot="public">
          <name>mt_context_menu_command</name>
          <initializer>= 23</initializer>
          <briefdescription>
<para>Context Menu Command. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1acd7f41dcc93c1cf48514d2b123e4d8bca0ae71382837674b43d0e443da0eed509" prot="public">
          <name>mt_auto_moderation_action</name>
          <initializer>= 24</initializer>
          <briefdescription>
<para>Auto moderation action. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Message types for <ref refid="structdpp_1_1message_1ad4aa6594661e1527815364ad5b33b96b" kindref="member">dpp::message::type</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1003" column="1" bodyfile="include/dpp/message.h" bodystart="1003" bodyend="1052"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52" prot="public" static="no" strong="no">
        <type></type>
        <name>cache_policy_setting_t</name>
        <enumvalue id="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a81a53a5c84326ed9419729871d0af46e" prot="public">
          <name>cp_aggressive</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>request aggressively on seeing new guilds, and also store missing data from messages. This is the default behaviour and the least memory-efficient option. Memory usage will increase over time, initially quite rapidly, and then linearly over time. It is the least cpu-intensive setting. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a055c40e9038f2345a5c1fb9a3d3d648c" prot="public">
          <name>cp_lazy</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>only cache when there is relevant activity, e.g. a message to the bot. This is a good middle-ground, memory usage will increase linearly over time. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ace5c63d91b72c5bae7d8cf9d8f531e52a68e2695356af38492410341873083c49" prot="public">
          <name>cp_none</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Don&apos;t cache anything. Fill details when we see them. This is the most memory-efficient option but consumes more CPU time. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents the caching policy of a cache in the library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1057" column="1" bodyfile="include/dpp/message.h" bodystart="1057" bodyend="1075"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a7d622bf5ff000e82a44af1a8ac794e83" prot="public" static="no" strong="no">
        <type></type>
        <name>image_type</name>
        <enumvalue id="namespacedpp_1a7d622bf5ff000e82a44af1a8ac794e83ace2c4de1f89397132561031f246f89f7" prot="public">
          <name>i_png</name>
          <briefdescription>
<para>image/png </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d622bf5ff000e82a44af1a8ac794e83a29ece0fa9be4b57cbd1a5a9213f5a930" prot="public">
          <name>i_jpg</name>
          <briefdescription>
<para>image/jpeg </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d622bf5ff000e82a44af1a8ac794e83a366092ea3e4a9f5a1c1c4962094d3b9f" prot="public">
          <name>i_gif</name>
          <briefdescription>
<para>image/gif </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Supported image types for profile pictures. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/misc-enum.h" line="28" column="1" bodyfile="include/dpp/misc-enum.h" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2" prot="public" static="no" strong="no">
        <type></type>
        <name>loglevel</name>
        <enumvalue id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2aa46236c8641ec518b2a441a8d3fe8e6a" prot="public">
          <name>ll_trace</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Trace. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2a97dc4e31999535da7d8f2279d3b926e3" prot="public">
          <name>ll_debug</name>
          <briefdescription>
<para>Debug. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2a2219e945b7b3bff23816011423d2504a" prot="public">
          <name>ll_info</name>
          <briefdescription>
<para>Information. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2ad2fc6394fc5f72dce99d47d2da031658" prot="public">
          <name>ll_warning</name>
          <briefdescription>
<para>Warning. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2a1c28cc5cd17d2f6f959988ae3d54b9e7" prot="public">
          <name>ll_error</name>
          <briefdescription>
<para>Error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d48d478ccc3bffb34637bdb48f629c2aba578d32adc07ba8723784d8810cb57a" prot="public">
          <name>ll_critical</name>
          <briefdescription>
<para>Critical. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Log levels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/misc-enum.h" line="38" column="1" bodyfile="include/dpp/misc-enum.h" bodystart="38" bodyend="51"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7" prot="public" static="no" strong="no">
        <type>uint64_t</type>
        <name>permissions</name>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a6a410bc90243712cf71cb8c39a11ebab" prot="public">
          <name>p_create_instant_invite</name>
          <initializer>= 0x00000000001</initializer>
          <briefdescription>
<para>allows creation of instant invites </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7ae57cb8bf1870f74f2820f84255ca8104" prot="public">
          <name>p_kick_members</name>
          <initializer>= 0x00000000002</initializer>
          <briefdescription>
<para>allows kicking members </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a6c9849fc7380edaf4ab8f169c2f4cc82" prot="public">
          <name>p_ban_members</name>
          <initializer>= 0x00000000004</initializer>
          <briefdescription>
<para>allows banning members </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a43f62c967b9b16b49c315a0b23f86039" prot="public">
          <name>p_administrator</name>
          <initializer>= 0x00000000008</initializer>
          <briefdescription>
<para>allows all permissions and bypasses channel permission overwrites </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7adc5505422542cd70bc9b77d8ac672fbc" prot="public">
          <name>p_manage_channels</name>
          <initializer>= 0x00000000010</initializer>
          <briefdescription>
<para>allows management and editing of channels </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a18b5244cfb592afca2659104e694aff4" prot="public">
          <name>p_manage_guild</name>
          <initializer>= 0x00000000020</initializer>
          <briefdescription>
<para>allows management and editing of the guild </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7aef865fd4526947d2c9195386769a021c" prot="public">
          <name>p_add_reactions</name>
          <initializer>= 0x00000000040</initializer>
          <briefdescription>
<para>allows for the addition of reactions to messages </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a1491e4917cb525e97df238b995cd57fc" prot="public">
          <name>p_view_audit_log</name>
          <initializer>= 0x00000000080</initializer>
          <briefdescription>
<para>allows for viewing of audit logs </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7aff4b56b63ea738a7e62b3f7372662ff9" prot="public">
          <name>p_priority_speaker</name>
          <initializer>= 0x00000000100</initializer>
          <briefdescription>
<para>allows for using priority speaker in a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7afc77a3132f5a3f615ada9a19c486dec9" prot="public">
          <name>p_stream</name>
          <initializer>= 0x00000000200</initializer>
          <briefdescription>
<para>allows the user to go live </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a5ca9e89b32af806f7c0c179c3bdfb1ad" prot="public">
          <name>p_view_channel</name>
          <initializer>= 0x00000000400</initializer>
          <briefdescription>
<para>allows guild members to view a channel, which includes reading messages in text channels and joining voice channels </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7ad410586df8dba6f62b7770f1d08d3b79" prot="public">
          <name>p_send_messages</name>
          <initializer>= 0x00000000800</initializer>
          <briefdescription>
<para>allows for sending messages in a channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a3d621da851d24381179506bef573fae6" prot="public">
          <name>p_send_tts_messages</name>
          <initializer>= 0x00000001000</initializer>
          <briefdescription>
<para>allows for sending of /tts messages </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7aefd6d8454b40cdaa9c01a86038559988" prot="public">
          <name>p_manage_messages</name>
          <initializer>= 0x00000002000</initializer>
          <briefdescription>
<para>allows for deletion of other users messages </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a1298ec58bdd34875c6ce723109637cf8" prot="public">
          <name>p_embed_links</name>
          <initializer>= 0x00000004000</initializer>
          <briefdescription>
<para>links sent by users with this permission will be auto-embedded </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7af68496d326e48c4e8fb8396b56711650" prot="public">
          <name>p_attach_files</name>
          <initializer>= 0x00000008000</initializer>
          <briefdescription>
<para>allows for uploading images and files </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a808dee0401adefdb0ffcd0b5364f8369" prot="public">
          <name>p_read_message_history</name>
          <initializer>= 0x00000010000</initializer>
          <briefdescription>
<para>allows for reading of message history </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a6d810371ed1b4b2ec4fd50e7e2210104" prot="public">
          <name>p_mention_everyone</name>
          <initializer>= 0x00000020000</initializer>
          <briefdescription>
<para>allows for using the everyone and the here tag to notify users in a channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a65d4c2c30983c92fc6c47748b5d50261" prot="public">
          <name>p_use_external_emojis</name>
          <initializer>= 0x00000040000</initializer>
          <briefdescription>
<para>allows the usage of custom emojis from other servers </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a4ffb9d1a4e882b865dbde6f7b2c8f11b" prot="public">
          <name>p_view_guild_insights</name>
          <initializer>= 0x00000080000</initializer>
          <briefdescription>
<para>allows for viewing guild insights </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7aa9d2af8bc1c498854bdd4a9f748d5dd5" prot="public">
          <name>p_connect</name>
          <initializer>= 0x00000100000</initializer>
          <briefdescription>
<para>allows for joining of a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a259ccc1aa795d6c3e91fd27ca26064e7" prot="public">
          <name>p_speak</name>
          <initializer>= 0x00000200000</initializer>
          <briefdescription>
<para>allows for speaking in a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7afc617e73d51078781873de54d56f2a9a" prot="public">
          <name>p_mute_members</name>
          <initializer>= 0x00000400000</initializer>
          <briefdescription>
<para>allows for muting members in a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a10433f34ee13298e9c51f5e9b7024934" prot="public">
          <name>p_deafen_members</name>
          <initializer>= 0x00000800000</initializer>
          <briefdescription>
<para>allows for deafening of members in a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a235c2b4cc39caac24ae439231e8575e2" prot="public">
          <name>p_move_members</name>
          <initializer>= 0x00001000000</initializer>
          <briefdescription>
<para>allows for moving of members between voice channels </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7af51108cc668e552eadfa543d404904a8" prot="public">
          <name>p_use_vad</name>
          <initializer>= 0x00002000000</initializer>
          <briefdescription>
<para>allows for using voice-activity-detection in a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a61d9c9e5e9e0ce1808219c1bae1d501c" prot="public">
          <name>p_change_nickname</name>
          <initializer>= 0x00004000000</initializer>
          <briefdescription>
<para>allows for modification of own nickname </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7af2cc3c251fd4d3a180b932220681c8c7" prot="public">
          <name>p_manage_nicknames</name>
          <initializer>= 0x00008000000</initializer>
          <briefdescription>
<para>allows for modification of other users nicknames </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a2fc44537c377d2b8f1d0038fb981d7b1" prot="public">
          <name>p_manage_roles</name>
          <initializer>= 0x00010000000</initializer>
          <briefdescription>
<para>allows management and editing of roles </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a549b4abc6dada6f0bf90867796811022" prot="public">
          <name>p_manage_webhooks</name>
          <initializer>= 0x00020000000</initializer>
          <briefdescription>
<para>allows management and editing of webhooks </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7ad691e887806c25155195bee70d772311" prot="public">
          <name>p_manage_emojis_and_stickers</name>
          <initializer>= 0x00040000000</initializer>
          <briefdescription>
<para>allows management and editing of emojis and stickers </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7ae628847e2db7d4b3d986d6546efde812" prot="public">
          <name>p_use_application_commands</name>
          <initializer>= 0x00080000000</initializer>
          <briefdescription>
<para>allows members to use application commands, including slash commands and context menus </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a36d490ca8b4746a76b4982dfa03d7396" prot="public">
          <name>p_request_to_speak</name>
          <initializer>= 0x00100000000</initializer>
          <briefdescription>
<para>allows for requesting to speak in stage channels. (Discord: This permission is under active development and may be changed or removed.) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a61f9317f8737db94a3dfaf0aedc0a5a4" prot="public">
          <name>p_manage_events</name>
          <initializer>= 0x00200000000</initializer>
          <briefdescription>
<para>allows for management (creation, updating, deleting, starting) of scheduled events </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7ad89dbe2fc4c28f357e8fe579a1ad962b" prot="public">
          <name>p_manage_threads</name>
          <initializer>= 0x00400000000</initializer>
          <briefdescription>
<para>allows for deleting and archiving threads, and viewing all private threads </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a32c172d9953bb8cf72dea1a33762eddb" prot="public">
          <name>p_create_public_threads</name>
          <initializer>= 0x00800000000</initializer>
          <briefdescription>
<para>allows for creating public and announcement threads </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a49988d7e19bd664514046a44ae8d6f34" prot="public">
          <name>p_create_private_threads</name>
          <initializer>= 0x01000000000</initializer>
          <briefdescription>
<para>allows for creating private threads </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7ac53f7e2ab8f8b46f48943d281bc6c5b3" prot="public">
          <name>p_use_external_stickers</name>
          <initializer>= 0x02000000000</initializer>
          <briefdescription>
<para>allows the usage of custom stickers from other servers </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a5fe142c8d6eacec5ce80b3b42476d937" prot="public">
          <name>p_send_messages_in_threads</name>
          <initializer>= 0x04000000000</initializer>
          <briefdescription>
<para>allows for sending messages in threads </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a04df677383ab1edc2e224726c48a6f80" prot="public">
          <name>p_use_embedded_activities</name>
          <initializer>= 0x08000000000</initializer>
          <briefdescription>
<para>allows for using activities (applications with the EMBEDDED flag) in a voice channel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7ae54b883c0448ef564f34ed1fcf50fdb2" prot="public">
          <name>p_moderate_members</name>
          <initializer>= 0x10000000000</initializer>
          <briefdescription>
<para>allows for timing out users to prevent them from sending or reacting to messages in chat and threads, and from speaking in voice and stage channels </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents the various discord permissions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="32" column="1" bodyfile="include/dpp/permissions.h" bodystart="32" bodyend="74"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a953f1484a5140481ffab2b248618fb22" prot="public" static="no" strong="no">
        <type></type>
        <name>presence_flags</name>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22adbf7e907b0a558eafd5b8ecffa3923e0" prot="public">
          <name>p_desktop_online</name>
          <initializer>=	0b00000001</initializer>
          <briefdescription>
<para>Desktop: Online. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a515104603cf3e7d2836adf89eb2750e4" prot="public">
          <name>p_desktop_dnd</name>
          <initializer>=	0b00000010</initializer>
          <briefdescription>
<para>Desktop: DND. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a3ccbab447e338b7a46ecd9db69b9d374" prot="public">
          <name>p_desktop_idle</name>
          <initializer>=	0b00000011</initializer>
          <briefdescription>
<para>Desktop: Idle. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a1437c438cda97544bf7e2c12a06b1318" prot="public">
          <name>p_web_online</name>
          <initializer>=	0b00000100</initializer>
          <briefdescription>
<para>Web: Online. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a1d11dc77b54029a94e688698a7558786" prot="public">
          <name>p_web_dnd</name>
          <initializer>=	0b00001000</initializer>
          <briefdescription>
<para>Web: DND. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22adfd8c10b3d77722f0c6f563d692af8e3" prot="public">
          <name>p_web_idle</name>
          <initializer>=	0b00001100</initializer>
          <briefdescription>
<para>Web: Idle. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a60ba15ed9d7c31d172c73e6778ee46a6" prot="public">
          <name>p_mobile_online</name>
          <initializer>=	0b00010000</initializer>
          <briefdescription>
<para>Mobile: Online. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a56dae97b472d8e7264dea40b53b63fea" prot="public">
          <name>p_mobile_dnd</name>
          <initializer>=	0b00100000</initializer>
          <briefdescription>
<para>Mobile: DND. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a6fa8a493066cec741a1f11c3e2be6a65" prot="public">
          <name>p_mobile_idle</name>
          <initializer>=	0b00110000</initializer>
          <briefdescription>
<para>Mobile: Idle. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22aa789fd49e04b32c45df1d7c1ddefbcdf" prot="public">
          <name>p_status_online</name>
          <initializer>=	0b01000000</initializer>
          <briefdescription>
<para>General: Online. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22a0764ea77fe1b19eebe243ffa50455517" prot="public">
          <name>p_status_dnd</name>
          <initializer>=	0b10000000</initializer>
          <briefdescription>
<para>General: DND. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a953f1484a5140481ffab2b248618fb22abc482a9a0da8d6aa4542224637426864" prot="public">
          <name>p_status_idle</name>
          <initializer>=	0b11000000</initializer>
          <briefdescription>
<para>General: Idle. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Presence flags bitmask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="34" column="1" bodyfile="include/dpp/presence.h" bodystart="34" bodyend="59"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a172aa830689e55f4bba337de1592db96" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>presence_status</name>
        <enumvalue id="namespacedpp_1a172aa830689e55f4bba337de1592db96a8d6db63cf4c29add56dbc76d58ea1677" prot="public">
          <name>ps_offline</name>
          <initializer>=	0</initializer>
          <briefdescription>
<para>Offline. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a172aa830689e55f4bba337de1592db96ae068013241cf08d0f4dbdd161e89aa2e" prot="public">
          <name>ps_online</name>
          <initializer>=	1</initializer>
          <briefdescription>
<para>Online. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a172aa830689e55f4bba337de1592db96a611b4149b435ab53bcba953a7818a760" prot="public">
          <name>ps_dnd</name>
          <initializer>=	2</initializer>
          <briefdescription>
<para>DND. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a172aa830689e55f4bba337de1592db96ac85606cb4be43da0a426d80f6ad2c90f" prot="public">
          <name>ps_idle</name>
          <initializer>=	3</initializer>
          <briefdescription>
<para>Idle. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Online presence status values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="64" column="1" bodyfile="include/dpp/presence.h" bodystart="64" bodyend="73"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>activity_type</name>
        <enumvalue id="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2a509e5165f7314a42b403fb97e796b701" prot="public">
          <name>at_game</name>
          <initializer>=	0</initializer>
          <briefdescription>
<para>&quot;Playing ...&quot; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2a2f8895bec6d58b1319a41255239d0918" prot="public">
          <name>at_streaming</name>
          <initializer>=	1</initializer>
          <briefdescription>
<para>&quot;Streaming ...&quot; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2a5fac5ede10ce3d8f563ddfa571367ae6" prot="public">
          <name>at_listening</name>
          <initializer>=	2</initializer>
          <briefdescription>
<para>&quot;Listening to...&quot; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2a41a48506f1fde615713f676016525d9b" prot="public">
          <name>at_watching</name>
          <initializer>=	3</initializer>
          <briefdescription>
<para>&quot;Watching...&quot; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2ad2f4a7cb64b961f30a1f98eb60b00400" prot="public">
          <name>at_custom</name>
          <initializer>=	4</initializer>
          <briefdescription>
<para>&quot;Emoji...&quot; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a1d07516cb637238ba721dc4d91ab6fc2a093f8e827c5107ecc2cabe0647233d72" prot="public">
          <name>at_competing</name>
          <initializer>=	5</initializer>
          <briefdescription>
<para>&quot;Competing in...&quot; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Game types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="99" column="1" bodyfile="include/dpp/presence.h" bodystart="99" bodyend="112"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4d" prot="public" static="no" strong="no">
        <type></type>
        <name>activity_flags</name>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4da1ed1f728ed51babc825103062bf1b077" prot="public">
          <name>af_instance</name>
          <initializer>= 0b000000001</initializer>
          <briefdescription>
<para>In an instance. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4da9b8df9967d669188c072acbea0da5236" prot="public">
          <name>af_join</name>
          <initializer>= 0b000000010</initializer>
          <briefdescription>
<para>Joining. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4da6641e2affb027ec2ee799a06b388a2cd" prot="public">
          <name>af_spectate</name>
          <initializer>= 0b000000100</initializer>
          <briefdescription>
<para>Spectating. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4da0b89df17cf5e4e0632002adaeb9a6195" prot="public">
          <name>af_join_request</name>
          <initializer>= 0b000001000</initializer>
          <briefdescription>
<para>Sending join request. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4dab869609c55109a542a9505cc75f2d93f" prot="public">
          <name>af_sync</name>
          <initializer>= 0b000010000</initializer>
          <briefdescription>
<para>Synchronising. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4da0b2e1dc7c3c4dddcf91e1ded344a7119" prot="public">
          <name>af_play</name>
          <initializer>= 0b000100000</initializer>
          <briefdescription>
<para>Playing. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4da1bf2b8d30df38ad9ff0eb1a310f0f71a" prot="public">
          <name>af_party_privacy_friends</name>
          <initializer>= 0b001000000</initializer>
          <briefdescription>
<para>Party privacy friends. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4da306112d9cff3d2a1192618089a500ed7" prot="public">
          <name>af_party_privacy_voice_channel</name>
          <initializer>= 0b010000000</initializer>
          <briefdescription>
<para>Party privacy voice channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7af4fdfe2315c48c3223b1dd6124d4da16e5931af2a44fd1050f0f2d2950df48" prot="public">
          <name>af_embedded</name>
          <initializer>= 0b100000000</initializer>
          <briefdescription>
<para>Embedded. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Activity types for rich presence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="117" column="1" bodyfile="include/dpp/presence.h" bodystart="117" bodyend="136"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1ae525add0ec39d647375aabe5ce455449" prot="public" static="no" strong="no">
        <type></type>
        <name>http_error</name>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449ab072c2cf95f4a567183c1d9fb0e6f3da" prot="public">
          <name>h_success</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Request successful. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449ac4bebebf31327d34b0cef9846cf57d26" prot="public">
          <name>h_unknown</name>
          <briefdescription>
<para>Status unknown. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449a2733f3556e92a1cf264f17064ffe8fba" prot="public">
          <name>h_connection</name>
          <briefdescription>
<para>Connect failed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449abfaba5457d3e065a9cb76a6b8a606c15" prot="public">
          <name>h_bind_ip_address</name>
          <briefdescription>
<para>Invalid local ip address. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449a1d3eaa9c4c535305b27f31cca5658e84" prot="public">
          <name>h_read</name>
          <briefdescription>
<para>Read error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449aa6d32000fe1b31898ed22b07cb59fd4f" prot="public">
          <name>h_write</name>
          <briefdescription>
<para>Write error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449a156ae0ec15a21a9dc9e441a88fcd27df" prot="public">
          <name>h_exceed_redirect_count</name>
          <briefdescription>
<para>Too many 30x redirects. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449a0d1c6efb2738ae30a285d275d4a8c344" prot="public">
          <name>h_canceled</name>
          <briefdescription>
<para>Request cancelled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449abc69e4c147eb8f8329c3a56fd366111a" prot="public">
          <name>h_ssl_connection</name>
          <briefdescription>
<para>SSL connection error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449adebed5c3ac6b8afa99546334cfb32090" prot="public">
          <name>h_ssl_loading_certs</name>
          <briefdescription>
<para>SSL cert loading error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449a87de6a04c8faa6470259fad90d64125d" prot="public">
          <name>h_ssl_server_verification</name>
          <briefdescription>
<para>SSL server verification error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449ab64dc04f299fcfd9b1f4750908eb0a2e" prot="public">
          <name>h_unsupported_multipart_boundary_chars</name>
          <briefdescription>
<para>Unsupported multipart boundary characters. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1ae525add0ec39d647375aabe5ce455449a65bb2cb9582bd3e13fc7704e36a5bf54" prot="public">
          <name>h_compression</name>
          <briefdescription>
<para>Compression error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Error values. Most of these are currently unused in <ref refid="classdpp_1_1https__client" kindref="compound">https_client</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/queues.h" line="38" column="1" bodyfile="include/dpp/queues.h" bodystart="38" bodyend="65"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88" prot="public" static="no" strong="no">
        <type></type>
        <name>http_method</name>
        <enumvalue id="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88a1c5397a2ab65a9b09e466d3e7cf5a82e" prot="public">
          <name>m_get</name>
          <briefdescription>
<para>GET. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88afc49711c29fdc4f00456e06562c9168e" prot="public">
          <name>m_post</name>
          <briefdescription>
<para>POST. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88aaaa5f54e87d3160af88f2bc295b77fb8" prot="public">
          <name>m_put</name>
          <briefdescription>
<para>PUT. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88ace6f9be8a174be8101dc04681777a09a" prot="public">
          <name>m_patch</name>
          <briefdescription>
<para>PATCH. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88a73688ae9310f5f6b452d1e5e0a09319f" prot="public">
          <name>m_delete</name>
          <briefdescription>
<para>DELETE. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Various types of http method supported by the Discord API. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/queues.h" line="107" column="1" bodyfile="include/dpp/queues.h" bodystart="107" bodyend="118"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1af803e69eddf23c5862947295f3df5d53" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>role_flags</name>
        <enumvalue id="namespacedpp_1af803e69eddf23c5862947295f3df5d53a28bd72d5ab200ddcdadd9759c84f2c2e" prot="public">
          <name>r_hoist</name>
          <initializer>=		0b00000001</initializer>
          <briefdescription>
<para>Hoisted role. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af803e69eddf23c5862947295f3df5d53aed8ce041eb7cb3a5cf913de8efbbddc6" prot="public">
          <name>r_managed</name>
          <initializer>=		0b00000010</initializer>
          <briefdescription>
<para>Managed role (introduced by a bot or application) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af803e69eddf23c5862947295f3df5d53a50fbd694d79806b3b099b76c36765b26" prot="public">
          <name>r_mentionable</name>
          <initializer>=		0b00000100</initializer>
          <briefdescription>
<para>Mentionable with a ping. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af803e69eddf23c5862947295f3df5d53a3db26ad1126a3dda385d750b0da11026" prot="public">
          <name>r_premium_subscriber</name>
          <initializer>=	0b00001000</initializer>
          <briefdescription>
<para>This is set for the role given to nitro. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Various flags related to <ref refid="classdpp_1_1role" kindref="compound">dpp::role</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/role.h" line="32" column="1" bodyfile="include/dpp/role.h" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a6add40f37f2f043dede513edebaa67bd" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>event_privacy_level</name>
        <enumvalue id="namespacedpp_1a6add40f37f2f043dede513edebaa67bda7a9a0ce0175498c5930244eaaf8cd959" prot="public">
          <name>ep_guild_only</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>The event is visible to only guild members. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents the privacy of an event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/scheduled_event.h" line="35" column="1" bodyfile="include/dpp/scheduled_event.h" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a7d65d1ee306708cb7f7307502aaa1834" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>event_entity_type</name>
        <enumvalue id="namespacedpp_1a7d65d1ee306708cb7f7307502aaa1834acbbd006b9987090f39355d7621754456" prot="public">
          <name>eet_stage_instance</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>A stage instance. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d65d1ee306708cb7f7307502aaa1834a2c27a34dda63c3e5380b4fc2fd85bb59" prot="public">
          <name>eet_voice</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>A voice channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a7d65d1ee306708cb7f7307502aaa1834aa1781d7fd2101cb41e44c77eb9a47a52" prot="public">
          <name>eet_external</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>External to discord, or a text channel etc. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Event entity types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/scheduled_event.h" line="43" column="1" bodyfile="include/dpp/scheduled_event.h" bodystart="43" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a07ffd72c4bfd503c9c5980202c354e60" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>event_status</name>
        <enumvalue id="namespacedpp_1a07ffd72c4bfd503c9c5980202c354e60ae8677228c0ed107e942a36a6b4cdddee" prot="public">
          <name>es_scheduled</name>
          <initializer>=	1</initializer>
          <briefdescription>
<para>Scheduled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a07ffd72c4bfd503c9c5980202c354e60af9f79e39e58b7ba24154c0751ad09826" prot="public">
          <name>es_active</name>
          <initializer>=	2</initializer>
          <briefdescription>
<para>Active now. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a07ffd72c4bfd503c9c5980202c354e60aa235d17c1a6acc75d2b65ba3b82887dc" prot="public">
          <name>es_completed</name>
          <initializer>=	3</initializer>
          <briefdescription>
<para>Completed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a07ffd72c4bfd503c9c5980202c354e60a906d0907b74f3cb4cc0f9971c5644d03" prot="public">
          <name>es_cancelled</name>
          <initializer>=	4</initializer>
          <briefdescription>
<para>Cancelled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Event status types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/scheduled_event.h" line="55" column="1" bodyfile="include/dpp/scheduled_event.h" bodystart="55" bodyend="64"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a29954c9dfc5a906346177226d036a418" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>stage_privacy_level</name>
        <enumvalue id="namespacedpp_1a29954c9dfc5a906346177226d036a418ac442bedd28b30019b266b47b051250ed" prot="public">
          <name>sp_public</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>The Stage instance is visible publicly, such as on Stage Discovery. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a29954c9dfc5a906346177226d036a418aaff1c1f715ad735085ee6012c321012d" prot="public">
          <name>sp_guild_only</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>The Stage instance is visible to only guild members. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents the privacy of a stage instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stage_instance.h" line="34" column="1" bodyfile="include/dpp/stage_instance.h" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0" prot="public" static="no" strong="no">
        <type>uint32_t</type>
        <name>user_flags</name>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a08571594b32cf14501db06b9a39c0d2b" prot="public">
          <name>u_bot</name>
          <initializer>=				0b00000000000000000000001</initializer>
          <briefdescription>
<para>User is a bot. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0ab798237a2b87e22960a9928fede47221" prot="public">
          <name>u_system</name>
          <initializer>=			0b00000000000000000000010</initializer>
          <briefdescription>
<para>User is a system user (Clyde!) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a77ba30113792b4046dce41d9e0d3e092" prot="public">
          <name>u_mfa_enabled</name>
          <initializer>=			0b00000000000000000000100</initializer>
          <briefdescription>
<para>User has multi-factor authentication enabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a8055b637db4c88b54da2c3157ebb7f74" prot="public">
          <name>u_verified</name>
          <initializer>=			0b00000000000000000001000</initializer>
          <briefdescription>
<para>User is verified (verified email address) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a224c3134630104447a7d739f37f5f6f0" prot="public">
          <name>u_nitro_full</name>
          <initializer>=			0b00000000000000000010000</initializer>
          <briefdescription>
<para>User has full nitro. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0afe08f965f264db94c343e1cb6ed2ba76" prot="public">
          <name>u_nitro_classic</name>
          <initializer>=		0b00000000000000000100000</initializer>
          <briefdescription>
<para>User has nitro classic. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a4ba288ac839eaff56a3d46e373764d76" prot="public">
          <name>u_discord_employee</name>
          <initializer>=		0b00000000000000001000000</initializer>
          <briefdescription>
<para>User is discord staff. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a666e085f0d2ba3edbd420f36d68a5e7e" prot="public">
          <name>u_partnered_owner</name>
          <initializer>=		0b00000000000000010000000</initializer>
          <briefdescription>
<para>User owns a partnered server. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0ad59de70fe3833bd7b46b134bd6a77eeb" prot="public">
          <name>u_hypesquad_events</name>
          <initializer>=		0b00000000000000100000000</initializer>
          <briefdescription>
<para>User is a member of hypesquad events. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0aff3f9dd3f4da4e8c47c3dad9b080264e" prot="public">
          <name>u_bughunter_1</name>
          <initializer>=			0b00000000000001000000000</initializer>
          <briefdescription>
<para>User has BugHunter level 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a90aa6259394b0cc214042c0fa0ae5f36" prot="public">
          <name>u_house_bravery</name>
          <initializer>=		0b00000000000010000000000</initializer>
          <briefdescription>
<para>User is a member of House Bravery. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a092724653fc653a65807a13740eaec91" prot="public">
          <name>u_house_brilliance</name>
          <initializer>=		0b00000000000100000000000</initializer>
          <briefdescription>
<para>User is a member of House Brilliance. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a4c69e902b98a57d17f7ef74552af2223" prot="public">
          <name>u_house_balance</name>
          <initializer>=		0b00000000001000000000000</initializer>
          <briefdescription>
<para>User is a member of House Balance. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0aefb9e680096448b61609f13e1b23736a" prot="public">
          <name>u_early_supporter</name>
          <initializer>=		0b00000000010000000000000</initializer>
          <briefdescription>
<para>User is an early supporter. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0ad9e65390bac5097c18380407eeaa8891" prot="public">
          <name>u_team_user</name>
          <initializer>=			0b00000000100000000000000</initializer>
          <briefdescription>
<para>User is a team user. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a464829636537cdc63c5afae54f37f271" prot="public">
          <name>u_bughunter_2</name>
          <initializer>=			0b00000001000000000000000</initializer>
          <briefdescription>
<para>User is has Bug Hunter level 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0aa07166e5a0e4e1e29a43e924b9c6d41f" prot="public">
          <name>u_verified_bot</name>
          <initializer>=		0b00000010000000000000000</initializer>
          <briefdescription>
<para>User is a verified bot. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a52e7662e76e7375fdb2b2df4d3780d70" prot="public">
          <name>u_verified_bot_dev</name>
          <initializer>=	 	0b00000100000000000000000</initializer>
          <briefdescription>
<para>User has the Early Verified Bot Developer badge. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a2aef392b3338053d54a8e2bc0a3a465f" prot="public">
          <name>u_animated_icon</name>
          <initializer>=		0b00001000000000000000000</initializer>
          <briefdescription>
<para>User&apos;s icon is animated. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a05e7983fd9a8181c8d8e59faa6d43b79" prot="public">
          <name>u_certified_moderator</name>
          <initializer>=		0b00010000000000000000000</initializer>
          <briefdescription>
<para>User is a certified moderator. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a99a238db04976402abb94ea0c989d8c0a87c2acb3a9ffda46076dd46150c02c30" prot="public">
          <name>u_bot_http_interactions</name>
          <initializer>=	0b00100000000000000000000</initializer>
          <briefdescription>
<para>User is a bot using HTTP interactions (shows online even when not connected to a websocket) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Various bitmask flags used to represent information about a <ref refid="classdpp_1_1user" kindref="compound">dpp::user</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/user.h" line="34" column="1" bodyfile="include/dpp/user.h" bodystart="34" bodyend="77"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a03f707e068e2f7e7c7277094af901813" prot="public" static="no" strong="no">
        <type></type>
        <name>voiceregion_flags</name>
        <enumvalue id="namespacedpp_1a03f707e068e2f7e7c7277094af901813afb06fc75de5270a1646e4ed14754ac1c" prot="public">
          <name>v_optimal</name>
          <initializer>= 0x00000001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a03f707e068e2f7e7c7277094af901813a7ffeb4c61fc6bdfc3c66fc45837df985" prot="public">
          <name>v_deprecated</name>
          <initializer>= 0x00000010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a03f707e068e2f7e7c7277094af901813a2e982013a8628fec52e4d04c2079aa8f" prot="public">
          <name>v_custom</name>
          <initializer>= 0x00000100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a03f707e068e2f7e7c7277094af901813a17f33e1022039e04ac480b2956075cc2" prot="public">
          <name>v_vip</name>
          <initializer>= 0x00001000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flags related to a voice region. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="32" column="1" bodyfile="include/dpp/voiceregion.h" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a6a7cc94290184616d0267d751f02d53f" prot="public" static="no" strong="no">
        <type></type>
        <name>voicestate_flags</name>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53fad67d4828942e6cb916ad2911f79a3948" prot="public">
          <name>vs_deaf</name>
          <initializer>=	0b00000001</initializer>
          <briefdescription>
<para>Deafened. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53faa3f883725cc590d56f32a968eef566aa" prot="public">
          <name>vs_mute</name>
          <initializer>=	0b00000010</initializer>
          <briefdescription>
<para>Muted. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53fa320ea835cd4680b54d5935d8fb32953a" prot="public">
          <name>vs_self_mute</name>
          <initializer>=	0b00000100</initializer>
          <briefdescription>
<para>Self Muted. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53fabaf7cfcc392357c72245e847b3dc6954" prot="public">
          <name>vs_self_deaf</name>
          <initializer>=	0b00001000</initializer>
          <briefdescription>
<para>Self Deafened. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53faa71e77d5dec0a32ba01779884f83cf3b" prot="public">
          <name>vs_self_stream</name>
          <initializer>=	0b00010000</initializer>
          <briefdescription>
<para>Self Streaming. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53fa33cbc9aa408db6c7ee21d28dbbbdbe57" prot="public">
          <name>vs_self_video</name>
          <initializer>=	0b00100000</initializer>
          <briefdescription>
<para>Self Video. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a6a7cc94290184616d0267d751f02d53fab6b112d9c3a80339f4c722d127c5e4d6" prot="public">
          <name>vs_suppress</name>
          <initializer>=	0b01000000</initializer>
          <briefdescription>
<para>Suppression. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Bit mask flags relating to voice states. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="33" column="1" bodyfile="include/dpp/voicestate.h" bodystart="33" bodyend="41"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1a20f1f69fbf5558149824584aeab4ecc0" prot="public" static="no" strong="no">
        <type></type>
        <name>webhook_type</name>
        <enumvalue id="namespacedpp_1a20f1f69fbf5558149824584aeab4ecc0aa051294204db430ee0ec49c4bbd6be7a" prot="public">
          <name>w_incoming</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Incoming webhook. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1a20f1f69fbf5558149824584aeab4ecc0acc388c1bea88aabf998bae9889bdf354" prot="public">
          <name>w_channel_follower</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Channel following webhook. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines types of webhook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/webhook.h" line="35" column="1" bodyfile="include/dpp/webhook.h" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1af7cde3079d745428f44ef6231a2ac672" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>websocket_protocol_t</name>
        <enumvalue id="namespacedpp_1af7cde3079d745428f44ef6231a2ac672abea765ef009bccd9080351f806bae437" prot="public">
          <name>ws_json</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>JSON data, text, UTF-8 character set. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af7cde3079d745428f44ef6231a2ac672ac465dd3c03a072c41148d3562b6cbd64" prot="public">
          <name>ws_etf</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Erlang Term Format (ETF) binary protocol. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Websocket protocol types available on Discord. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/wsclient.h" line="34" column="1" bodyfile="include/dpp/wsclient.h" bodystart="34" bodyend="43"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1af3b7f3e861707f45beefa9449de70519" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>ws_state</name>
        <enumvalue id="namespacedpp_1af3b7f3e861707f45beefa9449de70519ac4e7462fef7673f64bf129dde58c9f70" prot="public">
          <name>HTTP_HEADERS</name>
          <briefdescription>
<para>Sending/receiving HTTP headers, acting as a standard HTTP connection. This is the state prior to receiving &quot;HTTP/1.1 101 Switching Protocols&quot; from the server side. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1af3b7f3e861707f45beefa9449de70519ab21dc4f63ee869c75f21c77922769e6d" prot="public">
          <name>CONNECTED</name>
          <briefdescription>
<para>Connected as a websocket, and &quot;upgraded&quot;. Now talking using binary frames. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Websocket connection status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/wsclient.h" line="48" column="1" bodyfile="include/dpp/wsclient.h" bodystart="48" bodyend="60"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedpp_1aa84690a0ba0251e8609440e93919da1c" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>ws_opcode</name>
        <enumvalue id="namespacedpp_1aa84690a0ba0251e8609440e93919da1cac641ff6036ee7056ef3a2617f7dc6163" prot="public">
          <name>OP_CONTINUATION</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
<para>Continuation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aa84690a0ba0251e8609440e93919da1ca24f8b16a9b360f9ab17180433018587e" prot="public">
          <name>OP_TEXT</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
<para>Text frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aa84690a0ba0251e8609440e93919da1cac6c295924c27154cf564628ebb9677c9" prot="public">
          <name>OP_BINARY</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
<para>Binary frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aa84690a0ba0251e8609440e93919da1caf10fce37d364106c0d8d13472f031bb0" prot="public">
          <name>OP_CLOSE</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
<para>Close notification with close code. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aa84690a0ba0251e8609440e93919da1ca1cba9d927313c32ed6fdbf191018ee59" prot="public">
          <name>OP_PING</name>
          <initializer>= 0x09</initializer>
          <briefdescription>
<para>Low level ping. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedpp_1aa84690a0ba0251e8609440e93919da1ca0dbab9ed2998b084825c4803c52fb7bc" prot="public">
          <name>OP_PONG</name>
          <initializer>= 0x0a</initializer>
          <briefdescription>
<para>Low level pong. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Low-level websocket opcodes for frames. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/wsclient.h" line="65" column="1" bodyfile="include/dpp/wsclient.h" bodystart="66" bodyend="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacedpp_1a710b32b577396ba92917d0578f0bedb6" prot="public" static="no">
        <type>std::variant&lt; std::monostate, std::string, int64_t, bool, <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, double &gt;</type>
        <definition>typedef std::variant&lt;std::monostate, std::string, int64_t, bool, snowflake, double&gt; dpp::command_value</definition>
        <argsstring></argsstring>
        <name>command_value</name>
        <briefdescription>
<para>This type is a variant that can hold any of the potential native data types represented by the enum <ref refid="namespacedpp_1abc401d86119c6443bf72d736857c1a58" kindref="member">dpp::command_option_type</ref>. It is used in interactions. </para>
        </briefdescription>
        <detaileddescription>
<para>std::monostate indicates an invalid parameter value, e.g. an unfilled optional parameter. std::int64_t will be for all integer options, double for decimal numbers and <ref refid="classdpp_1_1snowflake" kindref="compound">dpp::snowflake</ref> for anything ID related.</para>
<para>You can retrieve them with std::get(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="84" column="22" bodyfile="include/dpp/appcommand.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a3e80cf6b8ecad18c951fec28be2377ba" prot="public" static="no">
        <type>std::variant&lt; std::monostate, int64_t, double &gt;</type>
        <definition>typedef std::variant&lt;std::monostate, int64_t, double&gt; dpp::command_option_range</definition>
        <argsstring></argsstring>
        <name>command_option_range</name>
        <briefdescription>
<para>A minimum or maximum value for co_number and co_integer <ref refid="structdpp_1_1command__option" kindref="compound">dpp::command_option</ref> types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="144" column="22" bodyfile="include/dpp/appcommand.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1adfefe335636cdf5dbbba145a3828c554" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1slashcommand" kindref="compound">slashcommand</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, slashcommand&gt; dpp::slashcommand_map</definition>
        <argsstring></argsstring>
        <name>slashcommand_map</name>
        <briefdescription>
<para>A group of application slash commands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="1207" column="28" bodyfile="include/dpp/appcommand.h" bodystart="1207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a855d4fbe3b9026d08b31561a61a82e92" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1guild__command__permissions" kindref="compound">guild_command_permissions</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, guild_command_permissions&gt; dpp::guild_command_permissions_map</definition>
        <argsstring></argsstring>
        <name>guild_command_permissions_map</name>
        <briefdescription>
<para>A group of guild command permissions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="1212" column="28" bodyfile="include/dpp/appcommand.h" bodystart="1212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a9cd9f77c18810c3ad68e06b0625099bd" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1application" kindref="compound">application</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, application&gt; dpp::application_map</definition>
        <argsstring></argsstring>
        <name>application_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of applications. This is not currently ever sent by Discord API but the DPP standard setup for objects that can be received by REST has the possibility for this, so this exists. Don&apos;t ever expect to see one at present. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/application.h" line="159" column="28" bodyfile="include/dpp/application.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a9933dc4fb55fa0e30b939b905b9b0df6" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1automod__rule" kindref="compound">automod_rule</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, automod_rule&gt; dpp::automod_rule_map</definition>
        <argsstring></argsstring>
        <name>automod_rule_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of automod rules. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/automod.h" line="318" column="28" bodyfile="include/dpp/automod.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a52b195380df96e9c43f35fa2da82db14" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1ban" kindref="compound">ban</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, ban&gt; dpp::ban_map</definition>
        <argsstring></argsstring>
        <name>ban_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of bans </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/ban.h" line="65" column="28" bodyfile="include/dpp/ban.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a57e84724c41fed341bee0d653a06076a" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="structdpp_1_1thread__member" kindref="compound">thread_member</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, thread_member&gt; dpp::thread_member_map</definition>
        <argsstring></argsstring>
        <name>thread_member_map</name>
        <briefdescription>
<para>A group of thread member objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="241" column="28" bodyfile="include/dpp/channel.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a7c77c4dd9434985643b2f1993b227f30" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1channel" kindref="compound">channel</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, channel&gt; dpp::channel_map</definition>
        <argsstring></argsstring>
        <name>channel_map</name>
        <briefdescription>
<para>A group of channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="754" column="28" bodyfile="include/dpp/channel.h" bodystart="754" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1afb8eae726b5ea68baff8c48d7fb835af" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1thread" kindref="compound">thread</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, thread&gt; dpp::thread_map</definition>
        <argsstring></argsstring>
        <name>thread_map</name>
        <briefdescription>
<para>A group of threads. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="759" column="28" bodyfile="include/dpp/channel.h" bodystart="759" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a1b35f3248b32394ac9ecc8bbca668156" prot="public" static="no">
        <type><ref refid="classdpp_1_1collector" kindref="compound">dpp::collector</ref>&lt; <ref refid="structdpp_1_1channel__create__t" kindref="compound">dpp::channel_create_t</ref>, <ref refid="classdpp_1_1channel" kindref="compound">dpp::channel</ref> &gt;</type>
        <definition>typedef dpp::collector&lt;dpp::channel_create_t, dpp::channel&gt; dpp::channel_collector_t</definition>
        <argsstring></argsstring>
        <name>channel_collector_t</name>
        <briefdescription>
<para>Template type for base class of channel collector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/collector.h" line="170" column="24" bodyfile="include/dpp/collector.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1af373a94850580f1756dbee039b64a311" prot="public" static="no">
        <type><ref refid="classdpp_1_1collector" kindref="compound">dpp::collector</ref>&lt; <ref refid="structdpp_1_1thread__create__t" kindref="compound">dpp::thread_create_t</ref>, <ref refid="classdpp_1_1thread" kindref="compound">dpp::thread</ref> &gt;</type>
        <definition>typedef dpp::collector&lt;dpp::thread_create_t, dpp::thread&gt; dpp::thread_collector_t</definition>
        <argsstring></argsstring>
        <name>thread_collector_t</name>
        <briefdescription>
<para>Template type for base class of thread collector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/collector.h" line="175" column="24" bodyfile="include/dpp/collector.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a75c3daf035b2a2d9a5e0fcc5f11c936f" prot="public" static="no">
        <type><ref refid="classdpp_1_1collector" kindref="compound">dpp::collector</ref>&lt; <ref refid="structdpp_1_1guild__role__create__t" kindref="compound">dpp::guild_role_create_t</ref>, <ref refid="classdpp_1_1role" kindref="compound">dpp::role</ref> &gt;</type>
        <definition>typedef dpp::collector&lt;dpp::guild_role_create_t, dpp::role&gt; dpp::role_collector_t</definition>
        <argsstring></argsstring>
        <name>role_collector_t</name>
        <briefdescription>
<para>Template type for base class of role collector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/collector.h" line="180" column="24" bodyfile="include/dpp/collector.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a45736823a51be6eb7910f036b30397b2" prot="public" static="no">
        <type><ref refid="classdpp_1_1collector" kindref="compound">dpp::collector</ref>&lt; <ref refid="structdpp_1_1guild__scheduled__event__create__t" kindref="compound">dpp::guild_scheduled_event_create_t</ref>, <ref refid="structdpp_1_1scheduled__event" kindref="compound">dpp::scheduled_event</ref> &gt;</type>
        <definition>typedef dpp::collector&lt;dpp::guild_scheduled_event_create_t, dpp::scheduled_event&gt; dpp::scheduled_event_collector_t</definition>
        <argsstring></argsstring>
        <name>scheduled_event_collector_t</name>
        <briefdescription>
<para>Template type for base class of scheduled event collector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/collector.h" line="185" column="24" bodyfile="include/dpp/collector.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a51b63457959e1729f307f1e943ebf00d" prot="public" static="no">
        <type><ref refid="classdpp_1_1collector" kindref="compound">dpp::collector</ref>&lt; <ref refid="structdpp_1_1message__create__t" kindref="compound">dpp::message_create_t</ref>, <ref refid="structdpp_1_1message" kindref="compound">dpp::message</ref> &gt;</type>
        <definition>typedef dpp::collector&lt;dpp::message_create_t, dpp::message&gt; dpp::message_collector_t</definition>
        <argsstring></argsstring>
        <name>message_collector_t</name>
        <briefdescription>
<para>Template type for base class of message collector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/collector.h" line="190" column="24" bodyfile="include/dpp/collector.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a04a972a0055376f744c81b0ac9129577" prot="public" static="no">
        <type><ref refid="classdpp_1_1collector" kindref="compound">dpp::collector</ref>&lt; <ref refid="structdpp_1_1message__reaction__add__t" kindref="compound">dpp::message_reaction_add_t</ref>, <ref refid="classdpp_1_1collected__reaction" kindref="compound">dpp::collected_reaction</ref> &gt;</type>
        <definition>typedef dpp::collector&lt;dpp::message_reaction_add_t, dpp::collected_reaction&gt; dpp::reaction_collector_t</definition>
        <argsstring></argsstring>
        <name>reaction_collector_t</name>
        <briefdescription>
<para>Template type for base class of message reaction collector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/collector.h" line="195" column="24" bodyfile="include/dpp/collector.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1aeda63f2562bc6f52b50b793b70341abd" prot="public" static="no">
        <type>std::variant&lt; std::monostate, std::string, <ref refid="classdpp_1_1role" kindref="compound">dpp::role</ref>, <ref refid="classdpp_1_1channel" kindref="compound">dpp::channel</ref>, <ref refid="structdpp_1_1resolved__user" kindref="compound">dpp::resolved_user</ref>, int64_t, bool, double &gt;</type>
        <definition>typedef std::variant&lt;std::monostate, std::string, dpp::role, dpp::channel, dpp::resolved_user, int64_t, bool, double&gt; dpp::command_parameter</definition>
        <argsstring></argsstring>
        <name>command_parameter</name>
        <briefdescription>
<para>Represents a received parameter. We use variant so that multiple non-related types can be contained within. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="63" column="22" bodyfile="include/dpp/commandhandler.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a6daf230da747f01eeaa36fd3d5e51a65" prot="public" static="no">
        <type>std::vector&lt; std::pair&lt; std::string, <ref refid="structdpp_1_1param__info" kindref="compound">param_info</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::pair&lt;std::string, param_info&gt; &gt; dpp::parameter_registration_t</definition>
        <argsstring></argsstring>
        <name>parameter_registration_t</name>
        <briefdescription>
<para>Parameter list used during registration. Note that use of vector/pair is important here to preserve parameter order, as opposed to unordered_map (which doesn&apos;t guarantee any order at all) and std::map, which reorders keys alphabetically. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="128" column="21" bodyfile="include/dpp/commandhandler.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a632b6ae7b47a5feb95104644a487e4f1" prot="public" static="no">
        <type>std::vector&lt; std::pair&lt; std::string, <ref refid="namespacedpp_1aeda63f2562bc6f52b50b793b70341abd" kindref="member">command_parameter</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::pair&lt;std::string, command_parameter&gt; &gt; dpp::parameter_list_t</definition>
        <argsstring></argsstring>
        <name>parameter_list_t</name>
        <briefdescription>
<para>Parameter list for a called command. See <ref refid="namespacedpp_1a6daf230da747f01eeaa36fd3d5e51a65" kindref="member">dpp::parameter_registration_t</ref> for an explanation as to why vector is used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="134" column="21" bodyfile="include/dpp/commandhandler.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a72a8ab3231965d0e361f305a7fe431f3" prot="public" static="no">
        <type>std::function&lt; void(const std::string &amp;, const <ref refid="namespacedpp_1a632b6ae7b47a5feb95104644a487e4f1" kindref="member">parameter_list_t</ref> &amp;, <ref refid="structdpp_1_1command__source" kindref="compound">command_source</ref>)&gt;</type>
        <definition>typedef std::function&lt;void(const std::string&amp;, const parameter_list_t&amp;, command_source)&gt; dpp::command_handler</definition>
        <argsstring></argsstring>
        <name>command_handler</name>
        <briefdescription>
<para>The function definition for a command handler. Expects a command name string, and a list of command parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000023"><xreftitle>Deprecated</xreftitle><xrefdescription><para>commandhandler and message commands are deprecated and <ref refid="classdpp_1_1slashcommand" kindref="compound">dpp::slashcommand</ref> is encouraged as a replacement. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/commandhandler.h" line="193" column="23" bodyfile="include/dpp/commandhandler.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a4f13c6a68b674ab0b3e55f6df38b46a2" prot="public" static="no">
        <type>std::coroutine_handle&lt; struct <ref refid="structdpp_1_1promise" kindref="compound">promise</ref> &gt;</type>
        <definition>using dpp::handle_type = typedef std::coroutine_handle&lt;struct promise&gt;</definition>
        <argsstring></argsstring>
        <name>handle_type</name>
        <briefdescription>
<para>Shorthand for the coroutine handle&apos;s type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/coro.h" line="11" column="1" bodyfile="include/dpp/coro.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a022dce6b086ec4515384eaece59c84c3" prot="public" static="no">
        <type>std::function&lt; void(const <ref refid="structdpp_1_1confirmation__callback__t" kindref="compound">confirmation_callback_t</ref> &amp;)&gt;</type>
        <definition>typedef std::function&lt; void(const confirmation_callback_t &amp;)&gt; dpp::command_completion_event_t</definition>
        <argsstring></argsstring>
        <name>command_completion_event_t</name>
        <briefdescription>
<para>A function used as a callback for any REST based command. </para>
        </briefdescription>
        <detaileddescription>
<para>A callback upon command completion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="57" column="23" bodyfile="include/dpp/dispatcher.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1ad4c862611232b317153bcfc106534292" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="structdpp_1_1dns__cache__entry" kindref="compound">dns_cache_entry</ref> * &gt;</type>
        <definition>using dpp::dns_cache_t = typedef std::unordered_map&lt;std::string, dns_cache_entry*&gt;</definition>
        <argsstring></argsstring>
        <name>dns_cache_t</name>
        <briefdescription>
<para>Cache container type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dns.h" line="65" column="1" bodyfile="include/dpp/dns.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a9a1e92263bfa31397d459725d26e47b6" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1dtemplate" kindref="compound">dtemplate</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, dtemplate&gt; dpp::dtemplate_map</definition>
        <argsstring></argsstring>
        <name>dtemplate_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A container of invites </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dtemplate.h" line="100" column="28" bodyfile="include/dpp/dtemplate.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a58e2720e1ccc11d2b3b1be2e18df79d9" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1emoji" kindref="compound">emoji</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, emoji&gt; dpp::emoji_map</definition>
        <argsstring></argsstring>
        <name>emoji_map</name>
        <briefdescription>
<para>Group of emojis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/emoji.h" line="165" column="28" bodyfile="include/dpp/emoji.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a674dfd30e37779538e80d95fcb13770f" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, guild_member&gt; dpp::members_container</definition>
        <argsstring></argsstring>
        <name>members_container</name>
        <briefdescription>
<para>Guild members container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="434" column="28" bodyfile="include/dpp/guild.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a0d9e1952e25391a3379ee3db2d930bf7" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1guild" kindref="compound">guild</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, guild&gt; dpp::guild_map</definition>
        <argsstring></argsstring>
        <name>guild_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A container of guilds </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="906" column="28" bodyfile="include/dpp/guild.h" bodystart="906" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a219aedbe5bf37835c4a65115fccba278" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, guild_member&gt; dpp::guild_member_map</definition>
        <argsstring></argsstring>
        <name>guild_member_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A container of guild members </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="956" column="28" bodyfile="include/dpp/guild.h" bodystart="956" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a4dbbdf54366910bacd95554ccbc705a2" prot="public" static="no">
        <type>std::multimap&lt; std::string, std::string &gt;</type>
        <definition>typedef std::multimap&lt;std::string, std::string&gt; dpp::http_headers</definition>
        <argsstring></argsstring>
        <name>http_headers</name>
        <briefdescription>
<para>Request headers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/httpsclient.h" line="77" column="23" bodyfile="include/dpp/httpsclient.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1aa13e2c5898009fad42ebe12fd5641d8a" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1integration" kindref="compound">integration</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, integration&gt; dpp::integration_map</definition>
        <argsstring></argsstring>
        <name>integration_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of integrations </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/integration.h" line="165" column="28" bodyfile="include/dpp/integration.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1ad5f78f7b7bca070ac34c0267ca49013a" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1connection" kindref="compound">connection</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, connection&gt; dpp::connection_map</definition>
        <argsstring></argsstring>
        <name>connection_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of connections </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/integration.h" line="168" column="28" bodyfile="include/dpp/integration.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1aa85b043fd45cf24caa23ab6004a2415a" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="classdpp_1_1invite" kindref="compound">invite</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;std::string, invite&gt; dpp::invite_map</definition>
        <argsstring></argsstring>
        <name>invite_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A container of invites </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/invite.h" line="108" column="28" bodyfile="include/dpp/invite.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a44d4dd39b5d7c24c5fe97a76a73cf708" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="structdpp_1_1message" kindref="compound">message</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, message&gt; dpp::message_map</definition>
        <argsstring></argsstring>
        <name>message_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of messages </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1463" column="28" bodyfile="include/dpp/message.h" bodystart="1463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a0d09f413c01571a98b8ec9a267a0e48f" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="structdpp_1_1sticker" kindref="compound">sticker</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, sticker&gt; dpp::sticker_map</definition>
        <argsstring></argsstring>
        <name>sticker_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of stickers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1466" column="28" bodyfile="include/dpp/message.h" bodystart="1466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1adc1d24fba1d0f9fbdbe054d31efe5283" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="structdpp_1_1sticker__pack" kindref="compound">sticker_pack</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, sticker_pack&gt; dpp::sticker_pack_map</definition>
        <argsstring></argsstring>
        <name>sticker_pack_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of sticker packs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/message.h" line="1469" column="28" bodyfile="include/dpp/message.h" bodystart="1469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a6d9fe4e502a90f9ffec8b90888a587e6" prot="public" static="no">
        <type><ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7" kindref="member">permissions</ref></type>
        <definition>using dpp::role_permissions = typedef permissions</definition>
        <argsstring></argsstring>
        <name>role_permissions</name>
        <briefdescription>
<para>Represents the various discord permissions. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000036"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7" kindref="member">dpp::permissions</ref> instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="80" column="1" bodyfile="include/dpp/permissions.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1aa71f7e347422516d1022707f1d3e5b1c" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1presence" kindref="compound">presence</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, presence&gt; dpp::presence_map</definition>
        <argsstring></argsstring>
        <name>presence_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A container of presences </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/presence.h" line="382" column="28" bodyfile="include/dpp/presence.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1ae3249e99494d04bb4be50341f474621e" prot="public" static="no">
        <type>std::function&lt; void(const <ref refid="structdpp_1_1http__request__completion__t" kindref="compound">http_request_completion_t</ref> &amp;)&gt;</type>
        <definition>typedef std::function&lt;void(const http_request_completion_t&amp;)&gt; dpp::http_completion_event</definition>
        <argsstring></argsstring>
        <name>http_completion_event</name>
        <briefdescription>
<para>Results of HTTP requests are called back to these std::function types. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Returned http_completion_events are called ASYNCHRONOUSLY in your code which means they execute in a separate thread. The completion events arrive in order. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/queues.h" line="102" column="23" bodyfile="include/dpp/queues.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a13c4d4e6238396245b349e6a637897e0" prot="public" static="no">
        <type>std::map&lt; uint32_t, class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> * &gt;</type>
        <definition>typedef std::map&lt;uint32_t, class discord_client*&gt; dpp::shard_list</definition>
        <argsstring></argsstring>
        <name>shard_list</name>
        <briefdescription>
<para>A list of shards. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/restresults.h" line="77" column="18" bodyfile="include/dpp/restresults.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a81dbdaf135761d889b66c534ed8713d0" prot="public" static="no">
        <type>std::variant&lt; <ref refid="structdpp_1_1confirmation" kindref="compound">confirmation</ref>, <ref refid="structdpp_1_1message" kindref="compound">message</ref>, <ref refid="namespacedpp_1a44d4dd39b5d7c24c5fe97a76a73cf708" kindref="member">message_map</ref>, <ref refid="classdpp_1_1user" kindref="compound">user</ref>, <ref refid="classdpp_1_1user__identified" kindref="compound">user_identified</ref>, <ref refid="namespacedpp_1a1c4073c92e19579c06591033a4a234e1" kindref="member">user_map</ref>, <ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref>, <ref refid="namespacedpp_1a219aedbe5bf37835c4a65115fccba278" kindref="member">guild_member_map</ref>, <ref refid="classdpp_1_1channel" kindref="compound">channel</ref>, <ref refid="namespacedpp_1a7c77c4dd9434985643b2f1993b227f30" kindref="member">channel_map</ref>, <ref refid="structdpp_1_1thread__member" kindref="compound">thread_member</ref>, <ref refid="namespacedpp_1a57e84724c41fed341bee0d653a06076a" kindref="member">thread_member_map</ref>, <ref refid="classdpp_1_1guild" kindref="compound">guild</ref>, <ref refid="namespacedpp_1a0d9e1952e25391a3379ee3db2d930bf7" kindref="member">guild_map</ref>, <ref refid="classdpp_1_1guild__command__permissions" kindref="compound">guild_command_permissions</ref>, <ref refid="namespacedpp_1a855d4fbe3b9026d08b31561a61a82e92" kindref="member">guild_command_permissions_map</ref>, <ref refid="classdpp_1_1role" kindref="compound">role</ref>, <ref refid="namespacedpp_1adb1c0770936ed4ac64158cf9523e638b" kindref="member">role_map</ref>, <ref refid="classdpp_1_1invite" kindref="compound">invite</ref>, <ref refid="namespacedpp_1aa85b043fd45cf24caa23ab6004a2415a" kindref="member">invite_map</ref>, <ref refid="classdpp_1_1dtemplate" kindref="compound">dtemplate</ref>, <ref refid="namespacedpp_1a9a1e92263bfa31397d459725d26e47b6" kindref="member">dtemplate_map</ref>, <ref refid="classdpp_1_1emoji" kindref="compound">emoji</ref>, <ref refid="namespacedpp_1a58e2720e1ccc11d2b3b1be2e18df79d9" kindref="member">emoji_map</ref>, <ref refid="classdpp_1_1ban" kindref="compound">ban</ref>, <ref refid="namespacedpp_1a52b195380df96e9c43f35fa2da82db14" kindref="member">ban_map</ref>, <ref refid="classdpp_1_1voiceregion" kindref="compound">voiceregion</ref>, <ref refid="namespacedpp_1ae90871830444cab0316109a1824fc0b8" kindref="member">voiceregion_map</ref>, <ref refid="classdpp_1_1integration" kindref="compound">integration</ref>, <ref refid="namespacedpp_1aa13e2c5898009fad42ebe12fd5641d8a" kindref="member">integration_map</ref>, <ref refid="classdpp_1_1webhook" kindref="compound">webhook</ref>, <ref refid="namespacedpp_1a1cb0cc074a1653521bab47f83498e9ca" kindref="member">webhook_map</ref>, <ref refid="structdpp_1_1prune" kindref="compound">prune</ref>, <ref refid="classdpp_1_1guild__widget" kindref="compound">guild_widget</ref>, <ref refid="structdpp_1_1gateway" kindref="compound">gateway</ref>, <ref refid="classdpp_1_1interaction" kindref="compound">interaction</ref>, <ref refid="structdpp_1_1interaction__response" kindref="compound">interaction_response</ref>, <ref refid="classdpp_1_1auditlog" kindref="compound">auditlog</ref>, <ref refid="classdpp_1_1slashcommand" kindref="compound">slashcommand</ref>, <ref refid="namespacedpp_1adfefe335636cdf5dbbba145a3828c554" kindref="member">slashcommand_map</ref>, <ref refid="structdpp_1_1stage__instance" kindref="compound">stage_instance</ref>, <ref refid="structdpp_1_1sticker" kindref="compound">sticker</ref>, <ref refid="namespacedpp_1a0d09f413c01571a98b8ec9a267a0e48f" kindref="member">sticker_map</ref>, <ref refid="structdpp_1_1sticker__pack" kindref="compound">sticker_pack</ref>, <ref refid="namespacedpp_1adc1d24fba1d0f9fbdbe054d31efe5283" kindref="member">sticker_pack_map</ref>, <ref refid="classdpp_1_1application" kindref="compound">application</ref>, <ref refid="namespacedpp_1a9cd9f77c18810c3ad68e06b0625099bd" kindref="member">application_map</ref>, <ref refid="classdpp_1_1connection" kindref="compound">connection</ref>, <ref refid="namespacedpp_1ad5f78f7b7bca070ac34c0267ca49013a" kindref="member">connection_map</ref>, <ref refid="classdpp_1_1thread" kindref="compound">thread</ref>, <ref refid="namespacedpp_1afb8eae726b5ea68baff8c48d7fb835af" kindref="member">thread_map</ref>, <ref refid="structdpp_1_1scheduled__event" kindref="compound">scheduled_event</ref>, <ref refid="namespacedpp_1a1d8eeeaca0cdc14125cbf2f4f0722781" kindref="member">scheduled_event_map</ref>, <ref refid="structdpp_1_1event__member" kindref="compound">event_member</ref>, <ref refid="namespacedpp_1a912d2a5c3a763ffc462dfb7c4c7a0562" kindref="member">event_member_map</ref>, <ref refid="classdpp_1_1automod__rule" kindref="compound">automod_rule</ref>, <ref refid="namespacedpp_1a9933dc4fb55fa0e30b939b905b9b0df6" kindref="member">automod_rule_map</ref> &gt;</type>
        <definition>typedef std::variant&lt; confirmation, message, message_map, user, user_identified, user_map, guild_member, guild_member_map, channel, channel_map, thread_member, thread_member_map, guild, guild_map, guild_command_permissions, guild_command_permissions_map, role, role_map, invite, invite_map, dtemplate, dtemplate_map, emoji, emoji_map, ban, ban_map, voiceregion, voiceregion_map, integration, integration_map, webhook, webhook_map, prune, guild_widget, gateway, interaction, interaction_response, auditlog, slashcommand, slashcommand_map, stage_instance, sticker, sticker_map, sticker_pack, sticker_pack_map, application, application_map, connection, connection_map, thread, thread_map, scheduled_event, scheduled_event_map, event_member, event_member_map, automod_rule, automod_rule_map &gt; dpp::confirmable_t</definition>
        <argsstring></argsstring>
        <name>confirmable_t</name>
        <briefdescription>
<para>A container for types that can be returned for a REST API call. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/restresults.h" line="192" column="2" bodyfile="include/dpp/restresults.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1aafc7fb6792b12d92c4e77b46d20924ee" prot="public" static="no">
        <type>std::function&lt; void(json &amp;, const <ref refid="structdpp_1_1http__request__completion__t" kindref="compound">http_request_completion_t</ref> &amp;)&gt;</type>
        <definition>typedef std::function&lt;void(json&amp;, const http_request_completion_t&amp;)&gt; dpp::json_encode_t</definition>
        <argsstring></argsstring>
        <name>json_encode_t</name>
        <briefdescription>
<para>Automatically JSON encoded HTTP result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/restresults.h" line="313" column="23" bodyfile="include/dpp/restresults.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1adb1c0770936ed4ac64158cf9523e638b" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1role" kindref="compound">role</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, role&gt; dpp::role_map</definition>
        <argsstring></argsstring>
        <name>role_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of roles </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/role.h" line="553" column="28" bodyfile="include/dpp/role.h" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a1d8eeeaca0cdc14125cbf2f4f0722781" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="structdpp_1_1scheduled__event" kindref="compound">scheduled_event</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, scheduled_event&gt; dpp::scheduled_event_map</definition>
        <argsstring></argsstring>
        <name>scheduled_event_map</name>
        <briefdescription>
<para>A group of scheduled events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/scheduled_event.h" line="216" column="28" bodyfile="include/dpp/scheduled_event.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a912d2a5c3a763ffc462dfb7c4c7a0562" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="structdpp_1_1event__member" kindref="compound">event_member</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, event_member&gt; dpp::event_member_map</definition>
        <argsstring></argsstring>
        <name>event_member_map</name>
        <briefdescription>
<para>A group of scheduled event members. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/scheduled_event.h" line="221" column="28" bodyfile="include/dpp/scheduled_event.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a51156024d6211aef2731770340cfe452" prot="public" static="no">
        <type>int</type>
        <definition>typedef int dpp::socket</definition>
        <argsstring></argsstring>
        <name>socket</name>
        <briefdescription>
<para>Represents a socket file descriptor. This is used to ensure parity between windows and unix-like systems. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/socket.h" line="15" column="15" bodyfile="include/dpp/socket.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a982a3efeac04ddb820bbe87b08155640" prot="public" static="no">
        <type>std::function&lt; <ref refid="namespacedpp_1a51156024d6211aef2731770340cfe452" kindref="member">dpp::socket</ref>()&gt;</type>
        <definition>typedef std::function&lt;dpp::socket()&gt; dpp::socket_callback_t</definition>
        <argsstring></argsstring>
        <name>socket_callback_t</name>
        <briefdescription>
<para>A callback for socket status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="40" column="23" bodyfile="include/dpp/sslclient.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a9f89983921c7ddfa7f91705bd05e2b9e" prot="public" static="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>typedef std::function&lt;void()&gt; dpp::socket_notification_t</definition>
        <argsstring></argsstring>
        <name>socket_notification_t</name>
        <briefdescription>
<para>A socket notification callback. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="45" column="23" bodyfile="include/dpp/sslclient.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a81bdee80b6fd684ea6959ec67e6ecafb" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="structdpp_1_1stage__instance" kindref="compound">stage_instance</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, stage_instance&gt; dpp::stage_instance_map</definition>
        <argsstring></argsstring>
        <name>stage_instance_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of stage instances </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stage_instance.h" line="84" column="28" bodyfile="include/dpp/stage_instance.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a8b9ab0b8cf29978147a7df3947cd8f30" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t dpp::timer</definition>
        <argsstring></argsstring>
        <name>timer</name>
        <briefdescription>
<para>Represents a timer handle. Returned from <ref refid="classdpp_1_1cluster_1a2a87a674519512fbf96b59f9b9cb8bb5" kindref="member">cluster::start_timer</ref> and used by <ref refid="classdpp_1_1cluster_1a065dbc305d760d94f4ce0867f64777a3" kindref="member">cluster::stop_timer</ref>. This is obtained from a simple incrementing value, internally. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/timer.h" line="37" column="16" bodyfile="include/dpp/timer.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1ad4658c417b9af90d3021253375580a61" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="namespacedpp_1a8b9ab0b8cf29978147a7df3947cd8f30" kindref="member">timer</ref>)&gt;</type>
        <definition>typedef std::function&lt;void(timer)&gt; dpp::timer_callback_t</definition>
        <argsstring></argsstring>
        <name>timer_callback_t</name>
        <briefdescription>
<para>The type for a timer callback. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/timer.h" line="42" column="23" bodyfile="include/dpp/timer.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a408d79969007e9c450e186f5387df9e5" prot="public" static="no">
        <type>std::multimap&lt; time_t, <ref refid="structdpp_1_1timer__t" kindref="compound">timer_t</ref> * &gt;</type>
        <definition>typedef std::multimap&lt;time_t, timer_t*&gt; dpp::timer_next_t</definition>
        <argsstring></argsstring>
        <name>timer_next_t</name>
        <briefdescription>
<para>A map of timers, ordered by earliest first so that map::begin() is always the soonest to be due. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/timer.h" line="74" column="23" bodyfile="include/dpp/timer.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a81b406b8f9f9fa3da4b61fd006f13455" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespacedpp_1a8b9ab0b8cf29978147a7df3947cd8f30" kindref="member">timer</ref>, <ref refid="structdpp_1_1timer__t" kindref="compound">timer_t</ref> * &gt;</type>
        <definition>typedef std::unordered_map&lt;timer, timer_t*&gt; dpp::timer_reg_t</definition>
        <argsstring></argsstring>
        <name>timer_reg_t</name>
        <briefdescription>
<para>A map of timers stored by handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/timer.h" line="79" column="28" bodyfile="include/dpp/timer.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a1c4073c92e19579c06591033a4a234e1" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1user" kindref="compound">user</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, user&gt; dpp::user_map</definition>
        <argsstring></argsstring>
        <name>user_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A group of users </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/user.h" line="345" column="28" bodyfile="include/dpp/user.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1ae90871830444cab0316109a1824fc0b8" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="classdpp_1_1voiceregion" kindref="compound">voiceregion</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;std::string, voiceregion&gt; dpp::voiceregion_map</definition>
        <argsstring></argsstring>
        <name>voiceregion_map</name>
        <briefdescription>
<para>A group of voice regions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voiceregion.h" line="117" column="28" bodyfile="include/dpp/voiceregion.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1aacfd609f0e027752b093141bc1739282" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="classdpp_1_1voicestate" kindref="compound">voicestate</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;std::string, voicestate&gt; dpp::voicestate_map</definition>
        <argsstring></argsstring>
        <name>voicestate_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A container of voicestates </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voicestate.h" line="108" column="28" bodyfile="include/dpp/voicestate.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedpp_1a1cb0cc074a1653521bab47f83498e9ca" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref>, <ref refid="classdpp_1_1webhook" kindref="compound">webhook</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;snowflake, webhook&gt; dpp::webhook_map</definition>
        <argsstring></argsstring>
        <name>webhook_map</name>
        <briefdescription>
<para>A group of webhooks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/webhook.h" line="111" column="28" bodyfile="include/dpp/webhook.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacedpp_1a5609082c12782be33f82b955a5d07b4f" prot="public" static="no" mutable="no">
        <type>DPP_EXPORT std::unordered_map&lt; <ref refid="classdpp_1_1managed" kindref="compound">managed</ref> *, time_t &gt;</type>
        <definition>DPP_EXPORT std::unordered_map&lt;managed*, time_t&gt; dpp::deletion_queue</definition>
        <argsstring></argsstring>
        <name>deletion_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="32" column="38" declfile="include/dpp/cache.h" declline="32" declcolumn="38"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1ae611302ba7fc914d4732b65541132651" prot="public" static="no" mutable="no">
        <type>DPP_EXPORT std::mutex</type>
        <definition>DPP_EXPORT std::mutex dpp::deletion_mutex</definition>
        <argsstring></argsstring>
        <name>deletion_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="33" column="30" declfile="include/dpp/cache.h" declline="33" declcolumn="30"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1af762f7c2f0c23de9fbba385e8f547d29" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t dpp::FORMAT_VERSION</definition>
        <argsstring></argsstring>
        <name>FORMAT_VERSION</name>
        <initializer>= 131</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current ETF format version in use </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="42" column="15" bodyfile="include/dpp/etf.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedpp_1aefb3da6503cb501b9d2a0376663dbc6e" prot="public" static="yes" mutable="no">
        <type><ref refid="structdpp_1_1version__checker" kindref="compound">version_checker</ref></type>
        <definition>version_checker dpp::dpp_vc</definition>
        <argsstring></argsstring>
        <name>dpp_vc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/restresults.h" line="71" column="24" bodyfile="include/dpp/restresults.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacedpp_1ae5041ec3547b4d4b7bf3416eea9b6403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::to_json</definition>
        <argsstring>(nlohmann::json &amp;j, const command_option_choice &amp;choice)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="structdpp_1_1command__option__choice" kindref="compound">command_option_choice</ref> &amp;</type>
          <declname>choice</declname>
        </param>
        <briefdescription>
<para>helper function to serialize a <ref refid="structdpp_1_1command__option__choice" kindref="compound">command_option_choice</ref> to json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>choice</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structdpp_1_1command__option__choice" kindref="compound">command_option_choice</ref> to be serialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="139" column="6" declfile="include/dpp/appcommand.h" declline="139" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ae6a96c54dc4f6dad8f8f6bbe05fea254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::to_json</definition>
        <argsstring>(nlohmann::json &amp;j, const command_option &amp;opt)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref> &amp;</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
<para>helper function to serialize a <ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref> to json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opt</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structdpp_1_1command__option" kindref="compound">command_option</ref> to be serialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="284" column="6" declfile="include/dpp/appcommand.h" declline="284" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ac2ac98206ba62a7ddba95355743a9e07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, command_data_option &amp;cdo)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structdpp_1_1command__data__option" kindref="compound">command_data_option</ref> &amp;</type>
          <declname>cdo</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize a <ref refid="structdpp_1_1command__data__option" kindref="compound">command_data_option</ref> from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cdo</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structdpp_1_1command__data__option" kindref="compound">command_data_option</ref> to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="540" column="6" declfile="include/dpp/appcommand.h" declline="540" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a1bfffa121ee7a78fe2c0e4d4a9a7fa17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, command_interaction &amp;ci)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structdpp_1_1command__interaction" kindref="compound">command_interaction</ref> &amp;</type>
          <declname>ci</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize a <ref refid="structdpp_1_1command__interaction" kindref="compound">command_interaction</ref> from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ci</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structdpp_1_1command__interaction" kindref="compound">command_interaction</ref> to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="602" column="6" declfile="include/dpp/appcommand.h" declline="602" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1aabc378142329f7d4fe1ac82c81027114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, component_interaction &amp;bi)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structdpp_1_1component__interaction" kindref="compound">component_interaction</ref> &amp;</type>
          <declname>bi</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize a <ref refid="structdpp_1_1component__interaction" kindref="compound">component_interaction</ref> from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bi</parametername>
</parameternamelist>
<parameterdescription>
<para>button_interaction to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="650" column="6" declfile="include/dpp/appcommand.h" declline="650" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a965939ea98a0cc2a038250fc73bd6e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, autocomplete_interaction &amp;ai)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structdpp_1_1autocomplete__interaction" kindref="compound">autocomplete_interaction</ref> &amp;</type>
          <declname>ai</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize an <ref refid="structdpp_1_1autocomplete__interaction" kindref="compound">autocomplete_interaction</ref> from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ai</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structdpp_1_1autocomplete__interaction" kindref="compound">autocomplete_interaction</ref> to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="660" column="6" declfile="include/dpp/appcommand.h" declline="660" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a1d5a166cc8328a1d2728e9e451c966f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, interaction &amp;i)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="classdpp_1_1interaction" kindref="compound">interaction</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize an interaction from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>interaction to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="884" column="6" declfile="include/dpp/appcommand.h" declline="884" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a752b7140de023c34db60c92363aacf3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::to_json</definition>
        <argsstring>(nlohmann::json &amp;j, const command_permission &amp;cp)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="classdpp_1_1command__permission" kindref="compound">command_permission</ref> &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>helper function to serialize a <ref refid="classdpp_1_1command__permission" kindref="compound">command_permission</ref> to json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cp</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classdpp_1_1command__permission" kindref="compound">command_permission</ref> to be serialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="945" column="6" declfile="include/dpp/appcommand.h" declline="945" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a735482218b54177427bc882605fa1e4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::to_json</definition>
        <argsstring>(nlohmann::json &amp;j, const guild_command_permissions &amp;gcp)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="classdpp_1_1guild__command__permissions" kindref="compound">guild_command_permissions</ref> &amp;</type>
          <declname>gcp</declname>
        </param>
        <briefdescription>
<para>helper function to serialize a <ref refid="classdpp_1_1guild__command__permissions" kindref="compound">guild_command_permissions</ref> to json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gcp</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classdpp_1_1guild__command__permissions" kindref="compound">guild_command_permissions</ref> to be serialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="982" column="6" declfile="include/dpp/appcommand.h" declline="982" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a85aad7db48e1fc97a00f92044fa2c1c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::to_json</definition>
        <argsstring>(nlohmann::json &amp;j, const slashcommand &amp;cmd)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="classdpp_1_1slashcommand" kindref="compound">slashcommand</ref> &amp;</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>helper function to serialize a slashcommand to json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>slashcommand to be serialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/appcommand.h" line="1202" column="6" declfile="include/dpp/appcommand.h" declline="1202" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1af9f0984484c2408f8bac07674720ef07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void DPP_EXPORT</type>
        <definition>void DPP_EXPORT dpp::garbage_collection</definition>
        <argsstring>()</argsstring>
        <name>garbage_collection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run garbage collection across all caches removing deleted items that have been deleted over 60 seconds ago. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="260" column="17" declfile="include/dpp/cache.h" declline="260" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1aafb458435d5650149340555ecd43f93f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT class <ref refid="classdpp_1_1user" kindref="compound">user</ref> *</type>
        <definition>DPP_EXPORT class user * dpp::find_user</definition>
        <argsstring>(snowflake id)</argsstring>
        <name>find_user</name>
        <param>
          <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="265" column="25" declfile="include/dpp/cache.h" declline="265" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ac31437cc3d797fa49c910653d887fe7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT <ref refid="classdpp_1_1cache" kindref="compound">cache</ref>&lt; class <ref refid="classdpp_1_1user" kindref="compound">user</ref> &gt; *</type>
        <definition>DPP_EXPORT cache&lt; class user &gt; * dpp::get_user_cache</definition>
        <argsstring>()</argsstring>
        <name>get_user_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="265" column="57" declfile="include/dpp/cache.h" declline="265" declcolumn="57"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ad70a66ea50fff65140d1dfcb803289f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT uint64_t</type>
        <definition>DPP_EXPORT uint64_t dpp::get_user_count</definition>
        <argsstring>()</argsstring>
        <name>get_user_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="265" column="95" declfile="include/dpp/cache.h" declline="265" declcolumn="95"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ac702a9b30627be07d4f23bf0ad14afcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT class <ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>DPP_EXPORT class guild * dpp::find_guild</definition>
        <argsstring>(snowflake id)</argsstring>
        <name>find_guild</name>
        <param>
          <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="266" column="26" declfile="include/dpp/cache.h" declline="266" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a5ae7c530cff1cae7200e136bf8c1bf83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT <ref refid="classdpp_1_1cache" kindref="compound">cache</ref>&lt; class <ref refid="classdpp_1_1guild" kindref="compound">guild</ref> &gt; *</type>
        <definition>DPP_EXPORT cache&lt; class guild &gt; * dpp::get_guild_cache</definition>
        <argsstring>()</argsstring>
        <name>get_guild_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="266" column="59" declfile="include/dpp/cache.h" declline="266" declcolumn="59"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a6641a19f8dc7eba625f27c8835bf31ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT uint64_t</type>
        <definition>DPP_EXPORT uint64_t dpp::get_guild_count</definition>
        <argsstring>()</argsstring>
        <name>get_guild_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="266" column="98" declfile="include/dpp/cache.h" declline="266" declcolumn="98"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a608a89c45f1a0d89535b9165a1225ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT class <ref refid="classdpp_1_1role" kindref="compound">role</ref> *</type>
        <definition>DPP_EXPORT class role * dpp::find_role</definition>
        <argsstring>(snowflake id)</argsstring>
        <name>find_role</name>
        <param>
          <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="267" column="25" declfile="include/dpp/cache.h" declline="267" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ab13bee0a40c1f0e9c88f635b3bf113fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT <ref refid="classdpp_1_1cache" kindref="compound">cache</ref>&lt; class <ref refid="classdpp_1_1role" kindref="compound">role</ref> &gt; *</type>
        <definition>DPP_EXPORT cache&lt; class role &gt; * dpp::get_role_cache</definition>
        <argsstring>()</argsstring>
        <name>get_role_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="267" column="57" declfile="include/dpp/cache.h" declline="267" declcolumn="57"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a350d31a987f01b3fe24d17bc59b1d9b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT uint64_t</type>
        <definition>DPP_EXPORT uint64_t dpp::get_role_count</definition>
        <argsstring>()</argsstring>
        <name>get_role_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="267" column="95" declfile="include/dpp/cache.h" declline="267" declcolumn="95"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a165978ef81875d2798e78c6eaf4eeafd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT class <ref refid="classdpp_1_1channel" kindref="compound">channel</ref> *</type>
        <definition>DPP_EXPORT class channel * dpp::find_channel</definition>
        <argsstring>(snowflake id)</argsstring>
        <name>find_channel</name>
        <param>
          <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="268" column="28" declfile="include/dpp/cache.h" declline="268" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a6b3878dda912f5f69b8140fe233e4c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT <ref refid="classdpp_1_1cache" kindref="compound">cache</ref>&lt; class <ref refid="classdpp_1_1channel" kindref="compound">channel</ref> &gt; *</type>
        <definition>DPP_EXPORT cache&lt; class channel &gt; * dpp::get_channel_cache</definition>
        <argsstring>()</argsstring>
        <name>get_channel_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="268" column="63" declfile="include/dpp/cache.h" declline="268" declcolumn="63"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a564bd51f9aaa38759d667dee4a0c8615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT uint64_t</type>
        <definition>DPP_EXPORT uint64_t dpp::get_channel_count</definition>
        <argsstring>()</argsstring>
        <name>get_channel_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="268" column="104" declfile="include/dpp/cache.h" declline="268" declcolumn="104"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ae8d93509900eb7e29e07170369f79a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT class <ref refid="classdpp_1_1emoji" kindref="compound">emoji</ref> *</type>
        <definition>DPP_EXPORT class emoji * dpp::find_emoji</definition>
        <argsstring>(snowflake id)</argsstring>
        <name>find_emoji</name>
        <param>
          <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="269" column="26" declfile="include/dpp/cache.h" declline="269" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ad1383a88d06493bd0a9ab3fba5e11d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT <ref refid="classdpp_1_1cache" kindref="compound">cache</ref>&lt; class <ref refid="classdpp_1_1emoji" kindref="compound">emoji</ref> &gt; *</type>
        <definition>DPP_EXPORT cache&lt; class emoji &gt; * dpp::get_emoji_cache</definition>
        <argsstring>()</argsstring>
        <name>get_emoji_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="269" column="59" declfile="include/dpp/cache.h" declline="269" declcolumn="59"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a1728693a6b7bc12f1bb05e113e5c0428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPP_EXPORT uint64_t</type>
        <definition>DPP_EXPORT uint64_t dpp::get_emoji_count</definition>
        <argsstring>()</argsstring>
        <name>get_emoji_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/cache.h" line="269" column="98" declfile="include/dpp/cache.h" declline="269" declcolumn="98"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a77d77e1ffffe22979d93132a7acee1d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::to_json</definition>
        <argsstring>(nlohmann::json &amp;j, const thread_metadata &amp;tmdata)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="structdpp_1_1thread__metadata" kindref="compound">thread_metadata</ref> &amp;</type>
          <declname>tmdata</declname>
        </param>
        <briefdescription>
<para>Serialize a <ref refid="structdpp_1_1thread__metadata" kindref="compound">thread_metadata</ref> object to json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON object to serialize to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tmdata</parametername>
</parameternamelist>
<parameterdescription>
<para>object to serialize </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="741" column="6" declfile="include/dpp/channel.h" declline="741" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a7b4c7cea42e58d376ea1f7aa6d630c98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::to_json</definition>
        <argsstring>(nlohmann::json &amp;j, const permission_overwrite &amp;po)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="structdpp_1_1permission__overwrite" kindref="compound">permission_overwrite</ref> &amp;</type>
          <declname>po</declname>
        </param>
        <briefdescription>
<para>Serialize a <ref refid="structdpp_1_1permission__overwrite" kindref="compound">permission_overwrite</ref> object to json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON object to serialize to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>po</parametername>
</parameternamelist>
<parameterdescription>
<para>object to serialize </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="749" column="6" declfile="include/dpp/channel.h" declline="749" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1aab9892169cd091ab8292c29ec27d43a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t DPP_EXPORT</type>
        <definition>uint64_t DPP_EXPORT dpp::snowflake_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>snowflake_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a snowflake id from a json field value, if defined, else returns 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="33" column="21" declfile="include/dpp/discordevents.h" declline="33" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ae445f4eb0bd2357dec87d33b8825ba31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void DPP_EXPORT</type>
        <definition>void DPP_EXPORT dpp::set_snowflake_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, uint64_t &amp;v)</argsstring>
        <name>set_snowflake_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>uint64_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets a snowflake id from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="40" column="17" declfile="include/dpp/discordevents.h" declline="40" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1adf57d9793b70d4b4da431491ab263298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string DPP_EXPORT</type>
        <definition>std::string DPP_EXPORT dpp::string_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>string_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a string from a json field value, if defined, else returns an empty string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="47" column="24" declfile="include/dpp/discordevents.h" declline="47" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a2bea4039b904a51aeb3261a1a5d3fcaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void DPP_EXPORT</type>
        <definition>void DPP_EXPORT dpp::set_string_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, std::string &amp;v)</argsstring>
        <name>set_string_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets a string from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="54" column="17" declfile="include/dpp/discordevents.h" declline="54" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a7fd4373c8570f0cf6e3736e9cd1c4436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double DPP_EXPORT</type>
        <definition>double DPP_EXPORT dpp::double_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>double_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a double from a json field value, if defined, else returns 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="61" column="19" declfile="include/dpp/discordevents.h" declline="61" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a2d0d3c73e35b541ba1d95eedd79a13f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void DPP_EXPORT</type>
        <definition>void DPP_EXPORT dpp::set_double_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, double &amp;v)</argsstring>
        <name>set_double_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets a double from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="68" column="17" declfile="include/dpp/discordevents.h" declline="68" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1adfc76d21d5b4cc6a0ca57ce20720547d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t DPP_EXPORT</type>
        <definition>uint64_t DPP_EXPORT dpp::int64_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>int64_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a 64 bit unsigned integer from a json field value, if defined, else returns 0. DO NOT use this for snowflakes, as usually snowflakes are wrapped in a string! </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="76" column="21" declfile="include/dpp/discordevents.h" declline="76" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1aef513c496a461641781a63de18d2d9ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void DPP_EXPORT</type>
        <definition>void DPP_EXPORT dpp::set_int64_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, uint64_t &amp;v)</argsstring>
        <name>set_int64_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>uint64_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets an unsigned 64 bit integer from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="83" column="17" declfile="include/dpp/discordevents.h" declline="83" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ab8335dd15cf1c72ce6ff068a019c1e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t DPP_EXPORT</type>
        <definition>uint32_t DPP_EXPORT dpp::int32_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>int32_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a 32 bit unsigned integer from a json field value, if defined, else returns 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="90" column="21" declfile="include/dpp/discordevents.h" declline="90" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a1e73af079b857e690895e0a5bde2589f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void DPP_EXPORT</type>
        <definition>void DPP_EXPORT dpp::set_int32_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, uint32_t &amp;v)</argsstring>
        <name>set_int32_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets an unsigned 32 bit integer from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="97" column="17" declfile="include/dpp/discordevents.h" declline="97" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a35672e77d8d9d9f13627b41994f377a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t DPP_EXPORT</type>
        <definition>uint16_t DPP_EXPORT dpp::int16_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>int16_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a 16 bit unsigned integer from a json field value, if defined, else returns 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="104" column="21" declfile="include/dpp/discordevents.h" declline="104" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a6d37d9601d4975b6a5bf9dce560cd806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void DPP_EXPORT</type>
        <definition>void DPP_EXPORT dpp::set_int16_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, uint16_t &amp;v)</argsstring>
        <name>set_int16_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>uint16_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets an unsigned 16 bit integer from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="111" column="17" declfile="include/dpp/discordevents.h" declline="111" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a37a59e37461d9f8668dd948f2635add6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t DPP_EXPORT</type>
        <definition>uint8_t DPP_EXPORT dpp::int8_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>int8_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns an 8 bit unsigned integer from a json field value, if defined, else returns 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="118" column="20" declfile="include/dpp/discordevents.h" declline="118" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ae344a3bd067a818390e2d748176cd775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void DPP_EXPORT</type>
        <definition>void DPP_EXPORT dpp::set_int8_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, uint8_t &amp;v)</argsstring>
        <name>set_int8_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>uint8_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets an unsigned 8 bit integer from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="125" column="17" declfile="include/dpp/discordevents.h" declline="125" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ae4fdd39d37228695bd6fa37b53046bbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool DPP_EXPORT</type>
        <definition>bool DPP_EXPORT dpp::bool_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>bool_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a boolean value from a json field value, if defined, else returns false. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="132" column="17" declfile="include/dpp/discordevents.h" declline="132" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ad1d0e1acb0698f7cb0f656ce2b19ff3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void DPP_EXPORT</type>
        <definition>void DPP_EXPORT dpp::set_bool_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, bool &amp;v)</argsstring>
        <name>set_bool_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets a boolean from a json field value, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="139" column="17" declfile="include/dpp/discordevents.h" declline="139" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a90fa4e4bbd6aaf8884f3588f096ab251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_t DPP_EXPORT</type>
        <definition>time_t DPP_EXPORT dpp::ts_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname)</argsstring>
        <name>ts_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Returns a time_t from an ISO8601 timestamp field in a json value, if defined, else returns epoch value of 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="147" column="19" declfile="include/dpp/discordevents.h" declline="147" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ae2ac378edc26d20fb0db2658b7da3502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void DPP_EXPORT</type>
        <definition>void DPP_EXPORT dpp::set_ts_not_null</definition>
        <argsstring>(const nlohmann::json *j, const char *keyname, time_t &amp;v)</argsstring>
        <name>set_ts_not_null</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <param>
          <type>time_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets an timestamp from a json field value containing an ISO8601 string, if defined, else does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json instance to retrieve value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyname</parametername>
</parameternamelist>
<parameterdescription>
<para>key name to check for a value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="154" column="17" declfile="include/dpp/discordevents.h" declline="154" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a89cd418696847bc940940dd84163d482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string DPP_EXPORT</type>
        <definition>std::string DPP_EXPORT dpp::base64_encode</definition>
        <argsstring>(unsigned char const *buf, unsigned int buffer_length)</argsstring>
        <name>base64_encode</name>
        <param>
          <type>unsigned char const *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>buffer_length</declname>
        </param>
        <briefdescription>
<para>Base64 encode data into a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw binary buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer length to encode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The base64 encoded string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="161" column="24" declfile="include/dpp/discordevents.h" declline="161" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a11a29c34fa2bce39d743860fb6fdb572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string DPP_EXPORT</type>
        <definition>std::string DPP_EXPORT dpp::ts_to_string</definition>
        <argsstring>(time_t ts)</argsstring>
        <name>ts_to_string</name>
        <param>
          <type>time_t</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
<para>Convert time_t unix epoch to std::string ISO date/time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ts</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string Converted time/date string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/discordevents.h" line="169" column="24" declfile="include/dpp/discordevents.h" declline="169" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a7c64da3e6d42da998ed877c18025afa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structdpp_1_1dns__cache__entry" kindref="compound">dns_cache_entry</ref> *</type>
        <definition>const dns_cache_entry * dpp::resolve_hostname</definition>
        <argsstring>(const std::string &amp;hostname, const std::string &amp;port)</argsstring>
        <name>resolve_hostname</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Resolve a hostname to an addrinfo. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hostname</parametername>
</parameternamelist>
<parameterdescription>
<para>Hostname to resolve </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>A port number or named service, e.g. &quot;80&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dns_cache_entry* First IP address associated with the hostname DNS record </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classdpp_1_1connection__exception" kindref="compound">dpp::connection_exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>On failure to resolve hostname </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dns.h" line="75" column="23" declfile="include/dpp/dns.h" declline="75" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a177af60de5536cff95f417fce3d9487a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, guild_member &amp;gm)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> &amp;</type>
          <declname>gm</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize a <ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gm</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="953" column="6" declfile="include/dpp/guild.h" declline="953" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a239ce3fb8b4d9873dffeb5cb9b249f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> DPP_EXPORT</type>
        <definition>guild_member DPP_EXPORT dpp::find_guild_member</definition>
        <argsstring>(const snowflake guild_id, const snowflake user_id)</argsstring>
        <name>find_guild_member</name>
        <param>
          <type>const <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
          <declname>user_id</declname>
        </param>
        <briefdescription>
<para>Get the <ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> from cache of given IDs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guild_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the guild to find <ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the user to find <ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> for</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classdpp_1_1cache__exception" kindref="compound">dpp::cache_exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the guild or <ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> is not found in the cache </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref> the cached object, if found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="967" column="25" declfile="include/dpp/guild.h" declline="967" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a6da92d90e8b0847e2d8c2633aaf370f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto dpp::run_once</definition>
        <argsstring>()</argsstring>
        <name>run_once</name>
        <briefdescription>
<para>Run some code within an if() statement only once. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this template like this:</para>
<para><programlisting><codeline><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dpp::run_once&lt;struct<sp/>any_unique_name_you_like_here&gt;())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Your<sp/>code<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>any unique &apos;tag&apos; identifier name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>auto a true/false return to say if we should execute or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/once.h" line="41" column="18" bodyfile="include/dpp/once.h" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a07d625a4a90ad893e7443aac721cf9a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dpp::rest_request</definition>
        <argsstring>(dpp::cluster *c, const char *basepath, const std::string &amp;major, const std::string &amp;minor, http_method method, const std::string &amp;postdata, command_completion_event_t callback)</argsstring>
        <name>rest_request</name>
        <param>
          <type><ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>basepath</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>major</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>minor</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88" kindref="member">http_method</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>postdata</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a022dce6b086ec4515384eaece59c84c3" kindref="member">command_completion_event_t</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Templated REST request helper to save on typing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type to return in lambda callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>calling cluster </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basepath</parametername>
</parameternamelist>
<parameterdescription>
<para>base path for API call </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>major</parametername>
</parameternamelist>
<parameterdescription>
<para>major API function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minor</parametername>
</parameternamelist>
<parameterdescription>
<para>minor API function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>HTTP method </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>postdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Post data or empty string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback lambda </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/restrequest.h" line="42" column="24" bodyfile="include/dpp/restrequest.h" bodystart="42" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a173d2e6b113e7c675a2294e3eb7f8fd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void dpp::rest_request&lt; message &gt;</definition>
        <argsstring>(dpp::cluster *c, const char *basepath, const std::string &amp;major, const std::string &amp;minor, http_method method, const std::string &amp;postdata, command_completion_event_t callback)</argsstring>
        <name>rest_request&lt; message &gt;</name>
        <param>
          <type><ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>basepath</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>major</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>minor</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88" kindref="member">http_method</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>postdata</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a022dce6b086ec4515384eaece59c84c3" kindref="member">command_completion_event_t</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Templated REST request helper to save on typing (specialised for message) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type to return in lambda callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>calling cluster </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basepath</parametername>
</parameternamelist>
<parameterdescription>
<para>base path for API call </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>major</parametername>
</parameternamelist>
<parameterdescription>
<para>major API function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minor</parametername>
</parameternamelist>
<parameterdescription>
<para>minor API function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>HTTP method </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>postdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Post data or empty string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback lambda </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/restrequest.h" line="62" column="18" bodyfile="include/dpp/restrequest.h" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a63fe6eabce56fea9bf6192649e47f374" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void dpp::rest_request&lt; confirmation &gt;</definition>
        <argsstring>(dpp::cluster *c, const char *basepath, const std::string &amp;major, const std::string &amp;minor, http_method method, const std::string &amp;postdata, command_completion_event_t callback)</argsstring>
        <name>rest_request&lt; confirmation &gt;</name>
        <param>
          <type><ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>basepath</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>major</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>minor</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88" kindref="member">http_method</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>postdata</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a022dce6b086ec4515384eaece59c84c3" kindref="member">command_completion_event_t</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Templated REST request helper to save on typing (specialised for confirmation) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type to return in lambda callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>calling cluster </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basepath</parametername>
</parameternamelist>
<parameterdescription>
<para>base path for API call </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>major</parametername>
</parameternamelist>
<parameterdescription>
<para>major API function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minor</parametername>
</parameternamelist>
<parameterdescription>
<para>minor API function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>HTTP method </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>postdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Post data or empty string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback lambda </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/restrequest.h" line="82" column="18" bodyfile="include/dpp/restrequest.h" bodystart="82" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a396beaf2087386cbd35654372fa0f78d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dpp::rest_request_list</definition>
        <argsstring>(dpp::cluster *c, const char *basepath, const std::string &amp;major, const std::string &amp;minor, http_method method, const std::string &amp;postdata, command_completion_event_t callback, const std::string &amp;key=&quot;id&quot;)</argsstring>
        <name>rest_request_list</name>
        <param>
          <type><ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>basepath</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>major</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>minor</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88" kindref="member">http_method</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>postdata</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a022dce6b086ec4515384eaece59c84c3" kindref="member">command_completion_event_t</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
          <defval>&quot;id&quot;</defval>
        </param>
        <briefdescription>
<para>Templated REST request helper to save on typing (for returned lists) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>singular type to return in lambda callback </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>map type to return in lambda callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>calling cluster </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basepath</parametername>
</parameternamelist>
<parameterdescription>
<para>base path for API call </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>major</parametername>
</parameternamelist>
<parameterdescription>
<para>major API function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minor</parametername>
</parameternamelist>
<parameterdescription>
<para>minor API function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>HTTP method </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>postdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Post data or empty string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key name of elements in the json list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback lambda </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/restrequest.h" line="104" column="24" bodyfile="include/dpp/restrequest.h" bodystart="104" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a494de7d152ac533c1283a759f5e7e344" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void dpp::rest_request_list&lt; invite &gt;</definition>
        <argsstring>(dpp::cluster *c, const char *basepath, const std::string &amp;major, const std::string &amp;minor, http_method method, const std::string &amp;postdata, command_completion_event_t callback, const std::string &amp;key)</argsstring>
        <name>rest_request_list&lt; invite &gt;</name>
        <param>
          <type><ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>basepath</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>major</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>minor</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88" kindref="member">http_method</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>postdata</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a022dce6b086ec4515384eaece59c84c3" kindref="member">command_completion_event_t</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Templated REST request helper to save on typing (for returned lists, specialised for invites) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>singular type to return in lambda callback </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>map type to return in lambda callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>calling cluster </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basepath</parametername>
</parameternamelist>
<parameterdescription>
<para>base path for API call </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>major</parametername>
</parameternamelist>
<parameterdescription>
<para>major API function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minor</parametername>
</parameternamelist>
<parameterdescription>
<para>minor API function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>HTTP method </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>postdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Post data or empty string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key name of elements in the json list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback lambda </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/restrequest.h" line="133" column="18" bodyfile="include/dpp/restrequest.h" bodystart="133" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a0fc24406b890d9d830e2b0fff9a9ced3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void dpp::rest_request_list&lt; voiceregion &gt;</definition>
        <argsstring>(dpp::cluster *c, const char *basepath, const std::string &amp;major, const std::string &amp;minor, http_method method, const std::string &amp;postdata, command_completion_event_t callback, const std::string &amp;key)</argsstring>
        <name>rest_request_list&lt; voiceregion &gt;</name>
        <param>
          <type><ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>basepath</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>major</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>minor</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a805ef1feb2862a208ec0e9d1be005c88" kindref="member">http_method</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>postdata</declname>
        </param>
        <param>
          <type><ref refid="namespacedpp_1a022dce6b086ec4515384eaece59c84c3" kindref="member">command_completion_event_t</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Templated REST request helper to save on typing (for returned lists, specialised for voiceregions) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>singular type to return in lambda callback </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>map type to return in lambda callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>calling cluster </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basepath</parametername>
</parameternamelist>
<parameterdescription>
<para>base path for API call </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>major</parametername>
</parameternamelist>
<parameterdescription>
<para>major API function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minor</parametername>
</parameternamelist>
<parameterdescription>
<para>minor API function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>HTTP method </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>postdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Post data or empty string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key name of elements in the json list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback lambda </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/restrequest.h" line="161" column="18" bodyfile="include/dpp/restrequest.h" bodystart="161" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a2aee5f8caf98a0dbebd4f1abb464dc00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::close_socket</definition>
        <argsstring>(dpp::socket sfd)</argsstring>
        <name>close_socket</name>
        <param>
          <type><ref refid="namespacedpp_1a51156024d6211aef2731770340cfe452" kindref="member">dpp::socket</ref></type>
          <declname>sfd</declname>
        </param>
        <briefdescription>
<para>Close a socket. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sfd</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket to close </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false on error, true on success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="53" column="6" declfile="include/dpp/sslclient.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a0c5e194a6e6cb7d653d73b19b5348dc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::set_nonblocking</definition>
        <argsstring>(dpp::socket sockfd, bool non_blocking)</argsstring>
        <name>set_nonblocking</name>
        <param>
          <type><ref refid="namespacedpp_1a51156024d6211aef2731770340cfe452" kindref="member">dpp::socket</ref></type>
          <declname>sockfd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>non_blocking</declname>
        </param>
        <briefdescription>
<para>Set a socket to blocking or non-blocking IO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sockfd</parametername>
</parameternamelist>
<parameterdescription>
<para>socket to act upon </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false on error, true on success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sslclient.h" line="61" column="6" declfile="include/dpp/sslclient.h" declline="61" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1aa8227c717e1a550b3c3962cea1964d92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::basic_string&lt; T &gt;</type>
        <definition>std::basic_string&lt; T &gt; dpp::lowercase</definition>
        <argsstring>(const std::basic_string&lt; T &gt; &amp;s)</argsstring>
        <name>lowercase</name>
        <param>
          <type>const std::basic_string&lt; T &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Convert a string to lowercase using tolower() </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to lowercase </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::basic_string&lt;T&gt; lowercased string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stringops.h" line="41" column="31" bodyfile="include/dpp/stringops.h" bodystart="41" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a81749d69bd220d0579617cb188e44e5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::basic_string&lt; T &gt;</type>
        <definition>std::basic_string&lt; T &gt; dpp::uppercase</definition>
        <argsstring>(const std::basic_string&lt; T &gt; &amp;s)</argsstring>
        <name>uppercase</name>
        <param>
          <type>const std::basic_string&lt; T &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Convert a string to uppercase using toupper() </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to uppercase </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::basic_string&lt;T&gt; uppercased string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stringops.h" line="55" column="31" bodyfile="include/dpp/stringops.h" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a4f48d1973cbdbdde424016e641109c50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::rtrim</definition>
        <argsstring>(std::string s)</argsstring>
        <name>rtrim</name>
        <param>
          <type>std::string</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>trim from end of string (right) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to trim </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string trimmed string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stringops.h" line="68" column="20" bodyfile="include/dpp/stringops.h" bodystart="68" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1ac727bb2e0d0761aa5ee4396286530166" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::ltrim</definition>
        <argsstring>(std::string s)</argsstring>
        <name>ltrim</name>
        <param>
          <type>std::string</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>trim from beginning of string (left) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>string to trim </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string trimmed string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stringops.h" line="80" column="20" bodyfile="include/dpp/stringops.h" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a9bffa8a03ffbd0896356233cc9ea1ae6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::trim</definition>
        <argsstring>(std::string s)</argsstring>
        <name>trim</name>
        <param>
          <type>std::string</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Trim from both ends of string (right then left) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>string to trim </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string trimmed string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stringops.h" line="92" column="20" bodyfile="include/dpp/stringops.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a575bfa79c17aa90101ae8d3bf632e930" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string dpp::comma</definition>
        <argsstring>(T value)</argsstring>
        <name>comma</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Add commas to a string (or dots) based on current locale server-side. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of numeric value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string number with commas added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stringops.h" line="104" column="24" bodyfile="include/dpp/stringops.h" bodystart="104" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a2345d59ec5b1bbd3b61694965f5e020e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T dpp::from_string</definition>
        <argsstring>(const std::string &amp;s, std::ios_base &amp;(*f)(std::ios_base &amp;))</argsstring>
        <name>from_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::ios_base &amp;(*)(std::ios_base &amp;)</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Convert any value from a string to another type using stringstream. The optional second parameter indicates the format of the input string, e.g. std::dec for decimal, std::hex for hex, std::oct for octal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type to convert to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to convert from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Numeric base, e.g. <computeroutput>std::dec</computeroutput> or <computeroutput>std::hex</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T Returned numeric value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stringops.h" line="122" column="15" bodyfile="include/dpp/stringops.h" bodystart="122" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a5ccea9f895c3e902f58f5d61ff748bf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T dpp::from_string</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>from_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Convert any value from a string to another type using stringstream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type to convert to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to convert from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T Returned numeric value</para>
</simplesect>
<simplesect kind="note"><para>Base 10 for numeric conversions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stringops.h" line="139" column="15" bodyfile="include/dpp/stringops.h" bodystart="139" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a820ee479ac6f917f8ee143016f6a3850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint64_t</type>
          </param>
        </templateparamlist>
        <type>uint64_t</type>
        <definition>uint64_t dpp::from_string</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>from_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Specialised conversion of uint64_t from string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>int64_t</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>string to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint64_t return value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stringops.h" line="154" column="21" bodyfile="include/dpp/stringops.h" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a8a266bdb5b180bca84d6020e7d509122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint32_t</type>
          </param>
        </templateparamlist>
        <type>uint32_t</type>
        <definition>uint32_t dpp::from_string</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>from_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Specialised conversion of uint32_t from string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>uint32_t</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>string to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t return value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stringops.h" line="166" column="21" bodyfile="include/dpp/stringops.h" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a37230f39cac8fb1e6a978570be65b5be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int dpp::from_string</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>from_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Specialised conversion of int from string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>string to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int return value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stringops.h" line="178" column="16" bodyfile="include/dpp/stringops.h" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a2ecb05a32cc064043248ce28a9643b7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string dpp::to_hex</definition>
        <argsstring>(T i)</argsstring>
        <name>to_hex</name>
        <param>
          <type>T</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Convert a numeric value to hex. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>numeric type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>numeric value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string value in hex, the length will be 2* the raw size of the type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stringops.h" line="190" column="25" bodyfile="include/dpp/stringops.h" bodystart="190" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a239ea76cdedff39d6bc8104dadb77ec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string dpp::leading_zeroes</definition>
        <argsstring>(T i, size_t width)</argsstring>
        <name>leading_zeroes</name>
        <param>
          <type>T</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Format a numeric type as a string with leading zeroes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>numeric type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>numeric value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>width of type including the leading zeroes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string resultant string with leading zeroes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/stringops.h" line="205" column="25" bodyfile="include/dpp/stringops.h" bodystart="205" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a6de81ad1777ea865ffb7bc2f91a4e330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T dpp::sync</definition>
        <argsstring>(class cluster *c, F func, Ts &amp;&amp;... args)</argsstring>
        <name>sync</name>
        <param>
          <type>class <ref refid="classdpp_1_1cluster" kindref="compound">cluster</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>F</type>
          <declname>func</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Call a D++ REST function synchronously. </para>
        </briefdescription>
        <detaileddescription>
<para>Synchronously calling a REST function means <emphasis>IT WILL BLOCK</emphasis> - This is a Bad Thing™ and strongly discouraged. There are very few circumstances you actually need this. If you do need to use this, you&apos;ll know it.</para>
<para>Example:</para>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="structdpp_1_1message" kindref="compound">dpp::message</ref><sp/>m<sp/>=<sp/>dpp::sync&lt;dpp::message&gt;(&amp;bot,<sp/>&amp;<ref refid="classdpp_1_1cluster_1aa6ae3dc32ebc2dd14264962710d35af7" kindref="member">dpp::cluster::message_create</ref>,<sp/><ref refid="structdpp_1_1message" kindref="compound">dpp::message</ref>(channel_id,<sp/></highlight><highlight class="stringliteral">&quot;moo.&quot;</highlight><highlight class="normal">));</highlight></codeline>
</programlisting></para>
<para><simplesect kind="warning"><para>As previously mentioned, this template will block. It is ill-advised to call this outside of a separate thread and this should never be directly used in any event such as <ref refid="classdpp_1_1cluster_1aaaac4fce048efff1be42965c82235b3e" kindref="member">dpp::cluster::on_interaction_create</ref>! </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of expected return value, should match up with the method called </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of class method in <ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref> to call. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Ts</parametername>
</parameternamelist>
<parameterdescription>
<para>Function parameters in method call </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to <ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref> object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to class method in <ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref> to call. This can call any <ref refid="classdpp_1_1cluster" kindref="compound">dpp::cluster</ref> member function who&apos;s last parameter is a <ref refid="namespacedpp_1a022dce6b086ec4515384eaece59c84c3" kindref="member">dpp::command_completion_event_t</ref> callback type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Zero or more arguments for the method call </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An instantiated object of type T </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classdpp_1_1rest__exception" kindref="compound">dpp::rest_exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>On failure of the method call, an exception is thrown </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/sync.h" line="54" column="22" bodyfile="include/dpp/sync.h" bodystart="54" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a36d2c45cce93740da4da28ef18e90a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, user &amp;u)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="classdpp_1_1user" kindref="compound">user</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize a user from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>user to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/user.h" line="332" column="6" declfile="include/dpp/user.h" declline="332" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacedpp_1a1b146099de6ccbd7135ffba167aee39d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::from_json</definition>
        <argsstring>(const nlohmann::json &amp;j, user_identified &amp;u)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="classdpp_1_1user__identified" kindref="compound">user_identified</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>helper function to deserialize a <ref refid="classdpp_1_1user__identified" kindref="compound">user_identified</ref> from json </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://github.com/nlohmann/json#arbitrary-types-conversions">https://github.com/nlohmann/json#arbitrary-types-conversions</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>output json object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>user to be deserialized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/user.h" line="342" column="6" declfile="include/dpp/user.h" declline="342" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The main namespace for D++ functions. classes and types. </para>
    </briefdescription>
    <detaileddescription>
<para>The main namespace for D++ functions, classes and types. </para>
    </detaileddescription>
    <location file="include/dpp/appcommand.h" line="34" column="1"/>
  </compounddef>
</doxygen>
