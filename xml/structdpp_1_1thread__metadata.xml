<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1thread__metadata" kind="struct" language="C++" prot="public">
    <compoundname>dpp::thread_metadata</compoundname>
    <includes local="no">channel.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1thread__metadata_1a6d25e9f26dabba02352d6a9aaacb7743" prot="public" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t dpp::thread_metadata::archive_timestamp</definition>
        <argsstring></argsstring>
        <name>archive_timestamp</name>
        <briefdescription>
<para>Timestamp when the thread&apos;s archive status was last changed, used for calculating recent activity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="149" column="8" bodyfile="include/dpp/channel.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1thread__metadata_1af45bbe4a17648d3becaa0aab698f3fb9" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t dpp::thread_metadata::auto_archive_duration</definition>
        <argsstring></argsstring>
        <name>auto_archive_duration</name>
        <briefdescription>
<para>The duration in minutes to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="151" column="10" bodyfile="include/dpp/channel.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1thread__metadata_1aacd872999ff72501feadb8069e0243fd" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dpp::thread_metadata::archived</definition>
        <argsstring></argsstring>
        <name>archived</name>
        <briefdescription>
<para>Whether a thread is archived. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="153" column="6" bodyfile="include/dpp/channel.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1thread__metadata_1add58e423f075a5167a4784dcf8b0aad4" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dpp::thread_metadata::locked</definition>
        <argsstring></argsstring>
        <name>locked</name>
        <briefdescription>
<para>Whether a thread is locked. When a thread is locked, only users with <computeroutput>MANAGE_THREADS</computeroutput> can unarchive it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="155" column="6" bodyfile="include/dpp/channel.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1thread__metadata_1abe6e0ca85770822ee98384dec757ec64" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dpp::thread_metadata::invitable</definition>
        <argsstring></argsstring>
        <name>invitable</name>
        <briefdescription>
<para>Whether non-moderators can add other non-moderators. Only for private threads. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="157" column="6" bodyfile="include/dpp/channel.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>metadata for threads </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>bool</label>
      </node>
      <node id="1">
        <label>dpp::thread_metadata</label>
        <link refid="structdpp_1_1thread__metadata"/>
        <childnode refid="2" relation="usage">
          <edgelabel>archive_timestamp</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>auto_archive_duration</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>archived</edgelabel>
          <edgelabel>invitable</edgelabel>
          <edgelabel>locked</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>time_t</label>
      </node>
      <node id="3">
        <label>uint16_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/channel.h" line="147" column="1" bodyfile="include/dpp/channel.h" bodystart="147" bodyend="158"/>
    <listofallmembers>
      <member refid="structdpp_1_1thread__metadata_1a6d25e9f26dabba02352d6a9aaacb7743" prot="public" virt="non-virtual"><scope>dpp::thread_metadata</scope><name>archive_timestamp</name></member>
      <member refid="structdpp_1_1thread__metadata_1aacd872999ff72501feadb8069e0243fd" prot="public" virt="non-virtual"><scope>dpp::thread_metadata</scope><name>archived</name></member>
      <member refid="structdpp_1_1thread__metadata_1af45bbe4a17648d3becaa0aab698f3fb9" prot="public" virt="non-virtual"><scope>dpp::thread_metadata</scope><name>auto_archive_duration</name></member>
      <member refid="structdpp_1_1thread__metadata_1abe6e0ca85770822ee98384dec757ec64" prot="public" virt="non-virtual"><scope>dpp::thread_metadata</scope><name>invitable</name></member>
      <member refid="structdpp_1_1thread__metadata_1add58e423f075a5167a4784dcf8b0aad4" prot="public" virt="non-virtual"><scope>dpp::thread_metadata</scope><name>locked</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
