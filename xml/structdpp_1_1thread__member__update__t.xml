<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1thread__member__update__t" kind="struct" prot="public">
    <compoundname>dpp::thread_member_update_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1thread__member__update__t_1a4804d8a693f259f10740bddbedbd9605" prot="public" static="no" mutable="no">
        <type><ref refid="structdpp_1_1thread__member" kindref="compound">thread_member</ref></type>
        <definition>thread_member dpp::thread_member_update_t::updated</definition>
        <argsstring></argsstring>
        <name>updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="804" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="804" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1thread__member__update__t_1a4e59633bb016d94ef45f4d12d3341cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::thread_member_update_t::thread_member_update_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>thread_member_update_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="803" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="146" bodyend="146"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Thread Member Update. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="14372">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
      <node id="14371">
        <label>dpp::thread_member_update_t</label>
        <link refid="structdpp_1_1thread__member__update__t"/>
        <childnode refid="14372" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14452">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="14390">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="14389" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="14382" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="14391" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="14393" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="14396" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="14375" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="14399" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="14386">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="14387" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="14388" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="14416">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14431">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="14417">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="14464">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="14381" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="14465" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="14375" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="14457">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="14444">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="14393">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="14394" relation="public-inheritance">
        </childnode>
        <childnode refid="14395" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="14396" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="14397" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="14375" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="14398" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="14402">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="14446">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="14418">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="14448">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="14458">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="14384">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="14399">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="14400" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="14401" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="14402" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="14403" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="14404" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="14405" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="14406" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="14407" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="14408" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="14409" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="14410" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="14411" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="14412" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="14413" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="14414" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="14415" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="14416" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="14417" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="14418" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="14419" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="14420" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="14421" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="14422" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="14423" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="14424" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="14425" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="14426" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="14427" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="14428" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="14429" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="14430" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="14431" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="14432" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="14433" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="14434" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="14435" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="14436" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="14437" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="14438" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="14439" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="14440" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="14441" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="14442" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="14443" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="14444" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="14445" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="14446" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="14447" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="14448" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="14449" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="14450" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="14451" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="14452" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="14453" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="14454" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="14455" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="14456" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="14457" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="14458" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="14459" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="14460" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="14406">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="14413">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="14455">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="14381">
        <label>uint64_t</label>
      </node>
      <node id="14450">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14447">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14433">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="14427">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="14415">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="14404">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14423">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="14440">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="14437">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14460">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="14395">
        <label>uint16_t</label>
      </node>
      <node id="14425">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="14382">
        <label>time_t</label>
      </node>
      <node id="14376">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="14459">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="14436">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="14465">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="14378" relation="public-inheritance">
        </childnode>
        <childnode refid="14381" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="14382" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="14390" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="14396" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="14375" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="14385" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="14462" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="14398">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="14381" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="14435">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="14424">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="14389">
        <label>double</label>
      </node>
      <node id="14379">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="14380" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="14381" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="14382" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="14383" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="14384" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="14385" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="14375" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="14386" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="14434">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14456">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="14396">
        <label>uint32_t</label>
      </node>
      <node id="14454">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="14374">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="14375" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="14377" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="14397">
        <label>uint8_t</label>
      </node>
      <node id="14439">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="14392">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="14378">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="14379" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14391">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="14392" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="14408">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="14420">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="14405">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="14428">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="14430">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="14463">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="14381" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14464" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14380">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="14373">
        <label>dpp::thread_member_update_t</label>
        <link refid="structdpp_1_1thread__member__update__t"/>
        <childnode refid="14374" relation="public-inheritance">
        </childnode>
        <childnode refid="14466" relation="usage">
          <edgelabel>updated</edgelabel>
        </childnode>
      </node>
      <node id="14422">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14377">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="14378" relation="public-inheritance">
        </childnode>
        <childnode refid="14389" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="14381" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="14382" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="14390" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="14461" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="14396" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="14385" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="14375" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="14462" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="14463" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="14429">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="14387">
        <label>SSL *</label>
      </node>
      <node id="14394">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="14381" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="14442">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="14443">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="14451">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="14388">
        <label>SSL_CTX *</label>
      </node>
      <node id="14438">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="14461">
        <label>mutex</label>
      </node>
      <node id="14449">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14407">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="14426">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="14432">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="14445">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="14385">
        <label>bool</label>
      </node>
      <node id="14383">
        <label>SOCKET</label>
      </node>
      <node id="14421">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="14453">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="14411">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="14403">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14400">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="14419">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="14441">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="14401">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="14414">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="14410">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="14462">
        <label>native_handle_type</label>
      </node>
      <node id="14412">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14466">
        <label>dpp::thread_member</label>
        <link refid="structdpp_1_1thread__member"/>
        <childnode refid="14382" relation="usage">
          <edgelabel>joined</edgelabel>
        </childnode>
        <childnode refid="14381" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="14396" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="14375">
        <label>std::string</label>
        <childnode refid="14376" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14409">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="797" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="797" bodyend="805"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::thread_member_update_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::thread_member_update_t</scope><name>from</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::thread_member_update_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1thread__member__update__t_1a4e59633bb016d94ef45f4d12d3341cb7" prot="public" virt="non-virtual"><scope>dpp::thread_member_update_t</scope><name>thread_member_update_t</name></member>
      <member refid="structdpp_1_1thread__member__update__t_1a4804d8a693f259f10740bddbedbd9605" prot="public" virt="non-virtual"><scope>dpp::thread_member_update_t</scope><name>updated</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
