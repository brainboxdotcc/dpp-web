<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1thread__member__update__t" kind="struct" prot="public">
    <compoundname>dpp::thread_member_update_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1thread__member__update__t_1a4804d8a693f259f10740bddbedbd9605" prot="public" static="no" mutable="no">
        <type><ref refid="structdpp_1_1thread__member" kindref="compound">thread_member</ref></type>
        <definition>thread_member dpp::thread_member_update_t::updated</definition>
        <argsstring></argsstring>
        <name>updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="804" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="804" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1thread__member__update__t_1a4e59633bb016d94ef45f4d12d3341cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::thread_member_update_t::thread_member_update_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>thread_member_update_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="803" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="146" bodyend="146"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Thread Member Update. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="14538">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
      <node id="14537">
        <label>dpp::thread_member_update_t</label>
        <link refid="structdpp_1_1thread__member__update__t"/>
        <childnode refid="14538" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14618">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="14556">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="14555" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="14548" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="14557" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="14559" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="14562" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="14541" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="14565" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="14552">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="14553" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="14554" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="14582">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14597">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="14583">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="14630">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="14547" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="14631" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="14541" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="14623">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="14610">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="14559">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="14560" relation="public-inheritance">
        </childnode>
        <childnode refid="14561" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="14562" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="14563" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="14541" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="14564" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="14568">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="14612">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="14584">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="14614">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="14624">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="14550">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="14565">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="14566" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="14567" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="14568" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="14569" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="14570" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="14571" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="14572" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="14573" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="14574" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="14575" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="14576" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="14577" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="14578" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="14579" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="14580" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="14581" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="14582" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="14583" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="14584" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="14585" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="14586" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="14587" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="14588" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="14589" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="14590" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="14591" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="14592" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="14593" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="14594" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="14595" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="14596" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="14597" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="14598" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="14599" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="14600" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="14601" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="14602" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="14603" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="14604" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="14605" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="14606" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="14607" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="14608" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="14609" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="14610" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="14611" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="14612" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="14613" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="14614" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="14615" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="14616" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="14617" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="14618" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="14619" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="14620" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="14621" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="14622" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="14623" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="14624" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="14625" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="14626" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="14572">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="14579">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="14621">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="14547">
        <label>uint64_t</label>
      </node>
      <node id="14616">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14613">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14599">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="14593">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="14581">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="14570">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14589">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="14606">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="14603">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14626">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="14561">
        <label>uint16_t</label>
      </node>
      <node id="14591">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="14548">
        <label>time_t</label>
      </node>
      <node id="14542">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="14625">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="14602">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="14631">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="14544" relation="public-inheritance">
        </childnode>
        <childnode refid="14547" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="14548" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="14556" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="14562" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="14541" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="14551" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="14628" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="14564">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="14547" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="14601">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="14590">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="14555">
        <label>double</label>
      </node>
      <node id="14545">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="14546" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="14547" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="14548" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="14549" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="14550" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="14551" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="14541" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="14552" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="14600">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14622">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="14562">
        <label>uint32_t</label>
      </node>
      <node id="14620">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="14540">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="14541" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="14543" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="14563">
        <label>uint8_t</label>
      </node>
      <node id="14605">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="14558">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="14544">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="14545" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14557">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="14558" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="14574">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="14586">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="14571">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="14594">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="14596">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="14629">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="14547" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14630" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14546">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="14539">
        <label>dpp::thread_member_update_t</label>
        <link refid="structdpp_1_1thread__member__update__t"/>
        <childnode refid="14540" relation="public-inheritance">
        </childnode>
        <childnode refid="14632" relation="usage">
          <edgelabel>updated</edgelabel>
        </childnode>
      </node>
      <node id="14588">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14543">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="14544" relation="public-inheritance">
        </childnode>
        <childnode refid="14555" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="14547" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="14548" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="14556" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="14627" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="14562" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="14551" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="14541" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="14628" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="14629" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="14595">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="14553">
        <label>SSL *</label>
      </node>
      <node id="14560">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="14547" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="14608">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="14609">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="14617">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="14554">
        <label>SSL_CTX *</label>
      </node>
      <node id="14604">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="14627">
        <label>mutex</label>
      </node>
      <node id="14615">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14573">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="14592">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="14598">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="14611">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="14551">
        <label>bool</label>
      </node>
      <node id="14549">
        <label>SOCKET</label>
      </node>
      <node id="14587">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="14619">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="14577">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="14569">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14566">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="14585">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="14607">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="14567">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="14580">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="14576">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="14628">
        <label>native_handle_type</label>
      </node>
      <node id="14578">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14632">
        <label>dpp::thread_member</label>
        <link refid="structdpp_1_1thread__member"/>
        <childnode refid="14548" relation="usage">
          <edgelabel>joined</edgelabel>
        </childnode>
        <childnode refid="14547" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="14562" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="14541">
        <label>std::string</label>
        <childnode refid="14542" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14575">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="797" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="797" bodyend="805"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::thread_member_update_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::thread_member_update_t</scope><name>from</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::thread_member_update_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1thread__member__update__t_1a4e59633bb016d94ef45f4d12d3341cb7" prot="public" virt="non-virtual"><scope>dpp::thread_member_update_t</scope><name>thread_member_update_t</name></member>
      <member refid="structdpp_1_1thread__member__update__t_1a4804d8a693f259f10740bddbedbd9605" prot="public" virt="non-virtual"><scope>dpp::thread_member_update_t</scope><name>updated</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
