<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1permission" kind="class" language="C++" prot="public">
    <compoundname>dpp::permission</compoundname>
    <includes local="no">permissions.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classdpp_1_1permission_1a351c22a0d447069a6833c9cb1b72fbbd" prot="protected" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t dpp::permission::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
<para>The permission bitmask value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="88" column="10" bodyfile="include/dpp/permissions.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdpp_1_1permission_1af57679e82ba664209477d5564278c6cd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::permission::add_one</definition>
        <argsstring>(uint64_t p)</argsstring>
        <name>add_one</name>
        <param>
          <type>uint64_t</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Internal function called by <ref refid="classdpp_1_1permission_1adcc32475f286b7e605351d8a24dab047" kindref="member">add()</ref> to apply iterative changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>flags to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="94" column="6" bodyfile="src/dpp/permissions.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1a467d218ab64fc6be1c7cf68322a0a84e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::permission::set_one</definition>
        <argsstring>(uint64_t p)</argsstring>
        <name>set_one</name>
        <param>
          <type>uint64_t</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Internal function called by <ref refid="classdpp_1_1permission_1ab6195520d0ac02ef667c1895742824f9" kindref="member">set()</ref> to apply iterative changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>flags to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="100" column="6" bodyfile="src/dpp/permissions.cpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1af4617cb961227879708f5960fb24d6f9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::permission::remove_one</definition>
        <argsstring>(uint64_t p)</argsstring>
        <name>remove_one</name>
        <param>
          <type>uint64_t</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Internal function called by <ref refid="classdpp_1_1permission_1a9e78021ba83d2dacc91fc720689ee5a7" kindref="member">remove()</ref> to apply iterative changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>flags to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="106" column="6" bodyfile="src/dpp/permissions.cpp" bodystart="54" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1permission_1a9cb26c5c69dc104aeb82955545b7e29a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::permission::permission</definition>
        <argsstring>(const uint64_t &amp;value)</argsstring>
        <name>permission</name>
        <param>
          <type>const uint64_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Construct a permission object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>A permission bitmask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="113" column="1" bodyfile="src/dpp/permissions.cpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1ab888bf9619d2af4614863026e863fdbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::permission::permission</definition>
        <argsstring>()</argsstring>
        <name>permission</name>
        <briefdescription>
<para>Construct a permission object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="118" column="1" bodyfile="src/dpp/permissions.cpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1ac6ef5597dc1f21da58745fb19c7217db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::permission::operator uint64_t</definition>
        <argsstring>() const</argsstring>
        <name>operator uint64_t</name>
        <briefdescription>
<para>For acting like an integer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The permission bitmask value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="124" column="1" bodyfile="src/dpp/permissions.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1a535d715d759dedcc9b9c1053ef5978be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::permission::operator uint64_t &amp;</definition>
        <argsstring>()</argsstring>
        <name>operator uint64_t &amp;</name>
        <briefdescription>
<para>For acting like an integer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the permission bitmask value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="130" column="1" bodyfile="src/dpp/permissions.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1aa346188a9babb8dfc6ee7b06261ba6ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::permission::has</definition>
        <argsstring>(uint64_t p) const</argsstring>
        <name>has</name>
        <param>
          <type>uint64_t</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Check if it has a permission flag set. It uses the Bitwise AND operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The permission flag from <ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7" kindref="member">dpp::permissions</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold></para>
<para><programlisting filename=".cpp"><codeline><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_mod<sp/>=<sp/><ref refid="classdpp_1_1permission_1ab888bf9619d2af4614863026e863fdbc" kindref="member">permission</ref>.has(<ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7ae57cb8bf1870f74f2820f84255ca8104" kindref="member">dpp::p_kick_members</ref><sp/>|<sp/><ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a6c9849fc7380edaf4ab8f169c2f4cc82" kindref="member">dpp::p_ban_members</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>permission<sp/>bitmask<sp/>contains<sp/>p_kick_members<sp/>and<sp/>p_ban_members</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>True if it has the permission </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="151" column="6" bodyfile="src/dpp/permissions.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1adcc32475f286b7e605351d8a24dab047" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdpp_1_1permission" kindref="compound">permission</ref> &amp;</type>
        <definition>permission &amp; dpp::permission::add</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>add</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Add a permission with the Bitwise OR operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>one or more uint64_t permission bits </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The permissions (from <ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7" kindref="member">dpp::permissions</ref>) to add</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold></para>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="classdpp_1_1permission_1ab888bf9619d2af4614863026e863fdbc" kindref="member">permission</ref>.add(<ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a5ca9e89b32af806f7c0c179c3bdfb1ad" kindref="member">dpp::p_view_channel</ref>,<sp/><ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7ad410586df8dba6f62b7770f1d08d3b79" kindref="member">dpp::p_send_messages</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adds<sp/>p_view_channel<sp/>and<sp/>p_send_messages<sp/>to<sp/>the<sp/>permission<sp/>bitmask</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>permission&amp; reference to self for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="167" column="24" bodyfile="include/dpp/permissions.h" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1ab6195520d0ac02ef667c1895742824f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdpp_1_1permission" kindref="compound">permission</ref> &amp;</type>
        <definition>permission &amp; dpp::permission::set</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>set</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Assign a permission. This will reset the bitmask to the new value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>one or more uint64_t permission bits </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The permissions (from <ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7" kindref="member">dpp::permissions</ref>) to set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold></para>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="classdpp_1_1permission_1ab888bf9619d2af4614863026e863fdbc" kindref="member">permission</ref>.set(<ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a5ca9e89b32af806f7c0c179c3bdfb1ad" kindref="member">dpp::p_view_channel</ref>,<sp/><ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7ad410586df8dba6f62b7770f1d08d3b79" kindref="member">dpp::p_send_messages</ref>);</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>permission&amp; reference to self for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="186" column="24" bodyfile="include/dpp/permissions.h" bodystart="186" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1a9e78021ba83d2dacc91fc720689ee5a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdpp_1_1permission" kindref="compound">permission</ref> &amp;</type>
        <definition>permission &amp; dpp::permission::remove</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>remove</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Remove a permission with the Bitwise NOT operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>one or more uint64_t permission bits </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The permissions (from <ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7" kindref="member">dpp::permissions</ref>) to remove</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold></para>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="classdpp_1_1permission_1ab888bf9619d2af4614863026e863fdbc" kindref="member">permission</ref>.remove(<ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7a5ca9e89b32af806f7c0c179c3bdfb1ad" kindref="member">dpp::p_view_channel</ref>,<sp/><ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7ad410586df8dba6f62b7770f1d08d3b79" kindref="member">dpp::p_send_messages</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Removes<sp/>p_view_channel<sp/>and<sp/>p_send_messages<sp/>permission</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>permission&amp; reference to self for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="207" column="24" bodyfile="include/dpp/permissions.h" bodystart="207" bodyend="211"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a permission bitmask (refer to enum <ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7" kindref="member">dpp::permissions</ref>) which are hold in an uint64_t. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>dpp::permission</label>
        <link refid="classdpp_1_1permission"/>
        <childnode refid="2" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/permissions.h" line="83" column="1" bodyfile="include/dpp/permissions.h" bodystart="83" bodyend="212"/>
    <listofallmembers>
      <member refid="classdpp_1_1permission_1adcc32475f286b7e605351d8a24dab047" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>add</name></member>
      <member refid="classdpp_1_1permission_1af57679e82ba664209477d5564278c6cd" prot="protected" virt="non-virtual"><scope>dpp::permission</scope><name>add_one</name></member>
      <member refid="classdpp_1_1permission_1aa346188a9babb8dfc6ee7b06261ba6ca" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>has</name></member>
      <member refid="classdpp_1_1permission_1ac6ef5597dc1f21da58745fb19c7217db" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>operator uint64_t</name></member>
      <member refid="classdpp_1_1permission_1a535d715d759dedcc9b9c1053ef5978be" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>operator uint64_t &amp;</name></member>
      <member refid="classdpp_1_1permission_1a9cb26c5c69dc104aeb82955545b7e29a" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>permission</name></member>
      <member refid="classdpp_1_1permission_1ab888bf9619d2af4614863026e863fdbc" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>permission</name></member>
      <member refid="classdpp_1_1permission_1a9e78021ba83d2dacc91fc720689ee5a7" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>remove</name></member>
      <member refid="classdpp_1_1permission_1af4617cb961227879708f5960fb24d6f9" prot="protected" virt="non-virtual"><scope>dpp::permission</scope><name>remove_one</name></member>
      <member refid="classdpp_1_1permission_1ab6195520d0ac02ef667c1895742824f9" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>set</name></member>
      <member refid="classdpp_1_1permission_1a467d218ab64fc6be1c7cf68322a0a84e" prot="protected" virt="non-virtual"><scope>dpp::permission</scope><name>set_one</name></member>
      <member refid="classdpp_1_1permission_1a351c22a0d447069a6833c9cb1b72fbbd" prot="protected" virt="non-virtual"><scope>dpp::permission</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
