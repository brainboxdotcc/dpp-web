<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1permission" kind="class" language="C++" prot="public">
    <compoundname>dpp::permission</compoundname>
    <includes local="no">permissions.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classdpp_1_1permission_1a351c22a0d447069a6833c9cb1b72fbbd" prot="protected" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t dpp::permission::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
<para>The permission bitmask value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="87" column="10" bodyfile="include/dpp/permissions.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1permission_1a9cb26c5c69dc104aeb82955545b7e29a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::permission::permission</definition>
        <argsstring>(const uint64_t &amp;value)</argsstring>
        <name>permission</name>
        <param>
          <type>const uint64_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Construct a permission object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>A permission bitmask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="93" column="1" bodyfile="src/dpp/permissions.cpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1ab888bf9619d2af4614863026e863fdbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::permission::permission</definition>
        <argsstring>()</argsstring>
        <name>permission</name>
        <briefdescription>
<para>Construct a permission object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="98" column="1" bodyfile="src/dpp/permissions.cpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1ac6ef5597dc1f21da58745fb19c7217db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::permission::operator uint64_t</definition>
        <argsstring>() const</argsstring>
        <name>operator uint64_t</name>
        <briefdescription>
<para>For acting like an integer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The permission bitmask value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="104" column="1" bodyfile="src/dpp/permissions.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1a535d715d759dedcc9b9c1053ef5978be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::permission::operator uint64_t &amp;</definition>
        <argsstring>()</argsstring>
        <name>operator uint64_t &amp;</name>
        <briefdescription>
<para>For acting like an integer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the permission bitmask value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="110" column="1" bodyfile="src/dpp/permissions.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1aa346188a9babb8dfc6ee7b06261ba6ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::permission::has</definition>
        <argsstring>(uint64_t p) const</argsstring>
        <name>has</name>
        <param>
          <type>uint64_t</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Check if it has a permission flag set. It uses the Bitwise AND operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The permission flag from <ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7" kindref="member">dpp::permissions</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if it has the permission </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="123" column="6" bodyfile="src/dpp/permissions.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1a3d59a7347d119ef65cdd6449dc723903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classdpp_1_1permission" kindref="compound">permission</ref> &amp;</type>
        <definition>const permission &amp; dpp::permission::add</definition>
        <argsstring>(uint64_t p)</argsstring>
        <name>add</name>
        <param>
          <type>uint64_t</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Add a permission with the Bitwise OR operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The permissions (from <ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7" kindref="member">dpp::permissions</ref>) to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>permission&amp; reference to self for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="130" column="18" bodyfile="src/dpp/permissions.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1ac7661ea078c867c1422564e52b67cff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classdpp_1_1permission" kindref="compound">permission</ref> &amp;</type>
        <definition>const permission &amp; dpp::permission::set</definition>
        <argsstring>(uint64_t p)</argsstring>
        <name>set</name>
        <param>
          <type>uint64_t</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Assign a permission. This will reset the bitmask to the new value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The permissions (from <ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7" kindref="member">dpp::permissions</ref>) to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>permission&amp; reference to self for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="137" column="18" bodyfile="src/dpp/permissions.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1permission_1aef575127f2f1499e5085f993523d2b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classdpp_1_1permission" kindref="compound">permission</ref> &amp;</type>
        <definition>const permission &amp; dpp::permission::remove</definition>
        <argsstring>(uint64_t p)</argsstring>
        <name>remove</name>
        <param>
          <type>uint64_t</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Remove a permission with the Bitwise NOT operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The permissions (from <ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7" kindref="member">dpp::permissions</ref>) to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>permission&amp; reference to self for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/permissions.h" line="144" column="18" bodyfile="src/dpp/permissions.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a permission bitmask (refer to enum <ref refid="namespacedpp_1a64f16cd622b3a09ae96803ba07fa75b7" kindref="member">dpp::permissions</ref>) which are hold in an uint64_t. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>dpp::permission</label>
        <link refid="classdpp_1_1permission"/>
        <childnode refid="2" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/permissions.h" line="82" column="1" bodyfile="include/dpp/permissions.h" bodystart="82" bodyend="145"/>
    <listofallmembers>
      <member refid="classdpp_1_1permission_1a3d59a7347d119ef65cdd6449dc723903" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>add</name></member>
      <member refid="classdpp_1_1permission_1aa346188a9babb8dfc6ee7b06261ba6ca" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>has</name></member>
      <member refid="classdpp_1_1permission_1ac6ef5597dc1f21da58745fb19c7217db" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>operator uint64_t</name></member>
      <member refid="classdpp_1_1permission_1a535d715d759dedcc9b9c1053ef5978be" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>operator uint64_t &amp;</name></member>
      <member refid="classdpp_1_1permission_1a9cb26c5c69dc104aeb82955545b7e29a" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>permission</name></member>
      <member refid="classdpp_1_1permission_1ab888bf9619d2af4614863026e863fdbc" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>permission</name></member>
      <member refid="classdpp_1_1permission_1aef575127f2f1499e5085f993523d2b72" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>remove</name></member>
      <member refid="classdpp_1_1permission_1ac7661ea078c867c1422564e52b67cff5" prot="public" virt="non-virtual"><scope>dpp::permission</scope><name>set</name></member>
      <member refid="classdpp_1_1permission_1a351c22a0d447069a6833c9cb1b72fbbd" prot="protected" virt="non-virtual"><scope>dpp::permission</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
