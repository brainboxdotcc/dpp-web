<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1voice__receive__t" kind="struct" prot="public">
    <compoundname>dpp::voice_receive_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1voice__receive__t_1aa843a6b21c4dc8742960abec208e7fa5" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__voice__client" kindref="compound">discord_voice_client</ref> *</type>
        <definition>class discord_voice_client* dpp::voice_receive_t::voice_client</definition>
        <argsstring></argsstring>
        <name>voice_client</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="873" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="873" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1voice__receive__t_1abe0062119471690caacc95d849274413" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* dpp::voice_receive_t::audio</definition>
        <argsstring></argsstring>
        <name>audio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="874" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="874" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1voice__receive__t_1abdc253b2799cb504caa9bd030838f668" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t dpp::voice_receive_t::audio_size</definition>
        <argsstring></argsstring>
        <name>audio_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="875" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="875" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1voice__receive__t_1a17d45e43c72fbe78358be74146cbaee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::voice_receive_t::voice_receive_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>voice_receive_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on. WILL ALWAYS be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="872" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="151" bodyend="151"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>voice receive packet </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="15279">
        <label>dpp::voice_receive_t</label>
        <link refid="structdpp_1_1voice__receive__t"/>
        <childnode refid="15280" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15280">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15360">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="15298">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="15297" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="15290" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="15299" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="15301" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="15304" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="15283" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="15307" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="15294">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="15295" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="15296" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="15324">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15281">
        <label>dpp::voice_receive_t</label>
        <link refid="structdpp_1_1voice__receive__t"/>
        <childnode refid="15282" relation="public-inheritance">
        </childnode>
        <childnode refid="15374" relation="usage">
          <edgelabel>audio_size</edgelabel>
        </childnode>
        <childnode refid="15373" relation="usage">
          <edgelabel>voice_client</edgelabel>
        </childnode>
        <childnode refid="15375" relation="usage">
          <edgelabel>audio</edgelabel>
        </childnode>
      </node>
      <node id="15339">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="15325">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="15372">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="15289" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="15373" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="15283" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="15365">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="15374">
        <label>size_t</label>
      </node>
      <node id="15352">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="15301">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="15302" relation="public-inheritance">
        </childnode>
        <childnode refid="15303" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="15304" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="15305" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="15283" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="15306" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="15310">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="15354">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="15326">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="15356">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="15366">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="15292">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="15307">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="15308" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="15309" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="15310" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="15311" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="15312" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="15313" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="15314" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="15315" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="15316" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="15317" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="15318" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="15319" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="15320" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="15321" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="15322" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="15323" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="15324" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="15325" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="15326" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="15327" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="15328" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="15329" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="15330" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="15331" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="15332" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="15333" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="15334" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="15335" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="15336" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="15337" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="15338" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="15339" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="15340" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="15341" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="15342" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="15343" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="15344" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="15345" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="15346" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="15347" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="15348" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="15349" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="15350" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="15351" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="15352" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="15353" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="15354" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="15355" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="15356" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="15357" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="15358" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="15359" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="15360" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="15361" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="15362" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="15363" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="15364" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="15365" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="15366" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="15367" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="15368" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="15314">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="15321">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="15363">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="15289">
        <label>uint64_t</label>
      </node>
      <node id="15358">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15355">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15341">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="15375">
        <label>uint8_t *</label>
      </node>
      <node id="15335">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="15323">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="15312">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15331">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="15348">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="15345">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15368">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="15303">
        <label>uint16_t</label>
      </node>
      <node id="15333">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="15290">
        <label>time_t</label>
      </node>
      <node id="15284">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="15367">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="15344">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="15373">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="15286" relation="public-inheritance">
        </childnode>
        <childnode refid="15289" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="15290" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="15298" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="15304" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="15283" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="15293" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="15370" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="15306">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="15289" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="15343">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="15332">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="15297">
        <label>double</label>
      </node>
      <node id="15287">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="15288" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="15289" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="15290" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="15291" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="15292" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="15293" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="15283" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="15294" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="15342">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15364">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="15304">
        <label>uint32_t</label>
      </node>
      <node id="15362">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="15282">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="15283" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="15285" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="15305">
        <label>uint8_t</label>
      </node>
      <node id="15347">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="15300">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="15286">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="15287" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15299">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="15300" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="15316">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="15328">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="15313">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="15336">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="15338">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="15371">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="15289" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15372" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15288">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="15330">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15285">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="15286" relation="public-inheritance">
        </childnode>
        <childnode refid="15297" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="15289" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="15290" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="15298" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="15369" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="15304" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="15293" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="15283" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="15370" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="15371" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="15337">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="15295">
        <label>SSL *</label>
      </node>
      <node id="15302">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="15289" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="15350">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="15351">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="15359">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="15296">
        <label>SSL_CTX *</label>
      </node>
      <node id="15346">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="15369">
        <label>mutex</label>
      </node>
      <node id="15357">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15315">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="15334">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="15340">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="15353">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="15293">
        <label>bool</label>
      </node>
      <node id="15291">
        <label>SOCKET</label>
      </node>
      <node id="15329">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="15361">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="15319">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="15311">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15308">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="15327">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="15349">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="15309">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="15322">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="15318">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="15370">
        <label>native_handle_type</label>
      </node>
      <node id="15320">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15283">
        <label>std::string</label>
        <childnode refid="15284" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15317">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="865" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="865" bodyend="876"/>
    <listofallmembers>
      <member refid="structdpp_1_1voice__receive__t_1abe0062119471690caacc95d849274413" prot="public" virt="non-virtual"><scope>dpp::voice_receive_t</scope><name>audio</name></member>
      <member refid="structdpp_1_1voice__receive__t_1abdc253b2799cb504caa9bd030838f668" prot="public" virt="non-virtual"><scope>dpp::voice_receive_t</scope><name>audio_size</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::voice_receive_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::voice_receive_t</scope><name>from</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::voice_receive_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1voice__receive__t_1aa843a6b21c4dc8742960abec208e7fa5" prot="public" virt="non-virtual"><scope>dpp::voice_receive_t</scope><name>voice_client</name></member>
      <member refid="structdpp_1_1voice__receive__t_1a17d45e43c72fbe78358be74146cbaee5" prot="public" virt="non-virtual"><scope>dpp::voice_receive_t</scope><name>voice_receive_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
