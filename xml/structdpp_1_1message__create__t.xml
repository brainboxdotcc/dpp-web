<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1message__create__t" kind="struct" prot="public">
    <compoundname>dpp::message_create_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1message__create__t_1a93c10b3fce36e161eca41edcd32857d0" prot="public" static="no" mutable="no">
        <type><ref refid="structdpp_1_1message" kindref="compound">message</ref> *</type>
        <definition>message* dpp::message_create_t::msg</definition>
        <argsstring></argsstring>
        <name>msg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="686" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1message__create__t_1ac92030b9e82742ab832f9a2e9d6cfc00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::message_create_t::message_create_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>message_create_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="685" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="134" bodyend="134"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Create message. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="12334">
        <label>dpp::message_create_t</label>
        <link refid="structdpp_1_1message__create__t"/>
        <childnode refid="12335" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12335">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12415">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="12353">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="12352" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="12345" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="12354" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="12356" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="12359" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="12362" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="12349">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="12350" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="12351" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="12379">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12394">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="12380">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="12427">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="12344" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12428" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="12420">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="12407">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="12431">
        <label>dpp::attachment</label>
        <link refid="structdpp_1_1attachment"/>
        <childnode refid="12344" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="12359" relation="usage">
          <edgelabel>width</edgelabel>
          <edgelabel>size</edgelabel>
          <edgelabel>height</edgelabel>
        </childnode>
        <childnode refid="12348" relation="usage">
          <edgelabel>ephemeral</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>content_type</edgelabel>
          <edgelabel>url</edgelabel>
          <edgelabel>proxy_url</edgelabel>
          <edgelabel>filename</edgelabel>
        </childnode>
      </node>
      <node id="12356">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="12357" relation="public-inheritance">
        </childnode>
        <childnode refid="12358" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="12359" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12360" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="12361" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="12365">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="12409">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="12381">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="12411">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="12434">
        <label>std::vector&lt; dpp::dpp::component &gt;</label>
        <childnode refid="12435" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12421">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="12347">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="12362">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="12363" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="12364" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="12365" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="12366" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="12367" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="12368" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="12369" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="12370" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="12371" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="12372" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="12373" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="12374" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="12375" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="12376" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="12377" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="12378" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="12379" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="12380" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="12381" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="12382" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="12383" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="12384" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="12385" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="12386" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="12387" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="12388" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="12389" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="12390" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="12391" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="12392" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="12393" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="12394" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="12395" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="12396" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="12397" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="12398" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="12399" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="12400" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="12401" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="12402" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="12403" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="12404" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="12405" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="12406" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="12407" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="12408" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="12409" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="12410" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="12411" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="12412" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="12413" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="12414" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="12415" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="12416" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="12417" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="12418" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="12419" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="12420" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="12421" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="12422" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="12423" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="12435">
        <label>component</label>
      </node>
      <node id="12432">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="12345" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="12344" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="12360" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="12433" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="12336">
        <label>dpp::message_create_t</label>
        <link refid="structdpp_1_1message__create__t"/>
        <childnode refid="12337" relation="public-inheritance">
        </childnode>
        <childnode refid="12429" relation="usage">
          <edgelabel>msg</edgelabel>
        </childnode>
      </node>
      <node id="12369">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="12376">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="12440">
        <label>dpp::message::message_ref</label>
        <link refid="structdpp_1_1message_1_1message__ref"/>
        <childnode refid="12344" relation="usage">
          <edgelabel>guild_id</edgelabel>
          <edgelabel>message_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12348" relation="usage">
          <edgelabel>fail_if_not_exists</edgelabel>
        </childnode>
      </node>
      <node id="12418">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="12441">
        <label>std::vector&lt; dpp::embed &gt;</label>
        <childnode refid="12442" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12344">
        <label>uint64_t</label>
      </node>
      <node id="12444">
        <label>std::vector&lt; dpp::embed_field &gt;</label>
        <childnode refid="12445" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12413">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12450">
        <label>dpp::sticker</label>
        <link refid="structdpp_1_1sticker"/>
        <childnode refid="12451" relation="usage">
          <edgelabel>format_type</edgelabel>
        </childnode>
        <childnode refid="12344" relation="usage">
          <edgelabel>pack_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="12356" relation="usage">
          <edgelabel>sticker_user</edgelabel>
        </childnode>
        <childnode refid="12360" relation="usage">
          <edgelabel>sort_value</edgelabel>
        </childnode>
        <childnode refid="12348" relation="usage">
          <edgelabel>available</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>filecontent</edgelabel>
          <edgelabel>asset</edgelabel>
          <edgelabel>tags</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>filename</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="12452" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="12410">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12396">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="12449">
        <label>std::vector&lt; dpp::sticker &gt;</label>
        <childnode refid="12450" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12390">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="12378">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="12367">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12386">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="12445">
        <label>dpp::embed_field</label>
        <link refid="structdpp_1_1embed__field"/>
        <childnode refid="12348" relation="usage">
          <edgelabel>is_inline</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>value</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="12403">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="12400">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12423">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="12358">
        <label>uint16_t</label>
      </node>
      <node id="12388">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="12345">
        <label>time_t</label>
      </node>
      <node id="12339">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="12422">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="12399">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="12428">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="12341" relation="public-inheritance">
        </childnode>
        <childnode refid="12344" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12345" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="12353" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="12359" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="12348" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="12425" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="12361">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="12344" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="12398">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="12387">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="12446">
        <label>optional&lt; dpp::embed_provider &gt;</label>
      </node>
      <node id="12352">
        <label>double</label>
      </node>
      <node id="12342">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="12343" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="12344" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="12345" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="12346" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="12347" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="12348" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="12349" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="12397">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12419">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="12359">
        <label>uint32_t</label>
      </node>
      <node id="12451">
        <label>sticker_format</label>
      </node>
      <node id="12417">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="12337">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="12338" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="12340" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="12360">
        <label>uint8_t</label>
      </node>
      <node id="12402">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="12355">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="12341">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="12342" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12354">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="12355" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="12371">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="12383">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="12368">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="12442">
        <label>dpp::embed</label>
        <link refid="structdpp_1_1embed"/>
        <childnode refid="12443" relation="usage">
          <edgelabel>video</edgelabel>
          <edgelabel>thumbnail</edgelabel>
          <edgelabel>image</edgelabel>
        </childnode>
        <childnode refid="12345" relation="usage">
          <edgelabel>timestamp</edgelabel>
        </childnode>
        <childnode refid="12444" relation="usage">
          <edgelabel>fields</edgelabel>
        </childnode>
        <childnode refid="12359" relation="usage">
          <edgelabel>color</edgelabel>
        </childnode>
        <childnode refid="12446" relation="usage">
          <edgelabel>provider</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>title</edgelabel>
          <edgelabel>url</edgelabel>
          <edgelabel>type</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="12447" relation="usage">
          <edgelabel>footer</edgelabel>
        </childnode>
        <childnode refid="12448" relation="usage">
          <edgelabel>author</edgelabel>
        </childnode>
      </node>
      <node id="12391">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="12393">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="12448">
        <label>optional&lt; dpp::embed_author &gt;</label>
      </node>
      <node id="12426">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="12344" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="12427" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12343">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="12385">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12340">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="12341" relation="public-inheritance">
        </childnode>
        <childnode refid="12352" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="12344" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="12345" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="12353" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="12424" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="12359" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="12348" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="12425" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="12426" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="12437">
        <label>dpp::message::allowed_ref</label>
        <link refid="structdpp_1_1message_1_1allowed__ref"/>
        <childnode refid="12348" relation="usage">
          <edgelabel>replied_user</edgelabel>
          <edgelabel>parse_roles</edgelabel>
          <edgelabel>parse_everyone</edgelabel>
          <edgelabel>parse_users</edgelabel>
        </childnode>
        <childnode refid="12433" relation="usage">
          <edgelabel>users</edgelabel>
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="12392">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="12452">
        <label>sticker_type</label>
      </node>
      <node id="12350">
        <label>SSL *</label>
      </node>
      <node id="12443">
        <label>optional&lt; dpp::embed_image &gt;</label>
      </node>
      <node id="12357">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="12344" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="12405">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="12447">
        <label>optional&lt; dpp::embed_footer &gt;</label>
      </node>
      <node id="12406">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="12439">
        <label>dpp::reaction</label>
        <link refid="structdpp_1_1reaction"/>
        <childnode refid="12344" relation="usage">
          <edgelabel>emoji_id</edgelabel>
        </childnode>
        <childnode refid="12359" relation="usage">
          <edgelabel>count</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>emoji_name</edgelabel>
        </childnode>
        <childnode refid="12348" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
      </node>
      <node id="12414">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="12351">
        <label>SSL_CTX *</label>
      </node>
      <node id="12401">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="12430">
        <label>std::vector&lt; dpp::attachment &gt;</label>
        <childnode refid="12431" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12424">
        <label>mutex</label>
      </node>
      <node id="12412">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12370">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="12389">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="12395">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="12429">
        <label>dpp::message</label>
        <link refid="structdpp_1_1message"/>
        <childnode refid="12430" relation="usage">
          <edgelabel>attachments</edgelabel>
        </childnode>
        <childnode refid="12345" relation="usage">
          <edgelabel>edited</edgelabel>
          <edgelabel>sent</edgelabel>
        </childnode>
        <childnode refid="12344" relation="usage">
          <edgelabel>webhook_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12432" relation="usage">
          <edgelabel>member</edgelabel>
        </childnode>
        <childnode refid="12434" relation="usage">
          <edgelabel>components</edgelabel>
        </childnode>
        <childnode refid="12436" relation="usage">
          <edgelabel>interaction</edgelabel>
        </childnode>
        <childnode refid="12356" relation="usage">
          <edgelabel>self_author</edgelabel>
          <edgelabel>author</edgelabel>
        </childnode>
        <childnode refid="12360" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="12348" relation="usage">
          <edgelabel>pinned</edgelabel>
          <edgelabel>mention_everyone</edgelabel>
          <edgelabel>tts</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>filecontent</edgelabel>
          <edgelabel>nonce</edgelabel>
          <edgelabel>content</edgelabel>
          <edgelabel>filename</edgelabel>
        </childnode>
        <childnode refid="12437" relation="usage">
          <edgelabel>allowed_mentions</edgelabel>
        </childnode>
        <childnode refid="12433" relation="usage">
          <edgelabel>mentions</edgelabel>
          <edgelabel>mention_channels</edgelabel>
          <edgelabel>mention_roles</edgelabel>
        </childnode>
        <childnode refid="12438" relation="usage">
          <edgelabel>reactions</edgelabel>
        </childnode>
        <childnode refid="12440" relation="usage">
          <edgelabel>message_reference</edgelabel>
        </childnode>
        <childnode refid="12441" relation="usage">
          <edgelabel>embeds</edgelabel>
        </childnode>
        <childnode refid="12449" relation="usage">
          <edgelabel>stickers</edgelabel>
        </childnode>
      </node>
      <node id="12408">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="12348">
        <label>bool</label>
      </node>
      <node id="12438">
        <label>std::vector&lt; dpp::reaction &gt;</label>
        <childnode refid="12439" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12346">
        <label>SOCKET</label>
      </node>
      <node id="12384">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="12416">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="12374">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="12436">
        <label>dpp::message::message_interaction_struct</label>
        <link refid="structdpp_1_1message_1_1message__interaction__struct"/>
        <childnode refid="12344" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="12356" relation="usage">
          <edgelabel>usr</edgelabel>
        </childnode>
        <childnode refid="12338" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="12360" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="12366">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12363">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="12382">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="12404">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="12364">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="12377">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="12373">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="12433">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="12344" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12425">
        <label>native_handle_type</label>
      </node>
      <node id="12375">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12338">
        <label>std::string</label>
        <childnode refid="12339" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12372">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="680" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="680" bodyend="687"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::message_create_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::message_create_t</scope><name>from</name></member>
      <member refid="structdpp_1_1message__create__t_1ac92030b9e82742ab832f9a2e9d6cfc00" prot="public" virt="non-virtual"><scope>dpp::message_create_t</scope><name>message_create_t</name></member>
      <member refid="structdpp_1_1message__create__t_1a93c10b3fce36e161eca41edcd32857d0" prot="public" virt="non-virtual"><scope>dpp::message_create_t</scope><name>msg</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::message_create_t</scope><name>raw_event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
