<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1resumed__t" kind="struct" prot="public">
    <compoundname>dpp::resumed_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1resumed__t_1a117033854fb7a8d871ed5a7638a8d8e6" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::resumed_t::session_id</definition>
        <argsstring></argsstring>
        <name>session_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="362" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1resumed__t_1a6427ec22c7567f5b39db9777d114dac7" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dpp::resumed_t::shard_id</definition>
        <argsstring></argsstring>
        <name>shard_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="363" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1resumed__t_1a39a9ceb42b2608326c23e25412eb6967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::resumed_t::resumed_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>resumed_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="361" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="108" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Session resumed. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="13702">
        <label>dpp::resumed_t</label>
        <link refid="structdpp_1_1resumed__t"/>
        <childnode refid="13703" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13703">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13783">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="13721">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="13720" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="13713" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="13722" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="13724" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="13727" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="13706" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="13730" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="13717">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="13718" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="13719" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="13747">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13762">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="13748">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="13795">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="13712" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="13796" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="13706" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="13788">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="13775">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="13724">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="13725" relation="public-inheritance">
        </childnode>
        <childnode refid="13726" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="13727" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="13728" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="13706" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="13729" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="13733">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="13777">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="13749">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="13779">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="13789">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="13715">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="13730">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="13731" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="13732" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="13733" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="13734" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="13735" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="13736" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="13737" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="13738" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="13739" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="13740" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="13741" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="13742" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="13743" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="13744" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="13745" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="13746" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="13747" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="13748" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="13749" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="13750" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="13751" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="13752" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="13753" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="13754" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="13755" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="13756" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="13757" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="13758" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="13759" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="13760" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="13761" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="13762" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="13763" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="13764" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="13765" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="13766" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="13767" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="13768" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="13769" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="13770" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="13771" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="13772" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="13773" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="13774" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="13775" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="13776" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="13777" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="13778" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="13779" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="13780" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="13781" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="13782" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="13783" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="13784" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="13785" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="13786" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="13787" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="13788" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="13789" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="13790" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="13791" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="13737">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="13744">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="13786">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="13712">
        <label>uint64_t</label>
      </node>
      <node id="13781">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13778">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13764">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="13758">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="13746">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="13735">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13754">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="13704">
        <label>dpp::resumed_t</label>
        <link refid="structdpp_1_1resumed__t"/>
        <childnode refid="13705" relation="public-inheritance">
        </childnode>
        <childnode refid="13727" relation="usage">
          <edgelabel>shard_id</edgelabel>
        </childnode>
        <childnode refid="13706" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
      </node>
      <node id="13771">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="13768">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13791">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="13726">
        <label>uint16_t</label>
      </node>
      <node id="13756">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="13713">
        <label>time_t</label>
      </node>
      <node id="13707">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="13790">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="13767">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="13796">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="13709" relation="public-inheritance">
        </childnode>
        <childnode refid="13712" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="13713" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="13721" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="13727" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="13706" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="13716" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="13793" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="13729">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="13712" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="13766">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="13755">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="13720">
        <label>double</label>
      </node>
      <node id="13710">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="13711" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="13712" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="13713" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="13714" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="13715" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="13716" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="13706" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="13717" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="13765">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13787">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="13727">
        <label>uint32_t</label>
      </node>
      <node id="13785">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="13705">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="13706" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="13708" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="13728">
        <label>uint8_t</label>
      </node>
      <node id="13770">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="13723">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="13709">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="13710" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13722">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="13723" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="13739">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="13751">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="13736">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="13759">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="13761">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="13794">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="13712" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="13795" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13711">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="13753">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13708">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="13709" relation="public-inheritance">
        </childnode>
        <childnode refid="13720" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="13712" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="13713" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="13721" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="13792" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="13727" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="13716" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="13706" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="13793" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="13794" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="13760">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="13718">
        <label>SSL *</label>
      </node>
      <node id="13725">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="13712" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="13773">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="13774">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="13782">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="13719">
        <label>SSL_CTX *</label>
      </node>
      <node id="13769">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="13792">
        <label>mutex</label>
      </node>
      <node id="13780">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13738">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="13757">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="13763">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="13776">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="13716">
        <label>bool</label>
      </node>
      <node id="13714">
        <label>SOCKET</label>
      </node>
      <node id="13752">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="13784">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="13742">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="13734">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13731">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="13750">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="13772">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="13732">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="13745">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="13741">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="13793">
        <label>native_handle_type</label>
      </node>
      <node id="13743">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="13706">
        <label>std::string</label>
        <childnode refid="13707" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13740">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="356" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="356" bodyend="364"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::resumed_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::resumed_t</scope><name>from</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::resumed_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1resumed__t_1a39a9ceb42b2608326c23e25412eb6967" prot="public" virt="non-virtual"><scope>dpp::resumed_t</scope><name>resumed_t</name></member>
      <member refid="structdpp_1_1resumed__t_1a117033854fb7a8d871ed5a7638a8d8e6" prot="public" virt="non-virtual"><scope>dpp::resumed_t</scope><name>session_id</name></member>
      <member refid="structdpp_1_1resumed__t_1a6427ec22c7567f5b39db9777d114dac7" prot="public" virt="non-virtual"><scope>dpp::resumed_t</scope><name>shard_id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
