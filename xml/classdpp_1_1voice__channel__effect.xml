<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1voice__channel__effect" kind="class" language="C++" prot="public">
    <compoundname>dpp::voice_channel_effect</compoundname>
    <basecompoundref refid="structdpp_1_1json__interface" prot="public" virt="non-virtual">dpp::json_interface&lt; voice_channel_effect &gt;</basecompoundref>
    <includes local="no">voice_channel_effect.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classdpp_1_1voice__channel__effect_1a633dfc52f77c900e6ccbea89342d1815" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct json_interface&lt; voice_channel_effect &gt;</definition>
        <argsstring></argsstring>
        <name>json_interface&lt; voice_channel_effect &gt;</name>
        <param>
          <type><ref refid="structdpp_1_1json__interface" kindref="compound">json_interface</ref>&lt; <ref refid="classdpp_1_1voice__channel__effect" kindref="compound">voice_channel_effect</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voice_channel_effect.h" line="42" column="17" bodyfile="include/dpp/voice_channel_effect.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1voice__channel__effect_1a99428d0b76f678d8701410529e067d98" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dpp::voice_channel_effect::animation_id</definition>
        <argsstring></argsstring>
        <name>animation_id</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>The ID of the emoji animation, for emoji reaction and soundboard effects. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This may be empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voice_channel_effect.h" line="92" column="10" bodyfile="include/dpp/voice_channel_effect.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voice__channel__effect_1a86ac172eee0d19378942887de50c6d11" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dpp::voice_channel_effect::animation_type</definition>
        <argsstring></argsstring>
        <name>animation_type</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>The type of emoji animation, for emoji reaction and soundboard effects. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This may be empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voice_channel_effect.h" line="85" column="9" bodyfile="include/dpp/voice_channel_effect.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voice__channel__effect_1aa56f20cbbed95607afc102285e63fb14" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::voice_channel_effect::channel_id</definition>
        <argsstring></argsstring>
        <name>channel_id</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>The channel id the user who sent the effect is connected to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voice_channel_effect.h" line="63" column="11" bodyfile="include/dpp/voice_channel_effect.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voice__channel__effect_1a7386d88ec74d1b4b9f234fad640f8769" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1emoji" kindref="compound">dpp::emoji</ref></type>
        <definition>dpp::emoji dpp::voice_channel_effect::emoji</definition>
        <argsstring></argsstring>
        <name>emoji</name>
        <briefdescription>
<para>The emoji of the voice channel effect. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voice_channel_effect.h" line="78" column="12" bodyfile="include/dpp/voice_channel_effect.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voice__channel__effect_1af8e71b7843b6a2c45447b06ea99e68b9" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::voice_channel_effect::guild_id</definition>
        <argsstring></argsstring>
        <name>guild_id</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>The guild id with the channel this effect was sent in. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voice_channel_effect.h" line="68" column="11" bodyfile="include/dpp/voice_channel_effect.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voice__channel__effect_1a0f3a72a54a492f03b1ad65475ad8b28a" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t dpp::voice_channel_effect::shard_id</definition>
        <argsstring></argsstring>
        <name>shard_id</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Owning shard. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voice_channel_effect.h" line="58" column="9" bodyfile="include/dpp/voice_channel_effect.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voice__channel__effect_1a571e5f9130d9bd1a4ae88095d9148939" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::voice_channel_effect::sound_id</definition>
        <argsstring></argsstring>
        <name>sound_id</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>The ID of the soundboard sound, for soundboard effects. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This may be empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voice_channel_effect.h" line="99" column="11" bodyfile="include/dpp/voice_channel_effect.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voice__channel__effect_1af899df8e5b4e45704a7a3fe7981ffcc3" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double dpp::voice_channel_effect::sound_volume</definition>
        <argsstring></argsstring>
        <name>sound_volume</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>The volume of the soundboard sound, from 0 to 1, for soundboard effects. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This may be empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voice_channel_effect.h" line="106" column="8" bodyfile="include/dpp/voice_channel_effect.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1voice__channel__effect_1a79bfbc43a8c4ab9f2faf3b4103072e47" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::voice_channel_effect::user_id</definition>
        <argsstring></argsstring>
        <name>user_id</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>The user id who sent the effect. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voice_channel_effect.h" line="73" column="11" bodyfile="include/dpp/voice_channel_effect.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdpp_1_1voice__channel__effect_1a1e05f4f761c04b040b6c78fd18c35eab" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1voice__channel__effect" kindref="compound">voice_channel_effect</ref> &amp;</type>
        <definition>voice_channel_effect &amp; dpp::voice_channel_effect::fill_from_json_impl</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json_impl</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Fill voice channel effect object from json data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON data to fill from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classdpp_1_1voice__channel__effect" kindref="compound">voice_channel_effect</ref>&amp; Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voice_channel_effect.h" line="52" column="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1voice__channel__effect_1ad133d46dde38abde5c0da85efcc2c7bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::voice_channel_effect::voice_channel_effect</definition>
        <argsstring>()</argsstring>
        <name>voice_channel_effect</name>
        <briefdescription>
<para>Construct a new <ref refid="classdpp_1_1voice__channel__effect" kindref="compound">voice_channel_effect</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voice_channel_effect.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1voice__channel__effect_1a42474d60bbee5825d7ff4ac28bc923e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual dpp::voice_channel_effect::~voice_channel_effect</definition>
        <argsstring>()=default</argsstring>
        <name>~voice_channel_effect</name>
        <briefdescription>
<para>Destroy the <ref refid="classdpp_1_1voice__channel__effect" kindref="compound">voice_channel_effect</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/voice_channel_effect.h" line="116" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::json_interface&lt; voice_channel_effect  &gt;::build_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>build_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to json string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>std::string Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="68" column="13" bodyfile="include/dpp/json_interface.h" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdpp_1_1voice__channel__effect" kindref="compound">voice_channel_effect</ref> &amp;</type>
        <definition>voice_channel_effect  &amp; dpp::json_interface&lt; voice_channel_effect  &gt;::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Convert object from nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T&amp; Reference to self for fluent calling </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="44" column="3" bodyfile="include/dpp/json_interface.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto dpp::json_interface&lt; voice_channel_effect  &gt;::to_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>to_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>json Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="56" column="6" bodyfile="include/dpp/json_interface.h" bodystart="56" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a voice channel effect e.g. a soundboard sound or an emoji reaction. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="1">
        <label>dpp::voice_channel_effect</label>
        <link refid="classdpp_1_1voice__channel__effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; voice_channel_effect &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; voice_channel_effect &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18">
        <label>double</label>
      </node>
      <node id="7">
        <label>dpp::emoji</label>
        <link refid="classdpp_1_1emoji"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>image_data</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="8">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="5" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>dpp::snowflake</label>
        <link refid="classdpp_1_1snowflake"/>
        <childnode refid="6" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>dpp::utility::image_data</label>
        <link refid="structdpp_1_1utility_1_1image__data"/>
        <childnode refid="14" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>size</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dpp::voice_channel_effect</label>
        <link refid="classdpp_1_1voice__channel__effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>shard_id</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>channel_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>sound_id</edgelabel>
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>emoji</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>animation_type</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>animation_id</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>sound_volume</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>image_type</label>
      </node>
      <node id="4">
        <label>int32_t</label>
      </node>
      <node id="9">
        <label>dpp::json_interface&lt; emoji &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; emoji &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; voice_channel_effect &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; voice_channel_effect &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="10">
        <label>std::string</label>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>unique_ptr&lt;</label>
      </node>
      <node id="12">
        <label>vector&lt;</label>
      </node>
      <node id="15">
        <label>uint32_t</label>
      </node>
      <node id="6">
        <label>uint64_t</label>
      </node>
      <node id="17">
        <label>uint8_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/voice_channel_effect.h" line="42" column="1" bodyfile="include/dpp/voice_channel_effect.h" bodystart="42" bodyend="117"/>
    <listofallmembers>
      <member refid="classdpp_1_1voice__channel__effect_1a99428d0b76f678d8701410529e067d98" prot="public" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>animation_id</name></member>
      <member refid="classdpp_1_1voice__channel__effect_1a86ac172eee0d19378942887de50c6d11" prot="public" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>animation_type</name></member>
      <member refid="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>build_json</name></member>
      <member refid="classdpp_1_1voice__channel__effect_1aa56f20cbbed95607afc102285e63fb14" prot="public" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>channel_id</name></member>
      <member refid="classdpp_1_1voice__channel__effect_1a7386d88ec74d1b4b9f234fad640f8769" prot="public" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>emoji</name></member>
      <member refid="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1voice__channel__effect_1a1e05f4f761c04b040b6c78fd18c35eab" prot="protected" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>fill_from_json_impl</name></member>
      <member refid="classdpp_1_1voice__channel__effect_1af8e71b7843b6a2c45447b06ea99e68b9" prot="public" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>guild_id</name></member>
      <member refid="classdpp_1_1voice__channel__effect_1a633dfc52f77c900e6ccbea89342d1815" prot="protected" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>json_interface&lt; voice_channel_effect &gt;</name></member>
      <member refid="classdpp_1_1voice__channel__effect_1a0f3a72a54a492f03b1ad65475ad8b28a" prot="public" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>shard_id</name></member>
      <member refid="classdpp_1_1voice__channel__effect_1a571e5f9130d9bd1a4ae88095d9148939" prot="public" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>sound_id</name></member>
      <member refid="classdpp_1_1voice__channel__effect_1af899df8e5b4e45704a7a3fe7981ffcc3" prot="public" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>sound_volume</name></member>
      <member refid="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>to_json</name></member>
      <member refid="classdpp_1_1voice__channel__effect_1a79bfbc43a8c4ab9f2faf3b4103072e47" prot="public" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>user_id</name></member>
      <member refid="classdpp_1_1voice__channel__effect_1ad133d46dde38abde5c0da85efcc2c7bf" prot="public" virt="non-virtual"><scope>dpp::voice_channel_effect</scope><name>voice_channel_effect</name></member>
      <member refid="classdpp_1_1voice__channel__effect_1a42474d60bbee5825d7ff4ac28bc923e1" prot="public" virt="virtual"><scope>dpp::voice_channel_effect</scope><name>~voice_channel_effect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
