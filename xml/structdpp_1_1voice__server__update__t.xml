<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1voice__server__update__t" kind="struct" prot="public">
    <compoundname>dpp::voice_server_update_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1voice__server__update__t_1a23789c0e52f60835f298064e01993446" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::voice_server_update_t::guild_id</definition>
        <argsstring></argsstring>
        <name>guild_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="545" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1voice__server__update__t_1a8e30dc32463638976c4bd2d59b10ddb1" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::voice_server_update_t::token</definition>
        <argsstring></argsstring>
        <name>token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="546" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1voice__server__update__t_1aafc5056f206e0783df145d3aef4ef01b" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::voice_server_update_t::endpoint</definition>
        <argsstring></argsstring>
        <name>endpoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="547" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1voice__server__update__t_1a818081c81337f241f2c7fdc2bf0be1bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::voice_server_update_t::voice_server_update_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>voice_server_update_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="544" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="121" bodyend="121"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Voice server update. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="15380">
        <label>dpp::voice_server_update_t</label>
        <link refid="structdpp_1_1voice__server__update__t"/>
        <childnode refid="15381" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15381">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15461">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="15399">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="15398" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="15391" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="15400" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="15402" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="15405" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="15384" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="15408" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="15395">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="15396" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="15397" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="15425">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15440">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="15426">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="15473">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="15390" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="15474" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="15384" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="15466">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="15453">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="15402">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="15403" relation="public-inheritance">
        </childnode>
        <childnode refid="15404" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="15405" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="15406" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="15384" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="15407" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="15411">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="15455">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="15427">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="15457">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="15382">
        <label>dpp::voice_server_update_t</label>
        <link refid="structdpp_1_1voice__server__update__t"/>
        <childnode refid="15383" relation="public-inheritance">
        </childnode>
        <childnode refid="15390" relation="usage">
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="15384" relation="usage">
          <edgelabel>endpoint</edgelabel>
          <edgelabel>token</edgelabel>
        </childnode>
      </node>
      <node id="15467">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="15393">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="15408">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="15409" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="15410" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="15411" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="15412" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="15413" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="15414" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="15415" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="15416" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="15417" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="15418" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="15419" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="15420" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="15421" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="15422" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="15423" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="15424" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="15425" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="15426" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="15427" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="15428" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="15429" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="15430" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="15431" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="15432" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="15433" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="15434" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="15435" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="15436" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="15437" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="15438" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="15439" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="15440" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="15441" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="15442" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="15443" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="15444" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="15445" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="15446" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="15447" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="15448" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="15449" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="15450" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="15451" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="15452" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="15453" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="15454" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="15455" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="15456" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="15457" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="15458" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="15459" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="15460" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="15461" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="15462" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="15463" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="15464" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="15465" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="15466" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="15467" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="15468" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="15469" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="15415">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="15422">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="15464">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="15390">
        <label>uint64_t</label>
      </node>
      <node id="15459">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15456">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15442">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="15436">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="15424">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="15413">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15432">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="15449">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="15446">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15469">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="15404">
        <label>uint16_t</label>
      </node>
      <node id="15434">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="15391">
        <label>time_t</label>
      </node>
      <node id="15385">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="15468">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="15445">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="15474">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="15387" relation="public-inheritance">
        </childnode>
        <childnode refid="15390" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="15391" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="15399" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="15405" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="15384" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="15394" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="15471" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="15407">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="15390" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="15444">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="15433">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="15398">
        <label>double</label>
      </node>
      <node id="15388">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="15389" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="15390" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="15391" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="15392" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="15393" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="15394" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="15384" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="15395" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="15443">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15465">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="15405">
        <label>uint32_t</label>
      </node>
      <node id="15463">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="15383">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="15384" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="15386" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="15406">
        <label>uint8_t</label>
      </node>
      <node id="15448">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="15401">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="15387">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="15388" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15400">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="15401" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="15417">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="15429">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="15414">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="15437">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="15439">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="15472">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="15390" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15473" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15389">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="15431">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15386">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="15387" relation="public-inheritance">
        </childnode>
        <childnode refid="15398" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="15390" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="15391" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="15399" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="15470" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="15405" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="15394" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="15384" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="15471" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="15472" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="15438">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="15396">
        <label>SSL *</label>
      </node>
      <node id="15403">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="15390" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="15451">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="15452">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="15460">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="15397">
        <label>SSL_CTX *</label>
      </node>
      <node id="15447">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="15470">
        <label>mutex</label>
      </node>
      <node id="15458">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15416">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="15435">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="15441">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="15454">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="15394">
        <label>bool</label>
      </node>
      <node id="15392">
        <label>SOCKET</label>
      </node>
      <node id="15430">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="15462">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="15420">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="15412">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15409">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="15428">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="15450">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="15410">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="15423">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="15419">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="15471">
        <label>native_handle_type</label>
      </node>
      <node id="15421">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="15384">
        <label>std::string</label>
        <childnode refid="15385" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15418">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="539" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="539" bodyend="548"/>
    <listofallmembers>
      <member refid="structdpp_1_1voice__server__update__t_1aafc5056f206e0783df145d3aef4ef01b" prot="public" virt="non-virtual"><scope>dpp::voice_server_update_t</scope><name>endpoint</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::voice_server_update_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::voice_server_update_t</scope><name>from</name></member>
      <member refid="structdpp_1_1voice__server__update__t_1a23789c0e52f60835f298064e01993446" prot="public" virt="non-virtual"><scope>dpp::voice_server_update_t</scope><name>guild_id</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::voice_server_update_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1voice__server__update__t_1a8e30dc32463638976c4bd2d59b10ddb1" prot="public" virt="non-virtual"><scope>dpp::voice_server_update_t</scope><name>token</name></member>
      <member refid="structdpp_1_1voice__server__update__t_1a818081c81337f241f2c7fdc2bf0be1bc" prot="public" virt="non-virtual"><scope>dpp::voice_server_update_t</scope><name>voice_server_update_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
