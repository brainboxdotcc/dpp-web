<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4" kind="struct" prot="public">
    <compoundname>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</compoundname>
    <basecompoundref refid="structformatter_3_01std_1_1tm_00_01_char_01_4" prot="public" virt="non-virtual">formatter&lt; std::tm, Char &gt;</basecompoundref>
    <includes local="no">chrono.h</includes>
    <templateparamlist>
      <param>
        <type>typename Char</type>
      </param>
      <param>
        <type>typename Duration</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4_1aa0e7df1351cc1c6f9a760c12bf9d31b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FormatContext</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;::format</definition>
        <argsstring>(std::chrono::time_point&lt; std::chrono::system_clock &gt; val, FormatContext &amp;ctx) -&gt; decltype(ctx.out())</argsstring>
        <name>format</name>
        <param>
          <type>std::chrono::time_point&lt; std::chrono::system_clock &gt;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>FormatContext &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/fmt/chrono.h" line="408" column="1" bodyfile="/home/brain/D++/include/dpp/fmt/chrono.h" bodystart="408" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="structformatter_3_01std_1_1tm_00_01_char_01_4_1a9c8caf13b1795ab3974768dc5f98a0e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ParseContext</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR auto</type>
        <definition>FMT_CONSTEXPR auto formatter&lt; std::tm, Char &gt;::parse</definition>
        <argsstring>(ParseContext &amp;ctx) -&gt; decltype(ctx.begin())</argsstring>
        <name>parse</name>
        <param>
          <type>ParseContext &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/fmt/chrono.h" line="417" column="1" bodyfile="/home/brain/D++/include/dpp/fmt/chrono.h" bodystart="417" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="structformatter_3_01std_1_1tm_00_01_char_01_4_1a0222d68c5e1ca97550eecb6cf60abed0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FormatContext</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto formatter&lt; std::tm, Char &gt;::format</definition>
        <argsstring>(const std::tm &amp;tm, FormatContext &amp;ctx) const -&gt; decltype(ctx.out())</argsstring>
        <name>format</name>
        <param>
          <type>const std::tm &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>FormatContext &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/fmt/chrono.h" line="427" column="1" bodyfile="/home/brain/D++/include/dpp/fmt/chrono.h" bodystart="427" bodyend="452"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structformatter_3_01std_1_1tm_00_01_char_01_4_1a57c0d36c7943de87688eeae9c3bd0b28" prot="public" static="no" mutable="no">
        <type>basic_string_view&lt; Char &gt;</type>
        <definition>basic_string_view&lt;Char&gt; formatter&lt; std::tm, Char &gt;::specs</definition>
        <argsstring></argsstring>
        <name>specs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/fmt/chrono.h" line="454" column="1" bodyfile="/home/brain/D++/include/dpp/fmt/chrono.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="9600">
        <label>formatter&lt; std::tm, Char &gt;</label>
        <link refid="structformatter_3_01std_1_1tm_00_01_char_01_4"/>
      </node>
      <node id="9599">
        <label>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</label>
        <link refid="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4"/>
        <childnode refid="9600" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9602">
        <label>formatter&lt; std::tm, Char &gt;</label>
        <link refid="structformatter_3_01std_1_1tm_00_01_char_01_4"/>
        <childnode refid="9603" relation="usage">
          <edgelabel>specs</edgelabel>
        </childnode>
      </node>
      <node id="9603">
        <label>basic_string_view&lt; Char &gt;</label>
      </node>
      <node id="9601">
        <label>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</label>
        <link refid="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4"/>
        <childnode refid="9602" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/fmt/chrono.h" line="406" column="1" bodyfile="/home/brain/D++/include/dpp/fmt/chrono.h" bodystart="405" bodyend="413"/>
    <listofallmembers>
      <member refid="structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4_1aa0e7df1351cc1c6f9a760c12bf9d31b0" prot="public" virt="non-virtual"><scope>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</scope><name>format</name></member>
      <member refid="structformatter_3_01std_1_1tm_00_01_char_01_4_1a0222d68c5e1ca97550eecb6cf60abed0" prot="public" virt="non-virtual" ambiguityscope="formatter&lt; std::tm, Char &gt;::"><scope>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</scope><name>format</name></member>
      <member refid="structformatter_3_01std_1_1tm_00_01_char_01_4_1a9c8caf13b1795ab3974768dc5f98a0e9" prot="public" virt="non-virtual"><scope>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</scope><name>parse</name></member>
      <member refid="structformatter_3_01std_1_1tm_00_01_char_01_4_1a57c0d36c7943de87688eeae9c3bd0b28" prot="public" virt="non-virtual"><scope>formatter&lt; std::chrono::time_point&lt; std::chrono::system_clock, Duration &gt;, Char &gt;</scope><name>specs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
