<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1guild__members__chunk__t" kind="struct" prot="public">
    <compoundname>dpp::guild_members_chunk_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1guild__members__chunk__t_1acb353498295673f3ecd5983c19558a17" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::guild_members_chunk_t::adding</definition>
        <argsstring></argsstring>
        <name>adding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="427" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1guild__members__chunk__t_1a6ede9c42c304da55461d6a7cbde4b0be" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a219aedbe5bf37835c4a65115fccba278" kindref="member">guild_member_map</ref> *</type>
        <definition>guild_member_map* dpp::guild_members_chunk_t::members</definition>
        <argsstring></argsstring>
        <name>members</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="428" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1guild__members__chunk__t_1aa40accc015feb69e1ef124daba2ecc2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::guild_members_chunk_t::guild_members_chunk_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>guild_members_chunk_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="426" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="141" bodyend="141"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Guild members chunk. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10951">
        <label>dpp::guild_members_chunk_t</label>
        <link refid="structdpp_1_1guild__members__chunk__t"/>
        <childnode refid="10952" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10952">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11032">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="10970">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="10969" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="10962" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="10971" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="10973" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="10976" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="10955" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="10979" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="10966">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="10967" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="10968" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="10996">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11011">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="10997">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="11044">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="10961" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11045" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="10955" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="11047">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="10961" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11048" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11037">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="11024">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="10973">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="10974" relation="public-inheritance">
        </childnode>
        <childnode refid="10975" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="10976" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="10977" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="10955" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="10978" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="11054">
        <label>K</label>
      </node>
      <node id="11055">
        <label>T</label>
      </node>
      <node id="10982">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="11026">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="10998">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="11028">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="11050">
        <label>region</label>
      </node>
      <node id="11053">
        <label>std::unordered_map&lt; K, T &gt;</label>
        <childnode refid="11054" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11055" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11038">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="10964">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="11052">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="10961" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="10977" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="10955" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="10957" relation="usage">
          <edgelabel>shard</edgelabel>
        </childnode>
      </node>
      <node id="10979">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="10980" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="10981" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="10982" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="10983" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="10984" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="10985" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="10986" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="10987" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="10988" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="10989" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="10990" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="10991" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="10992" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="10993" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="10994" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="10995" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="10996" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="10997" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="10998" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="10999" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="11000" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="11001" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="11002" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="11003" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="11004" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="11005" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="11006" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="11007" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="11008" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="11009" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="11010" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="11011" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="11012" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="11013" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="11014" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="11015" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="11016" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="11017" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="11018" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="11019" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="11020" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="11021" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="11022" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="11023" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="11024" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="11025" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="11026" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="11027" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="11028" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="11029" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="11030" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="11031" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="11032" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="11033" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="11034" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="11035" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="11036" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="11037" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="11038" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="11039" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="11040" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="11048">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="10962" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="10961" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="10977" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="10955" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="11049" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="10986">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="10993">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="11035">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="10961">
        <label>uint64_t</label>
      </node>
      <node id="11030">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11027">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11013">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="11007">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="10995">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="10984">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11003">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="11020">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="11017">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11040">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="10975">
        <label>uint16_t</label>
      </node>
      <node id="11005">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="10953">
        <label>dpp::guild_members_chunk_t</label>
        <link refid="structdpp_1_1guild__members__chunk__t"/>
        <childnode refid="10954" relation="public-inheritance">
        </childnode>
        <childnode refid="11046" relation="usage">
          <edgelabel>adding</edgelabel>
        </childnode>
        <childnode refid="11053" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
      </node>
      <node id="10962">
        <label>time_t</label>
      </node>
      <node id="10956">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="11039">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11016">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="11045">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="10958" relation="public-inheritance">
        </childnode>
        <childnode refid="10961" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="10962" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="10970" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="10976" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="10955" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="10965" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="11042" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="10978">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="10961" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="11015">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="11004">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="10969">
        <label>double</label>
      </node>
      <node id="10959">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="10960" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="10961" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="10962" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="10963" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="10964" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="10965" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="10955" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="10966" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="11014">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11036">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="10976">
        <label>uint32_t</label>
      </node>
      <node id="11034">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="10954">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="10955" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="10957" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="10977">
        <label>uint8_t</label>
      </node>
      <node id="11019">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="11051">
        <label>std::map&lt; snowflake, dpp::voicestate &gt;</label>
        <childnode refid="10961" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11052" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10972">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="10958">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="10959" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10971">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="10972" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="10988">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="11000">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="10985">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="11008">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="11010">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="11043">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="10961" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11044" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10960">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="11002">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10957">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="10958" relation="public-inheritance">
        </childnode>
        <childnode refid="10969" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="10961" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="10962" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="10970" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="11041" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="10976" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="10965" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="10955" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="11042" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="11043" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="11009">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="10967">
        <label>SSL *</label>
      </node>
      <node id="10974">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="10961" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="11022">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="11023">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="11031">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="10968">
        <label>SSL_CTX *</label>
      </node>
      <node id="11018">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="11041">
        <label>mutex</label>
      </node>
      <node id="11029">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10987">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="11006">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="11012">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="11025">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="10965">
        <label>bool</label>
      </node>
      <node id="10963">
        <label>SOCKET</label>
      </node>
      <node id="11046">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="10974" relation="public-inheritance">
        </childnode>
        <childnode refid="10961" relation="usage">
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="11047" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="11050" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="10975" relation="usage">
          <edgelabel>shard_id</edgelabel>
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
        </childnode>
        <childnode refid="10976" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="10977" relation="usage">
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>verification_level</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>premium_tier</edgelabel>
        </childnode>
        <childnode refid="10955" relation="usage">
          <edgelabel>vanity_url_code</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="11051" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
        <childnode refid="11049" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="10978" relation="usage">
          <edgelabel>splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
        </childnode>
      </node>
      <node id="11001">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="11033">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="10991">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="10983">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10980">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="10999">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11021">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="10981">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="10994">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="10990">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="11049">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="10961" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11042">
        <label>native_handle_type</label>
      </node>
      <node id="10992">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="10955">
        <label>std::string</label>
        <childnode refid="10956" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10989">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="421" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="421" bodyend="429"/>
    <listofallmembers>
      <member refid="structdpp_1_1guild__members__chunk__t_1acb353498295673f3ecd5983c19558a17" prot="public" virt="non-virtual"><scope>dpp::guild_members_chunk_t</scope><name>adding</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::guild_members_chunk_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::guild_members_chunk_t</scope><name>from</name></member>
      <member refid="structdpp_1_1guild__members__chunk__t_1aa40accc015feb69e1ef124daba2ecc2a" prot="public" virt="non-virtual"><scope>dpp::guild_members_chunk_t</scope><name>guild_members_chunk_t</name></member>
      <member refid="structdpp_1_1guild__members__chunk__t_1a6ede9c42c304da55461d6a7cbde4b0be" prot="public" virt="non-virtual"><scope>dpp::guild_members_chunk_t</scope><name>members</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::guild_members_chunk_t</scope><name>raw_event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
