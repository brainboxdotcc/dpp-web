<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1etf__parser" kind="class" language="C++" prot="public">
    <compoundname>dpp::etf_parser</compoundname>
    <includes local="no">etf.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdpp_1_1etf__parser_1a1d142726294e1b13238c8d5ada5d84d5" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t dpp::etf_parser::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="51" column="8" bodyfile="include/dpp/etf.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1etf__parser_1a0b80df35b6cd591a5e1d30269ef43d99" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t dpp::etf_parser::offset</definition>
        <argsstring></argsstring>
        <name>offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="53" column="8" bodyfile="include/dpp/etf.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1etf__parser_1a1b5969a81823b8938e860a0690685950" prot="private" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* dpp::etf_parser::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="55" column="9" bodyfile="include/dpp/etf.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ad041ce7bfa3431a7aaf5dc17dbf055f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::inner_parse</definition>
        <argsstring>()</argsstring>
        <name>inner_parse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="57" column="16" bodyfile="src/dpp/etf.cpp" bodystart="589" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a376b4e0440f819d27ab26e8f1ca1a816" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t dpp::etf_parser::read8</definition>
        <argsstring>()</argsstring>
        <name>read8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="59" column="9" bodyfile="src/dpp/etf.cpp" bodystart="242" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1abee70a22e708a789c484b03bfebb560e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t dpp::etf_parser::read16</definition>
        <argsstring>()</argsstring>
        <name>read16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="61" column="10" bodyfile="src/dpp/etf.cpp" bodystart="251" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ae2da80db247469d2207e1ffbcf550c86" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t dpp::etf_parser::read32</definition>
        <argsstring>()</argsstring>
        <name>read32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="63" column="10" bodyfile="src/dpp/etf.cpp" bodystart="260" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a6110651704744314e28433f6a662c4db" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t dpp::etf_parser::read64</definition>
        <argsstring>()</argsstring>
        <name>read64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="65" column="10" bodyfile="src/dpp/etf.cpp" bodystart="269" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a267f3be97e97780b3298bf8b32cb68c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * dpp::etf_parser::readString</definition>
        <argsstring>(uint32_t length)</argsstring>
        <name>readString</name>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="67" column="12" bodyfile="src/dpp/etf.cpp" bodystart="278" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a484246396a4bc66c97b51ba521247660" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::processAtom</definition>
        <argsstring>(const char *atom, uint16_t length)</argsstring>
        <name>processAtom</name>
        <param>
          <type>const char *</type>
          <declname>atom</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="69" column="16" bodyfile="src/dpp/etf.cpp" bodystart="288" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a18f9258e2e8ae29af9347fb6fa492f8c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeAtom</definition>
        <argsstring>()</argsstring>
        <name>decodeAtom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="70" column="16" bodyfile="src/dpp/etf.cpp" bodystart="316" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1abac4ba9566d385e5099fa47e7bfd7960" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeSmallAtom</definition>
        <argsstring>()</argsstring>
        <name>decodeSmallAtom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="71" column="16" bodyfile="src/dpp/etf.cpp" bodystart="322" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a75003ba22c763245f675097357a9a626" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeSmallInteger</definition>
        <argsstring>()</argsstring>
        <name>decodeSmallInteger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="72" column="16" bodyfile="src/dpp/etf.cpp" bodystart="328" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1af9d4309df653ed38085c6d09f36ba7c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeInteger</definition>
        <argsstring>()</argsstring>
        <name>decodeInteger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="73" column="16" bodyfile="src/dpp/etf.cpp" bodystart="334" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a9cc6a8c98e707582a4c4f818ac2df8d2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeArray</definition>
        <argsstring>(uint32_t length)</argsstring>
        <name>decodeArray</name>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="74" column="16" bodyfile="src/dpp/etf.cpp" bodystart="340" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a55d4a40d3f9f64a833a1702299235b6e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeList</definition>
        <argsstring>()</argsstring>
        <name>decodeList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="75" column="16" bodyfile="src/dpp/etf.cpp" bodystart="348" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a763cad886a70faa1641dcf067fdade7a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeTuple</definition>
        <argsstring>(uint32_t length)</argsstring>
        <name>decodeTuple</name>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="76" column="16" bodyfile="src/dpp/etf.cpp" bodystart="360" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ad357b2a39207256865d0edf69accc23c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeNil</definition>
        <argsstring>()</argsstring>
        <name>decodeNil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="77" column="16" bodyfile="src/dpp/etf.cpp" bodystart="364" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ac008624a711c234c2b143eab6daecf5c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeMap</definition>
        <argsstring>()</argsstring>
        <name>decodeMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="78" column="16" bodyfile="src/dpp/etf.cpp" bodystart="368" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ab126185994c9ae325b7670b3846f59c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeFloat</definition>
        <argsstring>()</argsstring>
        <name>decodeFloat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="79" column="16" bodyfile="src/dpp/etf.cpp" bodystart="383" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1adae44b56ccce32934040bb1bfc1db74d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeNewFloat</definition>
        <argsstring>()</argsstring>
        <name>decodeNewFloat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="80" column="16" bodyfile="src/dpp/etf.cpp" bodystart="407" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a2a1234fc3a7edf32fe558b67a221d318" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeBig</definition>
        <argsstring>(uint32_t digits)</argsstring>
        <name>decodeBig</name>
        <param>
          <type>uint32_t</type>
          <declname>digits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="81" column="16" bodyfile="src/dpp/etf.cpp" bodystart="417" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a7da34ee75065371ec705edb75b1d4c18" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeSmallBig</definition>
        <argsstring>()</argsstring>
        <name>decodeSmallBig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="82" column="16" bodyfile="src/dpp/etf.cpp" bodystart="458" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ab49bc49d3379caca652c76316a69e745" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeLargeBig</definition>
        <argsstring>()</argsstring>
        <name>decodeLargeBig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="83" column="16" bodyfile="src/dpp/etf.cpp" bodystart="463" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a7178670702814cd27d47d2adba76cf66" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeBinaryAsString</definition>
        <argsstring>()</argsstring>
        <name>decodeBinaryAsString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="84" column="16" bodyfile="src/dpp/etf.cpp" bodystart="468" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ab0ed37a085c3ea1e0e37eee51ae20b47" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeString</definition>
        <argsstring>()</argsstring>
        <name>decodeString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="85" column="16" bodyfile="src/dpp/etf.cpp" bodystart="479" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ae8409669fb67d6304df9002851ef8c78" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeStringAsList</definition>
        <argsstring>()</argsstring>
        <name>decodeStringAsList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="86" column="16" bodyfile="src/dpp/etf.cpp" bodystart="489" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a0d246f8aeafec952e14fe13186cad62b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeSmallTuple</definition>
        <argsstring>()</argsstring>
        <name>decodeSmallTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="87" column="16" bodyfile="src/dpp/etf.cpp" bodystart="501" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ad5565e524f0ca206337ee89547fab4ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeLargeTuple</definition>
        <argsstring>()</argsstring>
        <name>decodeLargeTuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="88" column="16" bodyfile="src/dpp/etf.cpp" bodystart="505" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a3f25f2e04fc46d20dc346a30840cfa33" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeCompressed</definition>
        <argsstring>()</argsstring>
        <name>decodeCompressed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="89" column="16" bodyfile="src/dpp/etf.cpp" bodystart="509" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1abb9f8f810d2820dfb5bc8f761c6e7724" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeReference</definition>
        <argsstring>()</argsstring>
        <name>decodeReference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="90" column="16" bodyfile="src/dpp/etf.cpp" bodystart="534" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a6c84b075218efe516db693a2a0d1d12e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeNewReference</definition>
        <argsstring>()</argsstring>
        <name>decodeNewReference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="91" column="16" bodyfile="src/dpp/etf.cpp" bodystart="548" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a7a6ba1efcef1e0aa5b644c12bfbad4a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodePort</definition>
        <argsstring>()</argsstring>
        <name>decodePort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="92" column="16" bodyfile="src/dpp/etf.cpp" bodystart="564" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a852929985a3dabb4a674957fc790e064" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodePID</definition>
        <argsstring>()</argsstring>
        <name>decodePID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="93" column="16" bodyfile="src/dpp/etf.cpp" bodystart="572" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a45f28cf40a86516dab6f7a4c271dfb40" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decodeExport</definition>
        <argsstring>()</argsstring>
        <name>decodeExport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="94" column="16" bodyfile="src/dpp/etf.cpp" bodystart="581" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ac9e9e7e22e4e6fbf16836e4a7ad94058" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_buffer_write</definition>
        <argsstring>(erlpack_buffer *pk, const char *bytes, size_t l)</argsstring>
        <name>erlpack_buffer_write</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>pk</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="96" column="6" bodyfile="src/dpp/etf.cpp" bodystart="63" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1af58d3a90d8fa215368e7f83485ef1b77" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_version</definition>
        <argsstring>(erlpack_buffer *b)</argsstring>
        <name>erlpack_append_version</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="98" column="6" bodyfile="src/dpp/etf.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a1a5d89a2b7f48b299f191a42ff2fa39c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_nil</definition>
        <argsstring>(erlpack_buffer *b)</argsstring>
        <name>erlpack_append_nil</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="100" column="6" bodyfile="src/dpp/etf.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a7551f422a7b1a5dfc5d30bd89e86468e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_false</definition>
        <argsstring>(erlpack_buffer *b)</argsstring>
        <name>erlpack_append_false</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="102" column="6" bodyfile="src/dpp/etf.cpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a96ae90790c448107b741bb7a571be4d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_true</definition>
        <argsstring>(erlpack_buffer *b)</argsstring>
        <name>erlpack_append_true</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="104" column="6" bodyfile="src/dpp/etf.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a72088e9d62614b80c835470964b12337" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_small_integer</definition>
        <argsstring>(erlpack_buffer *b, unsigned char d)</argsstring>
        <name>erlpack_append_small_integer</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="106" column="6" bodyfile="src/dpp/etf.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1aeb3baf2005e7f52d7e796ddbd46d445e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_integer</definition>
        <argsstring>(erlpack_buffer *b, int32_t d)</argsstring>
        <name>erlpack_append_integer</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="108" column="6" bodyfile="src/dpp/etf.cpp" bodystart="99" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a09d96f8ba6da62d1479be255e6779a0d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_unsigned_long_long</definition>
        <argsstring>(erlpack_buffer *b, unsigned long long d)</argsstring>
        <name>erlpack_append_unsigned_long_long</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="110" column="6" bodyfile="src/dpp/etf.cpp" bodystart="106" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a2c3a091b50436d795b36d58f4e4e8974" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_long_long</definition>
        <argsstring>(erlpack_buffer *b, long long d)</argsstring>
        <name>erlpack_append_long_long</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>long long</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="112" column="6" bodyfile="src/dpp/etf.cpp" bodystart="122" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a7e9dc054acb11f7d63451aa3c7460617" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_double</definition>
        <argsstring>(erlpack_buffer *b, double f)</argsstring>
        <name>erlpack_append_double</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="114" column="6" bodyfile="src/dpp/etf.cpp" bodystart="137" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1aacacd69102e5798244e7dbbadc8f89b0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_atom</definition>
        <argsstring>(erlpack_buffer *b, const char *bytes, size_t size)</argsstring>
        <name>erlpack_append_atom</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="116" column="6" bodyfile="src/dpp/etf.cpp" bodystart="146" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a184504648e04a32b28625c2ec584159f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_atom_utf8</definition>
        <argsstring>(erlpack_buffer *b, const char *bytes, size_t size)</argsstring>
        <name>erlpack_append_atom_utf8</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="118" column="6" bodyfile="src/dpp/etf.cpp" bodystart="165" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a8067a7def93b703d8ecb6f2fed78ab66" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_binary</definition>
        <argsstring>(erlpack_buffer *b, const char *bytes, size_t size)</argsstring>
        <name>erlpack_append_binary</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="120" column="6" bodyfile="src/dpp/etf.cpp" bodystart="184" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a1d3d2695efc7892d1bb05e1dde6d0da0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_string</definition>
        <argsstring>(erlpack_buffer *b, const char *bytes, size_t size)</argsstring>
        <name>erlpack_append_string</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="122" column="6" bodyfile="src/dpp/etf.cpp" bodystart="193" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a7f1f3c0ea521b13ea1df853cfeaebd72" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_tuple_header</definition>
        <argsstring>(erlpack_buffer *b, size_t size)</argsstring>
        <name>erlpack_append_tuple_header</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="124" column="6" bodyfile="src/dpp/etf.cpp" bodystart="202" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a5851c4b0e6b5c123df04aabd3b320d95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_nil_ext</definition>
        <argsstring>(erlpack_buffer *b)</argsstring>
        <name>erlpack_append_nil_ext</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="126" column="6" bodyfile="src/dpp/etf.cpp" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a915bf27794f4661f1b32c6292f6710a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_list_header</definition>
        <argsstring>(erlpack_buffer *b, size_t size)</argsstring>
        <name>erlpack_append_list_header</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="128" column="6" bodyfile="src/dpp/etf.cpp" bodystart="221" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ad6c510dd4b45edb15e8bc763d30f2b4f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::erlpack_append_map_header</definition>
        <argsstring>(erlpack_buffer *b, size_t size)</argsstring>
        <name>erlpack_append_map_header</name>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="130" column="6" bodyfile="src/dpp/etf.cpp" bodystart="228" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a5fd3ad0c30af6014e36ec2b5bad1a09f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::inner_build</definition>
        <argsstring>(const nlohmann::json *j, erlpack_buffer *b)</argsstring>
        <name>inner_build</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structdpp_1_1erlpack__buffer" kindref="compound">erlpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="132" column="6" bodyfile="src/dpp/etf.cpp" bodystart="678" bodyend="742"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a1fda89db96ffa12c3f922ece4c099a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::etf_parser::etf_parser</definition>
        <argsstring>()</argsstring>
        <name>etf_parser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="136" column="1" bodyfile="src/dpp/etf.cpp" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1abf03b044d5a883cac5816a4c93df3688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::etf_parser::~etf_parser</definition>
        <argsstring>()</argsstring>
        <name>~etf_parser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a16b91fa9e1e2024d5cb390b293c4238f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::parse</definition>
        <argsstring>(const std::string &amp;in)</argsstring>
        <name>parse</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="141" column="16" bodyfile="src/dpp/etf.cpp" bodystart="666" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a9c074f9ccd302a8eae2ffe3d19c9adc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::etf_parser::build</definition>
        <argsstring>(const nlohmann::json &amp;j)</argsstring>
        <name>build</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="143" column="13" bodyfile="src/dpp/etf.cpp" bodystart="744" bodyend="751"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classdpp_1_1etf__parser" kindref="compound">etf_parser</ref> class can serialise and deserialise ETF (Erlang Term Format) into and out of an nlohmann::json object, so that layers above the websocket don&apos;t have to be any different for handling ETF. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dpp/etf.h" line="49" column="1" bodyfile="include/dpp/etf.h" bodystart="49" bodyend="144"/>
    <listofallmembers>
      <member refid="classdpp_1_1etf__parser_1a9c074f9ccd302a8eae2ffe3d19c9adc0" prot="public" virt="non-virtual"><scope>dpp::etf_parser</scope><name>build</name></member>
      <member refid="classdpp_1_1etf__parser_1a1b5969a81823b8938e860a0690685950" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>data</name></member>
      <member refid="classdpp_1_1etf__parser_1a9cc6a8c98e707582a4c4f818ac2df8d2" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeArray</name></member>
      <member refid="classdpp_1_1etf__parser_1a18f9258e2e8ae29af9347fb6fa492f8c" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeAtom</name></member>
      <member refid="classdpp_1_1etf__parser_1a2a1234fc3a7edf32fe558b67a221d318" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeBig</name></member>
      <member refid="classdpp_1_1etf__parser_1a7178670702814cd27d47d2adba76cf66" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeBinaryAsString</name></member>
      <member refid="classdpp_1_1etf__parser_1a3f25f2e04fc46d20dc346a30840cfa33" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeCompressed</name></member>
      <member refid="classdpp_1_1etf__parser_1a45f28cf40a86516dab6f7a4c271dfb40" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeExport</name></member>
      <member refid="classdpp_1_1etf__parser_1ab126185994c9ae325b7670b3846f59c5" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeFloat</name></member>
      <member refid="classdpp_1_1etf__parser_1af9d4309df653ed38085c6d09f36ba7c3" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeInteger</name></member>
      <member refid="classdpp_1_1etf__parser_1ab49bc49d3379caca652c76316a69e745" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeLargeBig</name></member>
      <member refid="classdpp_1_1etf__parser_1ad5565e524f0ca206337ee89547fab4ac" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeLargeTuple</name></member>
      <member refid="classdpp_1_1etf__parser_1a55d4a40d3f9f64a833a1702299235b6e" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeList</name></member>
      <member refid="classdpp_1_1etf__parser_1ac008624a711c234c2b143eab6daecf5c" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeMap</name></member>
      <member refid="classdpp_1_1etf__parser_1adae44b56ccce32934040bb1bfc1db74d" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeNewFloat</name></member>
      <member refid="classdpp_1_1etf__parser_1a6c84b075218efe516db693a2a0d1d12e" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeNewReference</name></member>
      <member refid="classdpp_1_1etf__parser_1ad357b2a39207256865d0edf69accc23c" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeNil</name></member>
      <member refid="classdpp_1_1etf__parser_1a852929985a3dabb4a674957fc790e064" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodePID</name></member>
      <member refid="classdpp_1_1etf__parser_1a7a6ba1efcef1e0aa5b644c12bfbad4a7" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodePort</name></member>
      <member refid="classdpp_1_1etf__parser_1abb9f8f810d2820dfb5bc8f761c6e7724" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeReference</name></member>
      <member refid="classdpp_1_1etf__parser_1abac4ba9566d385e5099fa47e7bfd7960" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeSmallAtom</name></member>
      <member refid="classdpp_1_1etf__parser_1a7da34ee75065371ec705edb75b1d4c18" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeSmallBig</name></member>
      <member refid="classdpp_1_1etf__parser_1a75003ba22c763245f675097357a9a626" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeSmallInteger</name></member>
      <member refid="classdpp_1_1etf__parser_1a0d246f8aeafec952e14fe13186cad62b" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeSmallTuple</name></member>
      <member refid="classdpp_1_1etf__parser_1ab0ed37a085c3ea1e0e37eee51ae20b47" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeString</name></member>
      <member refid="classdpp_1_1etf__parser_1ae8409669fb67d6304df9002851ef8c78" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeStringAsList</name></member>
      <member refid="classdpp_1_1etf__parser_1a763cad886a70faa1641dcf067fdade7a" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decodeTuple</name></member>
      <member refid="classdpp_1_1etf__parser_1aacacd69102e5798244e7dbbadc8f89b0" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_atom</name></member>
      <member refid="classdpp_1_1etf__parser_1a184504648e04a32b28625c2ec584159f" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_atom_utf8</name></member>
      <member refid="classdpp_1_1etf__parser_1a8067a7def93b703d8ecb6f2fed78ab66" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_binary</name></member>
      <member refid="classdpp_1_1etf__parser_1a7e9dc054acb11f7d63451aa3c7460617" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_double</name></member>
      <member refid="classdpp_1_1etf__parser_1a7551f422a7b1a5dfc5d30bd89e86468e" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_false</name></member>
      <member refid="classdpp_1_1etf__parser_1aeb3baf2005e7f52d7e796ddbd46d445e" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_integer</name></member>
      <member refid="classdpp_1_1etf__parser_1a915bf27794f4661f1b32c6292f6710a0" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_list_header</name></member>
      <member refid="classdpp_1_1etf__parser_1a2c3a091b50436d795b36d58f4e4e8974" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_long_long</name></member>
      <member refid="classdpp_1_1etf__parser_1ad6c510dd4b45edb15e8bc763d30f2b4f" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_map_header</name></member>
      <member refid="classdpp_1_1etf__parser_1a1a5d89a2b7f48b299f191a42ff2fa39c" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_nil</name></member>
      <member refid="classdpp_1_1etf__parser_1a5851c4b0e6b5c123df04aabd3b320d95" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_nil_ext</name></member>
      <member refid="classdpp_1_1etf__parser_1a72088e9d62614b80c835470964b12337" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_small_integer</name></member>
      <member refid="classdpp_1_1etf__parser_1a1d3d2695efc7892d1bb05e1dde6d0da0" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_string</name></member>
      <member refid="classdpp_1_1etf__parser_1a96ae90790c448107b741bb7a571be4d7" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_true</name></member>
      <member refid="classdpp_1_1etf__parser_1a7f1f3c0ea521b13ea1df853cfeaebd72" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_tuple_header</name></member>
      <member refid="classdpp_1_1etf__parser_1a09d96f8ba6da62d1479be255e6779a0d" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_unsigned_long_long</name></member>
      <member refid="classdpp_1_1etf__parser_1af58d3a90d8fa215368e7f83485ef1b77" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_append_version</name></member>
      <member refid="classdpp_1_1etf__parser_1ac9e9e7e22e4e6fbf16836e4a7ad94058" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>erlpack_buffer_write</name></member>
      <member refid="classdpp_1_1etf__parser_1a1fda89db96ffa12c3f922ece4c099a92" prot="public" virt="non-virtual"><scope>dpp::etf_parser</scope><name>etf_parser</name></member>
      <member refid="classdpp_1_1etf__parser_1a5fd3ad0c30af6014e36ec2b5bad1a09f" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>inner_build</name></member>
      <member refid="classdpp_1_1etf__parser_1ad041ce7bfa3431a7aaf5dc17dbf055f0" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>inner_parse</name></member>
      <member refid="classdpp_1_1etf__parser_1a0b80df35b6cd591a5e1d30269ef43d99" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>offset</name></member>
      <member refid="classdpp_1_1etf__parser_1a16b91fa9e1e2024d5cb390b293c4238f" prot="public" virt="non-virtual"><scope>dpp::etf_parser</scope><name>parse</name></member>
      <member refid="classdpp_1_1etf__parser_1a484246396a4bc66c97b51ba521247660" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>processAtom</name></member>
      <member refid="classdpp_1_1etf__parser_1abee70a22e708a789c484b03bfebb560e" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>read16</name></member>
      <member refid="classdpp_1_1etf__parser_1ae2da80db247469d2207e1ffbcf550c86" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>read32</name></member>
      <member refid="classdpp_1_1etf__parser_1a6110651704744314e28433f6a662c4db" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>read64</name></member>
      <member refid="classdpp_1_1etf__parser_1a376b4e0440f819d27ab26e8f1ca1a816" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>read8</name></member>
      <member refid="classdpp_1_1etf__parser_1a267f3be97e97780b3298bf8b32cb68c5" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>readString</name></member>
      <member refid="classdpp_1_1etf__parser_1a1d142726294e1b13238c8d5ada5d84d5" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>size</name></member>
      <member refid="classdpp_1_1etf__parser_1abf03b044d5a883cac5816a4c93df3688" prot="public" virt="non-virtual"><scope>dpp::etf_parser</scope><name>~etf_parser</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
