<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1etf__parser" kind="class" language="C++" prot="public">
    <compoundname>dpp::etf_parser</compoundname>
    <includes local="no">etf.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a1fda89db96ffa12c3f922ece4c099a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::etf_parser::etf_parser</definition>
        <argsstring>()</argsstring>
        <name>etf_parser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="37" column="1" bodyfile="src/dpp/etf.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1abf03b044d5a883cac5816a4c93df3688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::etf_parser::~etf_parser</definition>
        <argsstring>()</argsstring>
        <name>~etf_parser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a3b2b3a2520099ae3a49ffd660a3375ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::parse</definition>
        <argsstring>(const std::string &amp;data, nlohmann::json &amp;j)</argsstring>
        <name>parse</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="42" column="6" bodyfile="src/dpp/etf.cpp" bodystart="36" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a9c074f9ccd302a8eae2ffe3d19c9adc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::etf_parser::build</definition>
        <argsstring>(const nlohmann::json &amp;j)</argsstring>
        <name>build</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="44" column="13" bodyfile="src/dpp/etf.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classdpp_1_1etf__parser" kindref="compound">etf_parser</ref> class can serialise and deserialise ETF (Erlang Term Format) into and out of an nlohmann::json object, so that layers above the websocket don&apos;t have to be any different for handling ETF. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dpp/etf.h" line="34" column="1" bodyfile="include/dpp/etf.h" bodystart="34" bodyend="45"/>
    <listofallmembers>
      <member refid="classdpp_1_1etf__parser_1a9c074f9ccd302a8eae2ffe3d19c9adc0" prot="public" virt="non-virtual"><scope>dpp::etf_parser</scope><name>build</name></member>
      <member refid="classdpp_1_1etf__parser_1a1fda89db96ffa12c3f922ece4c099a92" prot="public" virt="non-virtual"><scope>dpp::etf_parser</scope><name>etf_parser</name></member>
      <member refid="classdpp_1_1etf__parser_1a3b2b3a2520099ae3a49ffd660a3375ef" prot="public" virt="non-virtual"><scope>dpp::etf_parser</scope><name>parse</name></member>
      <member refid="classdpp_1_1etf__parser_1abf03b044d5a883cac5816a4c93df3688" prot="public" virt="non-virtual"><scope>dpp::etf_parser</scope><name>~etf_parser</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
