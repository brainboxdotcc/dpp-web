<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1etf__parser" kind="class" language="C++" prot="public">
    <compoundname>dpp::etf_parser</compoundname>
    <includes local="no">etf.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdpp_1_1etf__parser_1a1d142726294e1b13238c8d5ada5d84d5" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t dpp::etf_parser::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="81" column="8" bodyfile="include/dpp/etf.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1etf__parser_1a0b80df35b6cd591a5e1d30269ef43d99" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t dpp::etf_parser::offset</definition>
        <argsstring></argsstring>
        <name>offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="83" column="8" bodyfile="include/dpp/etf.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1etf__parser_1a1b5969a81823b8938e860a0690685950" prot="private" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* dpp::etf_parser::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="85" column="9" bodyfile="include/dpp/etf.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ad041ce7bfa3431a7aaf5dc17dbf055f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::inner_parse</definition>
        <argsstring>()</argsstring>
        <name>inner_parse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="87" column="16" bodyfile="src/dpp/etf.cpp" bodystart="561" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ae62dbad0512e2bd5372f243ab81f82ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t dpp::etf_parser::read_8_bits</definition>
        <argsstring>()</argsstring>
        <name>read_8_bits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="89" column="9" bodyfile="src/dpp/etf.cpp" bodystart="214" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a407ca5ef650785330af6be9d1654d729" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t dpp::etf_parser::read_16_bits</definition>
        <argsstring>()</argsstring>
        <name>read_16_bits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="91" column="10" bodyfile="src/dpp/etf.cpp" bodystart="223" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a5c0388db5aef8f93c1a5d9e9b806dfa0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t dpp::etf_parser::read_32_bits</definition>
        <argsstring>()</argsstring>
        <name>read_32_bits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="93" column="10" bodyfile="src/dpp/etf.cpp" bodystart="232" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a8ca03fce713d3cba5f8b32d83e3d61ea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t dpp::etf_parser::read_64_bits</definition>
        <argsstring>()</argsstring>
        <name>read_64_bits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="95" column="10" bodyfile="src/dpp/etf.cpp" bodystart="241" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ac83d5a9f6df2649b5aaf9fc3f91c1902" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * dpp::etf_parser::read_string</definition>
        <argsstring>(uint32_t length)</argsstring>
        <name>read_string</name>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="97" column="12" bodyfile="src/dpp/etf.cpp" bodystart="250" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a3cda25969eda0ceff4cd292e90c5c4fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::process_atom</definition>
        <argsstring>(const char *atom, uint16_t length)</argsstring>
        <name>process_atom</name>
        <param>
          <type>const char *</type>
          <declname>atom</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="99" column="16" bodyfile="src/dpp/etf.cpp" bodystart="260" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a747485967f92bab65bee8db90c3eda54" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_atom</definition>
        <argsstring>()</argsstring>
        <name>decode_atom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="100" column="16" bodyfile="src/dpp/etf.cpp" bodystart="288" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a4f46e6660f389b3cd1f9b1c45d03e809" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_small_atom</definition>
        <argsstring>()</argsstring>
        <name>decode_small_atom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="101" column="16" bodyfile="src/dpp/etf.cpp" bodystart="294" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a978d1edd1685405a7c6d10c840dbb4fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_small_integer</definition>
        <argsstring>()</argsstring>
        <name>decode_small_integer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="102" column="16" bodyfile="src/dpp/etf.cpp" bodystart="300" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1aa649bdd2162396fe329a9b19f46b4254" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_integer</definition>
        <argsstring>()</argsstring>
        <name>decode_integer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="103" column="16" bodyfile="src/dpp/etf.cpp" bodystart="306" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a18f60dde0715b34e6cb9504f233c3dd6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_array</definition>
        <argsstring>(uint32_t length)</argsstring>
        <name>decode_array</name>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="104" column="16" bodyfile="src/dpp/etf.cpp" bodystart="312" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a79bb865d014dc48c9f84fe977960e2bd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_list</definition>
        <argsstring>()</argsstring>
        <name>decode_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="105" column="16" bodyfile="src/dpp/etf.cpp" bodystart="320" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a4ef7545a9646952f50bce39868f2122d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_tuple</definition>
        <argsstring>(uint32_t length)</argsstring>
        <name>decode_tuple</name>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="106" column="16" bodyfile="src/dpp/etf.cpp" bodystart="332" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a35e273d951a94d78d2ece636a61f9f12" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_nil</definition>
        <argsstring>()</argsstring>
        <name>decode_nil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="107" column="16" bodyfile="src/dpp/etf.cpp" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1aa718d9cd0c2b578b612a9926f0fc52b6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_map</definition>
        <argsstring>()</argsstring>
        <name>decode_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="108" column="16" bodyfile="src/dpp/etf.cpp" bodystart="340" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a0c28839df67f0e60ea6e71696d508aa4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_float</definition>
        <argsstring>()</argsstring>
        <name>decode_float</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="109" column="16" bodyfile="src/dpp/etf.cpp" bodystart="355" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a461839e26b19b5c4b5009784ee7c1a3f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_new_float</definition>
        <argsstring>()</argsstring>
        <name>decode_new_float</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="110" column="16" bodyfile="src/dpp/etf.cpp" bodystart="379" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a7f869015e42c8987ae26a5febfb0092f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_bigint</definition>
        <argsstring>(uint32_t digits)</argsstring>
        <name>decode_bigint</name>
        <param>
          <type>uint32_t</type>
          <declname>digits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="111" column="16" bodyfile="src/dpp/etf.cpp" bodystart="389" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a6a50437eb54bfa98bb07953a3a0fc7e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_bigint_small</definition>
        <argsstring>()</argsstring>
        <name>decode_bigint_small</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="112" column="16" bodyfile="src/dpp/etf.cpp" bodystart="430" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a2566cff11f5b539ab11691f9cc4df2b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_bigint_large</definition>
        <argsstring>()</argsstring>
        <name>decode_bigint_large</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="113" column="16" bodyfile="src/dpp/etf.cpp" bodystart="435" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1affc11fe706d363dd29550b0dc2052b4b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_binary</definition>
        <argsstring>()</argsstring>
        <name>decode_binary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="114" column="16" bodyfile="src/dpp/etf.cpp" bodystart="440" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1addfe7bab3d972ba803b2b27a98fbeba6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_string</definition>
        <argsstring>()</argsstring>
        <name>decode_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="115" column="16" bodyfile="src/dpp/etf.cpp" bodystart="451" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ac4d0324e9d690eccc2e0897182b40e8a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_stringAsList</definition>
        <argsstring>()</argsstring>
        <name>decode_stringAsList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="116" column="16" bodyfile="src/dpp/etf.cpp" bodystart="461" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a4acd4adba92eacc16363f468cf28be02" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_tuple_small</definition>
        <argsstring>()</argsstring>
        <name>decode_tuple_small</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="117" column="16" bodyfile="src/dpp/etf.cpp" bodystart="473" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a9912918cdaaf14495c326be55ff58b58" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_tuple_large</definition>
        <argsstring>()</argsstring>
        <name>decode_tuple_large</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="118" column="16" bodyfile="src/dpp/etf.cpp" bodystart="477" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1abf06e36d7b9021e890217e2785720922" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_compressed</definition>
        <argsstring>()</argsstring>
        <name>decode_compressed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="119" column="16" bodyfile="src/dpp/etf.cpp" bodystart="481" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a00672ac9194dc1f8c507271f9b19bc3c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_reference</definition>
        <argsstring>()</argsstring>
        <name>decode_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="120" column="16" bodyfile="src/dpp/etf.cpp" bodystart="506" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a8bad87d12e83a76e2a248fa6f480bd4a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_new_reference</definition>
        <argsstring>()</argsstring>
        <name>decode_new_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="121" column="16" bodyfile="src/dpp/etf.cpp" bodystart="520" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1acaa6dd830d69c03dcef1a0f9e35a85ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_port</definition>
        <argsstring>()</argsstring>
        <name>decode_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="122" column="16" bodyfile="src/dpp/etf.cpp" bodystart="536" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a6903e4a9817c8bfd2521f20a18e9db7c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_pid</definition>
        <argsstring>()</argsstring>
        <name>decode_pid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="123" column="16" bodyfile="src/dpp/etf.cpp" bodystart="544" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a310c409349c82db897ac226ef04fd713" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::decode_export</definition>
        <argsstring>()</argsstring>
        <name>decode_export</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="124" column="16" bodyfile="src/dpp/etf.cpp" bodystart="553" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a95b0046624f88ae59d3f483728d9d0b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::buffer_write</definition>
        <argsstring>(etf_buffer *pk, const char *bytes, size_t l)</argsstring>
        <name>buffer_write</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>pk</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="126" column="6" bodyfile="src/dpp/etf.cpp" bodystart="35" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ae9beba8cfe1c35806f40dbdc7d190403" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_version</definition>
        <argsstring>(etf_buffer *b)</argsstring>
        <name>append_version</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="128" column="6" bodyfile="src/dpp/etf.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ae278aba7de419601695c4e74826214d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_nil</definition>
        <argsstring>(etf_buffer *b)</argsstring>
        <name>append_nil</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="130" column="6" bodyfile="src/dpp/etf.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a6ba2c938440bbbfe2ca04a42b5d61f5f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_false</definition>
        <argsstring>(etf_buffer *b)</argsstring>
        <name>append_false</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="132" column="6" bodyfile="src/dpp/etf.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a4646ee5a5eec58c6dffe1b4d8a92eeb4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_true</definition>
        <argsstring>(etf_buffer *b)</argsstring>
        <name>append_true</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="134" column="6" bodyfile="src/dpp/etf.cpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1aa30fb150fa781c3d7dd9751a81f9b28d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_small_integer</definition>
        <argsstring>(etf_buffer *b, unsigned char d)</argsstring>
        <name>append_small_integer</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="136" column="6" bodyfile="src/dpp/etf.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1adfb336ced272f026e931221ae1303126" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_integer</definition>
        <argsstring>(etf_buffer *b, int32_t d)</argsstring>
        <name>append_integer</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="138" column="6" bodyfile="src/dpp/etf.cpp" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ac25fdf66bb5f7216cba9e70cabf8a484" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_unsigned_long_long</definition>
        <argsstring>(etf_buffer *b, unsigned long long d)</argsstring>
        <name>append_unsigned_long_long</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="140" column="6" bodyfile="src/dpp/etf.cpp" bodystart="78" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a9103fde0a34d053adad08974b1ee2e2c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_long_long</definition>
        <argsstring>(etf_buffer *b, long long d)</argsstring>
        <name>append_long_long</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>long long</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="142" column="6" bodyfile="src/dpp/etf.cpp" bodystart="94" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1aad86d9ac2f2baf85bb0041631c549560" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_double</definition>
        <argsstring>(etf_buffer *b, double f)</argsstring>
        <name>append_double</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="144" column="6" bodyfile="src/dpp/etf.cpp" bodystart="109" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a7c1c3f85a5e6d2d0c724c2d3fade22ba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_atom</definition>
        <argsstring>(etf_buffer *b, const char *bytes, size_t size)</argsstring>
        <name>append_atom</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="146" column="6" bodyfile="src/dpp/etf.cpp" bodystart="118" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1ab0d97b706d48a022101f734c0d4a979f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_atom_utf8</definition>
        <argsstring>(etf_buffer *b, const char *bytes, size_t size)</argsstring>
        <name>append_atom_utf8</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="148" column="6" bodyfile="src/dpp/etf.cpp" bodystart="137" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1aba3d013ff4167fcb8989abf1eb081a23" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_binary</definition>
        <argsstring>(etf_buffer *b, const char *bytes, size_t size)</argsstring>
        <name>append_binary</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="150" column="6" bodyfile="src/dpp/etf.cpp" bodystart="156" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a1774505ade9ddea5b194b631d43c5881" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_string</definition>
        <argsstring>(etf_buffer *b, const char *bytes, size_t size)</argsstring>
        <name>append_string</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="152" column="6" bodyfile="src/dpp/etf.cpp" bodystart="165" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a323f9f6be5a94b883dd3cc34b57e49b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_tuple_header</definition>
        <argsstring>(etf_buffer *b, size_t size)</argsstring>
        <name>append_tuple_header</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="154" column="6" bodyfile="src/dpp/etf.cpp" bodystart="174" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a9105afad81f956d629555c0ccc9205bb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_nil_ext</definition>
        <argsstring>(etf_buffer *b)</argsstring>
        <name>append_nil_ext</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="156" column="6" bodyfile="src/dpp/etf.cpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a61836185002e9119e02cf938a39d4c0f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_list_header</definition>
        <argsstring>(etf_buffer *b, size_t size)</argsstring>
        <name>append_list_header</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="158" column="6" bodyfile="src/dpp/etf.cpp" bodystart="193" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a27254eafc57ea2ef5bd6febb17e48e12" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::append_map_header</definition>
        <argsstring>(etf_buffer *b, size_t size)</argsstring>
        <name>append_map_header</name>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="160" column="6" bodyfile="src/dpp/etf.cpp" bodystart="200" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a59de2b005efa93b208b35cf4b5afaf5e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::etf_parser::inner_build</definition>
        <argsstring>(const nlohmann::json *j, etf_buffer *b)</argsstring>
        <name>inner_build</name>
        <param>
          <type>const nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="structdpp_1_1etf__buffer" kindref="compound">etf_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="162" column="6" bodyfile="src/dpp/etf.cpp" bodystart="630" bodyend="700"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a1fda89db96ffa12c3f922ece4c099a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::etf_parser::etf_parser</definition>
        <argsstring>()</argsstring>
        <name>etf_parser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="166" column="1" bodyfile="src/dpp/etf.cpp" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1abf03b044d5a883cac5816a4c93df3688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::etf_parser::~etf_parser</definition>
        <argsstring>()</argsstring>
        <name>~etf_parser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a16b91fa9e1e2024d5cb390b293c4238f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>json dpp::etf_parser::parse</definition>
        <argsstring>(const std::string &amp;in)</argsstring>
        <name>parse</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="171" column="16" bodyfile="src/dpp/etf.cpp" bodystart="617" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1etf__parser_1a9c074f9ccd302a8eae2ffe3d19c9adc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::etf_parser::build</definition>
        <argsstring>(const nlohmann::json &amp;j)</argsstring>
        <name>build</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/etf.h" line="173" column="13" bodyfile="src/dpp/etf.cpp" bodystart="702" bodyend="707"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classdpp_1_1etf__parser" kindref="compound">etf_parser</ref> class can serialise and deserialise ETF (Erlang Term Format) into and out of an nlohmann::json object, so that layers above the websocket don&apos;t have to be any different for handling ETF. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dpp/etf.h" line="79" column="1" bodyfile="include/dpp/etf.h" bodystart="79" bodyend="174"/>
    <listofallmembers>
      <member refid="classdpp_1_1etf__parser_1a7c1c3f85a5e6d2d0c724c2d3fade22ba" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_atom</name></member>
      <member refid="classdpp_1_1etf__parser_1ab0d97b706d48a022101f734c0d4a979f" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_atom_utf8</name></member>
      <member refid="classdpp_1_1etf__parser_1aba3d013ff4167fcb8989abf1eb081a23" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_binary</name></member>
      <member refid="classdpp_1_1etf__parser_1aad86d9ac2f2baf85bb0041631c549560" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_double</name></member>
      <member refid="classdpp_1_1etf__parser_1a6ba2c938440bbbfe2ca04a42b5d61f5f" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_false</name></member>
      <member refid="classdpp_1_1etf__parser_1adfb336ced272f026e931221ae1303126" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_integer</name></member>
      <member refid="classdpp_1_1etf__parser_1a61836185002e9119e02cf938a39d4c0f" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_list_header</name></member>
      <member refid="classdpp_1_1etf__parser_1a9103fde0a34d053adad08974b1ee2e2c" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_long_long</name></member>
      <member refid="classdpp_1_1etf__parser_1a27254eafc57ea2ef5bd6febb17e48e12" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_map_header</name></member>
      <member refid="classdpp_1_1etf__parser_1ae278aba7de419601695c4e74826214d4" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_nil</name></member>
      <member refid="classdpp_1_1etf__parser_1a9105afad81f956d629555c0ccc9205bb" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_nil_ext</name></member>
      <member refid="classdpp_1_1etf__parser_1aa30fb150fa781c3d7dd9751a81f9b28d" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_small_integer</name></member>
      <member refid="classdpp_1_1etf__parser_1a1774505ade9ddea5b194b631d43c5881" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_string</name></member>
      <member refid="classdpp_1_1etf__parser_1a4646ee5a5eec58c6dffe1b4d8a92eeb4" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_true</name></member>
      <member refid="classdpp_1_1etf__parser_1a323f9f6be5a94b883dd3cc34b57e49b4" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_tuple_header</name></member>
      <member refid="classdpp_1_1etf__parser_1ac25fdf66bb5f7216cba9e70cabf8a484" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_unsigned_long_long</name></member>
      <member refid="classdpp_1_1etf__parser_1ae9beba8cfe1c35806f40dbdc7d190403" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>append_version</name></member>
      <member refid="classdpp_1_1etf__parser_1a95b0046624f88ae59d3f483728d9d0b5" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>buffer_write</name></member>
      <member refid="classdpp_1_1etf__parser_1a9c074f9ccd302a8eae2ffe3d19c9adc0" prot="public" virt="non-virtual"><scope>dpp::etf_parser</scope><name>build</name></member>
      <member refid="classdpp_1_1etf__parser_1a1b5969a81823b8938e860a0690685950" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>data</name></member>
      <member refid="classdpp_1_1etf__parser_1a18f60dde0715b34e6cb9504f233c3dd6" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_array</name></member>
      <member refid="classdpp_1_1etf__parser_1a747485967f92bab65bee8db90c3eda54" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_atom</name></member>
      <member refid="classdpp_1_1etf__parser_1a7f869015e42c8987ae26a5febfb0092f" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_bigint</name></member>
      <member refid="classdpp_1_1etf__parser_1a2566cff11f5b539ab11691f9cc4df2b1" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_bigint_large</name></member>
      <member refid="classdpp_1_1etf__parser_1a6a50437eb54bfa98bb07953a3a0fc7e8" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_bigint_small</name></member>
      <member refid="classdpp_1_1etf__parser_1affc11fe706d363dd29550b0dc2052b4b" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_binary</name></member>
      <member refid="classdpp_1_1etf__parser_1abf06e36d7b9021e890217e2785720922" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_compressed</name></member>
      <member refid="classdpp_1_1etf__parser_1a310c409349c82db897ac226ef04fd713" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_export</name></member>
      <member refid="classdpp_1_1etf__parser_1a0c28839df67f0e60ea6e71696d508aa4" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_float</name></member>
      <member refid="classdpp_1_1etf__parser_1aa649bdd2162396fe329a9b19f46b4254" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_integer</name></member>
      <member refid="classdpp_1_1etf__parser_1a79bb865d014dc48c9f84fe977960e2bd" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_list</name></member>
      <member refid="classdpp_1_1etf__parser_1aa718d9cd0c2b578b612a9926f0fc52b6" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_map</name></member>
      <member refid="classdpp_1_1etf__parser_1a461839e26b19b5c4b5009784ee7c1a3f" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_new_float</name></member>
      <member refid="classdpp_1_1etf__parser_1a8bad87d12e83a76e2a248fa6f480bd4a" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_new_reference</name></member>
      <member refid="classdpp_1_1etf__parser_1a35e273d951a94d78d2ece636a61f9f12" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_nil</name></member>
      <member refid="classdpp_1_1etf__parser_1a6903e4a9817c8bfd2521f20a18e9db7c" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_pid</name></member>
      <member refid="classdpp_1_1etf__parser_1acaa6dd830d69c03dcef1a0f9e35a85ce" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_port</name></member>
      <member refid="classdpp_1_1etf__parser_1a00672ac9194dc1f8c507271f9b19bc3c" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_reference</name></member>
      <member refid="classdpp_1_1etf__parser_1a4f46e6660f389b3cd1f9b1c45d03e809" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_small_atom</name></member>
      <member refid="classdpp_1_1etf__parser_1a978d1edd1685405a7c6d10c840dbb4fe" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_small_integer</name></member>
      <member refid="classdpp_1_1etf__parser_1addfe7bab3d972ba803b2b27a98fbeba6" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_string</name></member>
      <member refid="classdpp_1_1etf__parser_1ac4d0324e9d690eccc2e0897182b40e8a" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_stringAsList</name></member>
      <member refid="classdpp_1_1etf__parser_1a4ef7545a9646952f50bce39868f2122d" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_tuple</name></member>
      <member refid="classdpp_1_1etf__parser_1a9912918cdaaf14495c326be55ff58b58" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_tuple_large</name></member>
      <member refid="classdpp_1_1etf__parser_1a4acd4adba92eacc16363f468cf28be02" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>decode_tuple_small</name></member>
      <member refid="classdpp_1_1etf__parser_1a1fda89db96ffa12c3f922ece4c099a92" prot="public" virt="non-virtual"><scope>dpp::etf_parser</scope><name>etf_parser</name></member>
      <member refid="classdpp_1_1etf__parser_1a59de2b005efa93b208b35cf4b5afaf5e" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>inner_build</name></member>
      <member refid="classdpp_1_1etf__parser_1ad041ce7bfa3431a7aaf5dc17dbf055f0" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>inner_parse</name></member>
      <member refid="classdpp_1_1etf__parser_1a0b80df35b6cd591a5e1d30269ef43d99" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>offset</name></member>
      <member refid="classdpp_1_1etf__parser_1a16b91fa9e1e2024d5cb390b293c4238f" prot="public" virt="non-virtual"><scope>dpp::etf_parser</scope><name>parse</name></member>
      <member refid="classdpp_1_1etf__parser_1a3cda25969eda0ceff4cd292e90c5c4fb" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>process_atom</name></member>
      <member refid="classdpp_1_1etf__parser_1a407ca5ef650785330af6be9d1654d729" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>read_16_bits</name></member>
      <member refid="classdpp_1_1etf__parser_1a5c0388db5aef8f93c1a5d9e9b806dfa0" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>read_32_bits</name></member>
      <member refid="classdpp_1_1etf__parser_1a8ca03fce713d3cba5f8b32d83e3d61ea" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>read_64_bits</name></member>
      <member refid="classdpp_1_1etf__parser_1ae62dbad0512e2bd5372f243ab81f82ab" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>read_8_bits</name></member>
      <member refid="classdpp_1_1etf__parser_1ac83d5a9f6df2649b5aaf9fc3f91c1902" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>read_string</name></member>
      <member refid="classdpp_1_1etf__parser_1a1d142726294e1b13238c8d5ada5d84d5" prot="private" virt="non-virtual"><scope>dpp::etf_parser</scope><name>size</name></member>
      <member refid="classdpp_1_1etf__parser_1abf03b044d5a883cac5816a4c93df3688" prot="public" virt="non-virtual"><scope>dpp::etf_parser</scope><name>~etf_parser</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
