<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="classdpp_1_1interaction" kind="class" prot="public">
    <compoundname>dpp::interaction</compoundname>
    <basecompoundref refid="classdpp_1_1managed" prot="public" virt="non-virtual">dpp::managed</basecompoundref>
    <includes local="no">slashcommand.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1interaction_1a2575444b8e918c947fb4ffc30c442201" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::interaction::application_id</definition>
        <argsstring></argsstring>
        <name>application_id</name>
        <briefdescription>
<para>id of the application this interaction is for </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/slashcommand.h" line="336" column="1" bodyfile="/home/brain/D++/include/dpp/slashcommand.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1ae1df9ec5826bac923ee92e2037bf17cc" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dpp::interaction::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>the type of interaction </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/slashcommand.h" line="337" column="1" bodyfile="/home/brain/D++/include/dpp/slashcommand.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1ac31d2411a96216b8e0f1549f4f87c99d" prot="public" static="no" mutable="no">
        <type>std::variant&lt; <ref refid="structdpp_1_1command__interaction" kindref="compound">command_interaction</ref>, <ref refid="structdpp_1_1component__interaction" kindref="compound">component_interaction</ref> &gt;</type>
        <definition>std::variant&lt;command_interaction, component_interaction&gt; dpp::interaction::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
<para>Optional: the command data payload. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/slashcommand.h" line="338" column="1" bodyfile="/home/brain/D++/include/dpp/slashcommand.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a6301d14a86e9b51b656ef589c2e39009" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::interaction::guild_id</definition>
        <argsstring></argsstring>
        <name>guild_id</name>
        <briefdescription>
<para>Optional: the guild it was sent from. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/slashcommand.h" line="339" column="1" bodyfile="/home/brain/D++/include/dpp/slashcommand.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a8062f778758ef53d0ea4e40f62ff4015" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::interaction::channel_id</definition>
        <argsstring></argsstring>
        <name>channel_id</name>
        <briefdescription>
<para>Optional: the channel it was sent from. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/slashcommand.h" line="340" column="1" bodyfile="/home/brain/D++/include/dpp/slashcommand.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a5101b493d82a15b9fa3aca68a6386e39" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::interaction::message_id</definition>
        <argsstring></argsstring>
        <name>message_id</name>
        <briefdescription>
<para>Originating message id. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/slashcommand.h" line="341" column="1" bodyfile="/home/brain/D++/include/dpp/slashcommand.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a8d1cc9b3f5ccab6fc206c1adb864ac06" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild__member" kindref="compound">guild_member</ref></type>
        <definition>guild_member dpp::interaction::member</definition>
        <argsstring></argsstring>
        <name>member</name>
        <briefdescription>
<para>Optional: guild member data for the invoking user, including permissions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/slashcommand.h" line="342" column="1" bodyfile="/home/brain/D++/include/dpp/slashcommand.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1af42be274f0c532e1b227d6725f25ecd3" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1user" kindref="compound">user</ref></type>
        <definition>user dpp::interaction::usr</definition>
        <argsstring></argsstring>
        <name>usr</name>
        <briefdescription>
<para>Optional: user object for the invoking user, if invoked in a DM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/slashcommand.h" line="343" column="1" bodyfile="/home/brain/D++/include/dpp/slashcommand.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a3d20499cf0b8b93c655b904847622085" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::interaction::token</definition>
        <argsstring></argsstring>
        <name>token</name>
        <briefdescription>
<para>a continuation token for responding to the interaction </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/slashcommand.h" line="344" column="1" bodyfile="/home/brain/D++/include/dpp/slashcommand.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1a326c799b4b9d813f44f5462dae01e027" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dpp::interaction::version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <briefdescription>
<para>read-only property, always 1 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/slashcommand.h" line="345" column="1" bodyfile="/home/brain/D++/include/dpp/slashcommand.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1interaction_1aaa88ba118d0a7b5b32090a844610d7e7" prot="public" static="no" mutable="no">
        <type><ref refid="structdpp_1_1command__resolved" kindref="compound">command_resolved</ref></type>
        <definition>command_resolved dpp::interaction::resolved</definition>
        <argsstring></argsstring>
        <name>resolved</name>
        <briefdescription>
<para>Resolved user/role etc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/slashcommand.h" line="346" column="1" bodyfile="/home/brain/D++/include/dpp/slashcommand.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1managed_1a40bf0c6cc03909910512808fa6caa112" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::managed::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unique ID of object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/discord.h" line="44" column="1" bodyfile="/home/brain/D++/include/dpp/discord.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1interaction_1a23ff816e36c44d2afa51c34a1121a124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1interaction" kindref="compound">interaction</ref> &amp;</type>
        <definition>interaction &amp; dpp::interaction::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Fill object properties from JSON. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON to fill from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>interaction&amp; Reference to self </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/slashcommand.h" line="354" column="1" bodyfile="/home/brain/D++/src/dpp/slashcommand.cpp" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1interaction_1aeba6ff7f5d565588a37adc831f1e8108" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::interaction::build_json</definition>
        <argsstring>(bool with_id=false) const </argsstring>
        <name>build_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Build a json string for this object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>True if to include the ID in the JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string JSON string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/slashcommand.h" line="362" column="1" bodyfile="/home/brain/D++/src/dpp/slashcommand.cpp" bodystart="204" bodyend="206"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An interaction represents a user running a command and arrives via the <ref refid="classdpp_1_1cluster_1ab17aa65a6835eca5a95036d6bf6f736c" kindref="member">dpp::cluster::on_interaction_create</ref> event. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="11959">
        <label>dpp::interaction</label>
        <link refid="classdpp_1_1interaction"/>
        <childnode refid="11960" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11960">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11979">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="11962" relation="public-inheritance">
        </childnode>
        <childnode refid="11980" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="11981" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11975" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="11976" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="11982" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="11961">
        <label>dpp::interaction</label>
        <link refid="classdpp_1_1interaction"/>
        <childnode refid="11962" relation="public-inheritance">
        </childnode>
        <childnode refid="11963" relation="usage">
          <edgelabel>message_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="11964" relation="usage">
          <edgelabel>resolved</edgelabel>
        </childnode>
        <childnode refid="11973" relation="usage">
          <edgelabel>member</edgelabel>
        </childnode>
        <childnode refid="11979" relation="usage">
          <edgelabel>usr</edgelabel>
        </childnode>
        <childnode refid="11983" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="11976" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="11975" relation="usage">
          <edgelabel>version</edgelabel>
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="11983">
        <label>variant&lt; dpp::command_interaction, dpp::component_interaction &gt;</label>
      </node>
      <node id="11973">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="11974" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="11963" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="11975" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11976" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="11978" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="11969">
        <label>std::map&lt; dpp::snowflake, dpp::dpp::user &gt;</label>
        <childnode refid="11963" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11970" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11963">
        <label>uint64_t</label>
      </node>
      <node id="11968">
        <label>channel</label>
      </node>
      <node id="11980">
        <label>uint16_t</label>
      </node>
      <node id="11974">
        <label>time_t</label>
      </node>
      <node id="11977">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="11971">
        <label>std::map&lt; dpp::snowflake, dpp::dpp::role &gt;</label>
        <childnode refid="11963" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11972" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11982">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="11963" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="11981">
        <label>uint32_t</label>
      </node>
      <node id="11975">
        <label>uint8_t</label>
      </node>
      <node id="11964">
        <label>dpp::command_resolved</label>
        <link refid="structdpp_1_1command__resolved"/>
        <childnode refid="11965" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="11967" relation="usage">
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="11969" relation="usage">
          <edgelabel>users</edgelabel>
        </childnode>
        <childnode refid="11971" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="11966">
        <label>guild_member</label>
      </node>
      <node id="11972">
        <label>role</label>
      </node>
      <node id="11962">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="11963" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="11967">
        <label>std::map&lt; dpp::snowflake, dpp::dpp::channel &gt;</label>
        <childnode refid="11968" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="11963" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="11970">
        <label>user</label>
      </node>
      <node id="11978">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="11963" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11976">
        <label>std::string</label>
        <childnode refid="11977" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11965">
        <label>std::map&lt; dpp::snowflake, dpp::dpp::guild_member &gt;</label>
        <childnode refid="11963" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11966" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/slashcommand.h" line="334" column="1" bodyfile="/home/brain/D++/include/dpp/slashcommand.h" bodystart="334" bodyend="363"/>
    <listofallmembers>
      <member refid="classdpp_1_1interaction_1a2575444b8e918c947fb4ffc30c442201" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>application_id</name></member>
      <member refid="classdpp_1_1interaction_1aeba6ff7f5d565588a37adc831f1e8108" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>build_json</name></member>
      <member refid="classdpp_1_1interaction_1a8062f778758ef53d0ea4e40f62ff4015" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>channel_id</name></member>
      <member refid="classdpp_1_1interaction_1ac31d2411a96216b8e0f1549f4f87c99d" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>data</name></member>
      <member refid="classdpp_1_1interaction_1a23ff816e36c44d2afa51c34a1121a124" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1interaction_1a6301d14a86e9b51b656ef589c2e39009" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>guild_id</name></member>
      <member refid="classdpp_1_1managed_1a40bf0c6cc03909910512808fa6caa112" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>id</name></member>
      <member refid="classdpp_1_1managed_1a3e2b7d69e7313d84aff23cadf9ba9a6a" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>managed</name></member>
      <member refid="classdpp_1_1interaction_1a8d1cc9b3f5ccab6fc206c1adb864ac06" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>member</name></member>
      <member refid="classdpp_1_1interaction_1a5101b493d82a15b9fa3aca68a6386e39" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>message_id</name></member>
      <member refid="classdpp_1_1interaction_1aaa88ba118d0a7b5b32090a844610d7e7" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>resolved</name></member>
      <member refid="classdpp_1_1interaction_1a3d20499cf0b8b93c655b904847622085" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>token</name></member>
      <member refid="classdpp_1_1interaction_1ae1df9ec5826bac923ee92e2037bf17cc" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>type</name></member>
      <member refid="classdpp_1_1interaction_1af42be274f0c532e1b227d6725f25ecd3" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>usr</name></member>
      <member refid="classdpp_1_1interaction_1a326c799b4b9d813f44f5462dae01e027" prot="public" virt="non-virtual"><scope>dpp::interaction</scope><name>version</name></member>
      <member refid="classdpp_1_1managed_1af6f3e41995e49b5ce68772a9fa4b5fad" prot="public" virt="virtual"><scope>dpp::interaction</scope><name>~managed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
