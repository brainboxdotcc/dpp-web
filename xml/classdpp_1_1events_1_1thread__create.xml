<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="classdpp_1_1events_1_1thread__create" kind="class" prot="public">
    <compoundname>dpp::events::thread_create</compoundname>
    <basecompoundref refid="classdpp_1_1events_1_1event" prot="public" virt="non-virtual">dpp::events::event</basecompoundref>
    <includes local="no">event.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1events_1_1thread__create_1addf9a7cb6fb4c570e0509b8d34d7ec02" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void dpp::events::thread_create::handle</definition>
        <argsstring>(dpp::discord_client *client, nlohmann::json &amp;j, const std::string &amp;raw)</argsstring>
        <name>handle</name>
        <reimplements refid="classdpp_1_1events_1_1event_1a03fd1d1321e3660f00c4a9e00da2aa81">handle</reimplements>
        <param>
          <type><ref refid="classdpp_1_1discord__client" kindref="compound">dpp::discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pure virtual method for event handler code <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The creating shard </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The json data of the event </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>The raw event json </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/event.h" line="91" column="1" bodyfile="/home/brain/D++/src/dpp/events/thread_create.cpp" bodystart="19" bodyend="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="14029">
        <label>dpp::events::thread_create</label>
        <link refid="classdpp_1_1events_1_1thread__create"/>
        <childnode refid="14030" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14030">
        <label>dpp::events::event</label>
        <link refid="classdpp_1_1events_1_1event"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14031">
        <label>dpp::events::thread_create</label>
        <link refid="classdpp_1_1events_1_1thread__create"/>
        <childnode refid="14032" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14032">
        <label>dpp::events::event</label>
        <link refid="classdpp_1_1events_1_1event"/>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/event.h" line="91" column="1" bodyfile="/home/brain/D++/include/dpp/event.h" bodystart="91" bodyend="91"/>
    <listofallmembers>
      <member refid="classdpp_1_1events_1_1thread__create_1addf9a7cb6fb4c570e0509b8d34d7ec02" prot="public" virt="virtual"><scope>dpp::events::thread_create</scope><name>handle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
