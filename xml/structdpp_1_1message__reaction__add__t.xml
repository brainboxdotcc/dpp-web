<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1message__reaction__add__t" kind="struct" prot="public">
    <compoundname>dpp::message_reaction_add_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1message__reaction__add__t_1a81f1e8b72e5e934c30caf5e77780f9e5" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::message_reaction_add_t::reacting_guild</definition>
        <argsstring></argsstring>
        <name>reacting_guild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="413" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1message__reaction__add__t_1a20264319a0f8da84a8e832be40f7d82e" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1user" kindref="compound">user</ref> *</type>
        <definition>user* dpp::message_reaction_add_t::reacting_user</definition>
        <argsstring></argsstring>
        <name>reacting_user</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="414" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1message__reaction__add__t_1a6fa97995b2c0bfd038259c51d38ea3b2" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1channel" kindref="compound">channel</ref> *</type>
        <definition>channel* dpp::message_reaction_add_t::reacting_channel</definition>
        <argsstring></argsstring>
        <name>reacting_channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="415" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1message__reaction__add__t_1ae828f647fae2086a97078eeffa6b148e" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1emoji" kindref="compound">emoji</ref> *</type>
        <definition>emoji* dpp::message_reaction_add_t::reacting_emoji</definition>
        <argsstring></argsstring>
        <name>reacting_emoji</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="416" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1message__reaction__add__t_1a813043598fc5086d20086afe2df9d95b" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::message_reaction_add_t::message_id</definition>
        <argsstring></argsstring>
        <name>message_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="417" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1message__reaction__add__t_1af7ae099d6db7cfd54b6c5b127d50afd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::message_reaction_add_t::message_reaction_add_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>message_reaction_add_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="412" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="111" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Message reaction add. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="12867">
        <label>dpp::message_reaction_add_t</label>
        <link refid="structdpp_1_1message__reaction__add__t"/>
        <childnode refid="12868" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12868">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12948">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="12886">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="12885" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="12878" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="12887" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="12889" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="12892" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="12871" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="12895" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="12882">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="12883" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="12884" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="12912">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12927">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="12913">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="12960">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="12877" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12961" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="12871" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="12963">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="12877" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="12964" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12953">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="12869">
        <label>dpp::message_reaction_add_t</label>
        <link refid="structdpp_1_1message__reaction__add__t"/>
        <childnode refid="12870" relation="public-inheritance">
        </childnode>
        <childnode refid="12962" relation="usage">
          <edgelabel>reacting_guild</edgelabel>
        </childnode>
        <childnode refid="12877" relation="usage">
          <edgelabel>message_id</edgelabel>
        </childnode>
        <childnode refid="12889" relation="usage">
          <edgelabel>reacting_user</edgelabel>
        </childnode>
        <childnode refid="12969" relation="usage">
          <edgelabel>reacting_emoji</edgelabel>
        </childnode>
        <childnode refid="12970" relation="usage">
          <edgelabel>reacting_channel</edgelabel>
        </childnode>
      </node>
      <node id="12940">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="12889">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="12890" relation="public-inheritance">
        </childnode>
        <childnode refid="12891" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="12892" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12893" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="12871" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="12894" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="12898">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="12942">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="12914">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="12944">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="12972">
        <label>std::vector&lt; dpp::permission_overwrite &gt;</label>
        <childnode refid="12973" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12966">
        <label>region</label>
      </node>
      <node id="12954">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="12880">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="12968">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="12877" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12893" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12871" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="12873" relation="usage">
          <edgelabel>shard</edgelabel>
        </childnode>
      </node>
      <node id="12895">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="12896" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="12897" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="12898" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="12899" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="12900" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="12901" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="12902" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="12903" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="12904" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="12905" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="12906" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="12907" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="12908" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="12909" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="12910" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="12911" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="12912" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="12913" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="12914" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="12915" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="12916" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="12917" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="12918" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="12919" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="12920" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="12921" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="12922" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="12923" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="12924" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="12925" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="12926" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="12927" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="12928" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="12929" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="12930" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="12931" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="12932" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="12933" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="12934" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="12935" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="12936" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="12937" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="12938" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="12939" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="12940" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="12941" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="12942" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="12943" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="12944" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="12945" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="12946" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="12947" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="12948" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="12949" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="12950" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="12951" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="12952" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="12953" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="12954" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="12955" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="12956" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="12964">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="12878" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="12877" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="12893" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12871" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="12965" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="12902">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="12909">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="12951">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="12877">
        <label>uint64_t</label>
      </node>
      <node id="12946">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12943">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12929">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="12971">
        <label>dpp::thread_metadata</label>
        <link refid="structdpp_1_1thread__metadata"/>
        <childnode refid="12878" relation="usage">
          <edgelabel>archive_timestamp</edgelabel>
        </childnode>
        <childnode refid="12891" relation="usage">
          <edgelabel>auto_archive_duration</edgelabel>
        </childnode>
        <childnode refid="12881" relation="usage">
          <edgelabel>archived</edgelabel>
          <edgelabel>locked</edgelabel>
        </childnode>
      </node>
      <node id="12923">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="12911">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="12900">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12919">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="12936">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="12933">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12956">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="12891">
        <label>uint16_t</label>
      </node>
      <node id="12921">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="12878">
        <label>time_t</label>
      </node>
      <node id="12872">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="12955">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="12932">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="12961">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="12874" relation="public-inheritance">
        </childnode>
        <childnode refid="12877" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="12878" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="12886" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="12892" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="12871" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="12881" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="12958" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="12894">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="12877" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="12931">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="12920">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="12885">
        <label>double</label>
      </node>
      <node id="12875">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="12876" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="12877" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="12878" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="12879" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="12880" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="12881" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="12871" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="12882" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="12930">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12952">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="12892">
        <label>uint32_t</label>
      </node>
      <node id="12950">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="12870">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="12871" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="12873" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="12893">
        <label>uint8_t</label>
      </node>
      <node id="12935">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="12967">
        <label>std::map&lt; snowflake, dpp::voicestate &gt;</label>
        <childnode refid="12877" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="12968" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12888">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="12874">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="12875" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12969">
        <label>dpp::emoji</label>
        <link refid="classdpp_1_1emoji"/>
        <childnode refid="12890" relation="public-inheritance">
        </childnode>
        <childnode refid="12877" relation="usage">
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="12893" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="12871" relation="usage">
          <edgelabel>image_data</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="12887">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="12888" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="12904">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="12916">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="12901">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="12924">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="12926">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="12959">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="12877" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="12960" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12876">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="12918">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12873">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="12874" relation="public-inheritance">
        </childnode>
        <childnode refid="12885" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="12877" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="12878" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="12886" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="12957" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="12892" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="12881" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="12871" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="12958" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="12959" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="12925">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="12883">
        <label>SSL *</label>
      </node>
      <node id="12890">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="12877" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="12938">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="12970">
        <label>dpp::channel</label>
        <link refid="classdpp_1_1channel"/>
        <childnode refid="12890" relation="public-inheritance">
        </childnode>
        <childnode refid="12971" relation="usage">
          <edgelabel>metadata</edgelabel>
        </childnode>
        <childnode refid="12878" relation="usage">
          <edgelabel>last_pin_timestamp</edgelabel>
        </childnode>
        <childnode refid="12877" relation="usage">
          <edgelabel>parent_id</edgelabel>
          <edgelabel>last_message_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
        </childnode>
        <childnode refid="12891" relation="usage">
          <edgelabel>rate_limit_per_user</edgelabel>
          <edgelabel>position</edgelabel>
        </childnode>
        <childnode refid="12871" relation="usage">
          <edgelabel>topic</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="12893" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>user_limit</edgelabel>
          <edgelabel>message_count</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="12965" relation="usage">
          <edgelabel>recipients</edgelabel>
        </childnode>
        <childnode refid="12972" relation="usage">
          <edgelabel>permission_overwrites</edgelabel>
        </childnode>
      </node>
      <node id="12939">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="12947">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="12884">
        <label>SSL_CTX *</label>
      </node>
      <node id="12934">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="12957">
        <label>mutex</label>
      </node>
      <node id="12945">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12973">
        <label>dpp::permission_overwrite</label>
        <link refid="structdpp_1_1permission__overwrite"/>
        <childnode refid="12877" relation="usage">
          <edgelabel>allow</edgelabel>
          <edgelabel>deny</edgelabel>
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="12893" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="12903">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="12922">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="12928">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="12941">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="12881">
        <label>bool</label>
      </node>
      <node id="12879">
        <label>SOCKET</label>
      </node>
      <node id="12962">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="12890" relation="public-inheritance">
        </childnode>
        <childnode refid="12877" relation="usage">
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="12963" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="12966" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="12891" relation="usage">
          <edgelabel>shard_id</edgelabel>
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
        </childnode>
        <childnode refid="12892" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="12893" relation="usage">
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>verification_level</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>premium_tier</edgelabel>
        </childnode>
        <childnode refid="12871" relation="usage">
          <edgelabel>vanity_url_code</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="12967" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
        <childnode refid="12965" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="12894" relation="usage">
          <edgelabel>splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
        </childnode>
      </node>
      <node id="12917">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="12949">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="12907">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="12899">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12896">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="12915">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="12937">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="12897">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="12910">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="12906">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="12965">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="12877" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12958">
        <label>native_handle_type</label>
      </node>
      <node id="12908">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="12871">
        <label>std::string</label>
        <childnode refid="12872" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12905">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="407" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="407" bodyend="418"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::message_reaction_add_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::message_reaction_add_t</scope><name>from</name></member>
      <member refid="structdpp_1_1message__reaction__add__t_1a813043598fc5086d20086afe2df9d95b" prot="public" virt="non-virtual"><scope>dpp::message_reaction_add_t</scope><name>message_id</name></member>
      <member refid="structdpp_1_1message__reaction__add__t_1af7ae099d6db7cfd54b6c5b127d50afd7" prot="public" virt="non-virtual"><scope>dpp::message_reaction_add_t</scope><name>message_reaction_add_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::message_reaction_add_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1message__reaction__add__t_1a6fa97995b2c0bfd038259c51d38ea3b2" prot="public" virt="non-virtual"><scope>dpp::message_reaction_add_t</scope><name>reacting_channel</name></member>
      <member refid="structdpp_1_1message__reaction__add__t_1ae828f647fae2086a97078eeffa6b148e" prot="public" virt="non-virtual"><scope>dpp::message_reaction_add_t</scope><name>reacting_emoji</name></member>
      <member refid="structdpp_1_1message__reaction__add__t_1a81f1e8b72e5e934c30caf5e77780f9e5" prot="public" virt="non-virtual"><scope>dpp::message_reaction_add_t</scope><name>reacting_guild</name></member>
      <member refid="structdpp_1_1message__reaction__add__t_1a20264319a0f8da84a8e832be40f7d82e" prot="public" virt="non-virtual"><scope>dpp::message_reaction_add_t</scope><name>reacting_user</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
