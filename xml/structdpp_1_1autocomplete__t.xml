<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1autocomplete__t" kind="struct" language="C++" prot="public">
    <compoundname>dpp::autocomplete_t</compoundname>
    <basecompoundref refid="structdpp_1_1interaction__create__t" prot="public" virt="non-virtual">dpp::interaction_create_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1autocomplete__t_1a9a1be45450a5bd7699b6f5799850721c" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">dpp::snowflake</ref></type>
        <definition>dpp::snowflake dpp::autocomplete_t::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>Command ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="219" column="16" bodyfile="include/dpp/dispatcher.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1autocomplete__t_1a8c04822f347b7621987f0ba60f3b697a" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::autocomplete_t::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>Command name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="224" column="13" bodyfile="include/dpp/dispatcher.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1autocomplete__t_1a3611e80443a208bc2e6b7c466ed1679d" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structdpp_1_1command__option" kindref="compound">dpp::command_option</ref> &gt;</type>
        <definition>std::vector&lt;dpp::command_option&gt; dpp::autocomplete_t::options</definition>
        <argsstring></argsstring>
        <name>options</name>
        <briefdescription>
<para>auto completion options </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="229" column="13" bodyfile="include/dpp/dispatcher.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1interaction__create__t_1a8b0c69c156a1e532507a918c13414f14" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1interaction" kindref="compound">interaction</ref></type>
        <definition>interaction dpp::interaction_create_t::command</definition>
        <argsstring></argsstring>
        <name>command</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="171" column="13" bodyfile="include/dpp/dispatcher.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="40" column="13" bodyfile="include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="43" column="22" bodyfile="include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1autocomplete__t_1a2ccc278a70570af25f9fa7b245a120b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::autocomplete_t::autocomplete_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>autocomplete_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="206" column="1" bodyfile="src/dpp/dispatcher.cpp" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1autocomplete__t_1a9e46b59ec205a971235573c73d8437d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="namespacedpp_1a710b32b577396ba92917d0578f0bedb6" kindref="member">command_value</ref> &amp;</type>
        <definition>const command_value &amp; dpp::autocomplete_t::get_parameter</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>get_parameter</name>
        <reimplements refid="structdpp_1_1interaction__create__t_1a9ed8c6f8eaf7862de50a30e9642fbc56">get_parameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get a command line parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command line parameter to retrieve </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Always returns an empty parameter as auto complete requests dont have parameters! </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="214" column="29" bodyfile="src/dpp/dispatcher.cpp" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1interaction__create__t_1a81a1b21aa504d87a1cc47869daff2c77" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::interaction_create_t::reply</definition>
        <argsstring>(interaction_response_type t, const message &amp;m) const</argsstring>
        <name>reply</name>
        <param>
          <type><ref refid="namespacedpp_1a83479ddaa45166def7719d5511b09d02" kindref="member">interaction_response_type</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structdpp_1_1message" kindref="compound">message</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Send a reply for this interaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of reply to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Message object to send. Not all fields are supported by Discord. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="130" column="6" bodyfile="src/dpp/dispatcher.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1interaction__create__t_1a5d8b161419b6eba6fbe05da696ba76a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::interaction_create_t::reply</definition>
        <argsstring>(interaction_response_type t, const std::string &amp;mt) const</argsstring>
        <name>reply</name>
        <param>
          <type><ref refid="namespacedpp_1a83479ddaa45166def7719d5511b09d02" kindref="member">interaction_response_type</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>mt</declname>
        </param>
        <briefdescription>
<para>Send a reply for this interaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of reply to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mt</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value to send, for simple text only messages </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="138" column="6" bodyfile="src/dpp/dispatcher.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1interaction__create__t_1ab2658732fd275f78e887435667d96d0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::interaction_create_t::get_original_response</definition>
        <argsstring>(command_completion_event_t callback={}) const</argsstring>
        <name>get_original_response</name>
        <param>
          <type><ref refid="namespacedpp_1a022dce6b086ec4515384eaece59c84c3" kindref="member">command_completion_event_t</ref></type>
          <declname>callback</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Get original response message for this interaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to call when the API call completes. On success the callback will contain a <ref refid="structdpp_1_1message" kindref="compound">dpp::message</ref> object in <ref refid="structdpp_1_1confirmation__callback__t_1a4725ef83209a64c0558a598ec01ad463" kindref="member">confirmation_callback_t::value</ref>. On failure, the value is undefined and <ref refid="structdpp_1_1confirmation__callback__t_1a17820d5f9fb0725d64a1bf23c8cc97c7" kindref="member">confirmation_callback_t::is_error()</ref> method will return true. You can obtain full error details with <ref refid="structdpp_1_1confirmation__callback__t_1a79dda1493a0788577d84a8ad82cf7e55" kindref="member">confirmation_callback_t::get_error()</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="146" column="6" bodyfile="src/dpp/dispatcher.cpp" bodystart="46" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1interaction__create__t_1a0bfaf4c5d6a7de14ffeea0e4bf160ba6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::interaction_create_t::edit_response</definition>
        <argsstring>(const message &amp;m) const</argsstring>
        <name>edit_response</name>
        <param>
          <type>const <ref refid="structdpp_1_1message" kindref="compound">message</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Edit the response for this interaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Message object to send. Not all fields are supported by Discord. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="153" column="6" bodyfile="src/dpp/dispatcher.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1interaction__create__t_1a690fd3663ea3ffda8ad6d3238f3a7e79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpp::interaction_create_t::edit_response</definition>
        <argsstring>(const std::string &amp;mt) const</argsstring>
        <name>edit_response</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>mt</declname>
        </param>
        <briefdescription>
<para>Edit the response for this interaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mt</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value to send, for simple text only messages </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="160" column="6" bodyfile="src/dpp/dispatcher.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Discord requests that we fill a list of auto completion choices for a command option. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dpp::autocomplete_t</label>
        <link refid="structdpp_1_1autocomplete__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
      <node id="2">
        <label>dpp::interaction_create_t</label>
        <link refid="structdpp_1_1interaction__create__t"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12">
        <label>SSL *</label>
      </node>
      <node id="13">
        <label>SSL_CTX *</label>
      </node>
      <node id="9">
        <label>bool</label>
      </node>
      <node id="27">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="19">
        <label>double</label>
      </node>
      <node id="1">
        <label>dpp::autocomplete_t</label>
        <link refid="structdpp_1_1autocomplete__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>options</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="27" relation="usage">
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>role_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="4" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>numshards</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>ws_mode</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>dpp::command_resolved</label>
        <link refid="structdpp_1_1command__resolved"/>
        <childnode refid="37" relation="usage">
          <edgelabel>channels</edgelabel>
          <edgelabel>members</edgelabel>
          <edgelabel>roles</edgelabel>
          <edgelabel>users</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>reconnects</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>shard_id</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
          <edgelabel>last_heartbeat_ack</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>sessionid</edgelabel>
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>protocol</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="16" relation="usage">
          <edgelabel>application_command_create</edgelabel>
          <edgelabel>application_command_delete</edgelabel>
          <edgelabel>application_command_update</edgelabel>
          <edgelabel>autocomplete</edgelabel>
          <edgelabel>button_click</edgelabel>
          <edgelabel>channel_create</edgelabel>
          <edgelabel>channel_delete</edgelabel>
          <edgelabel>channel_pins_update</edgelabel>
          <edgelabel>channel_update</edgelabel>
          <edgelabel>guild_ban_add</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="4" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="4" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>guild_id</edgelabel>
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>dpp::interaction</label>
        <link refid="classdpp_1_1interaction"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>application_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>message_id</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>type</edgelabel>
          <edgelabel>version</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>member</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>usr</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>resolved</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dpp::interaction_create_t</label>
        <link refid="structdpp_1_1interaction__create__t"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>command</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="15" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="12" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="4" relation="usage">
          <edgelabel>buffer</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>port</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
          <edgelabel>custom_writeable_ready</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="15" relation="usage">
          <edgelabel>first</edgelabel>
          <edgelabel>second</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>int</label>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="16">
        <label>function&lt;</label>
      </node>
      <node id="37">
        <label>map&lt;</label>
      </node>
      <node id="30">
        <label>std::mutex</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>native_handle_type</label>
      </node>
      <node id="31">
        <label>unordered_map&lt;</label>
      </node>
      <node id="33">
        <label>variant&lt;</label>
      </node>
      <node id="35">
        <label>vector&lt;</label>
      </node>
      <node id="14">
        <label>time_t</label>
      </node>
      <node id="23">
        <label>uint16_t</label>
      </node>
      <node id="18">
        <label>uint32_t</label>
      </node>
      <node id="15">
        <label>uint64_t</label>
      </node>
      <node id="25">
        <label>uint8_t</label>
      </node>
      <node id="28">
        <label>websocket_protocol_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/dispatcher.h" line="200" column="1" bodyfile="include/dpp/dispatcher.h" bodystart="200" bodyend="230"/>
    <listofallmembers>
      <member refid="structdpp_1_1autocomplete__t_1a2ccc278a70570af25f9fa7b245a120b9" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>autocomplete_t</name></member>
      <member refid="structdpp_1_1interaction__create__t_1a8b0c69c156a1e532507a918c13414f14" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>command</name></member>
      <member refid="structdpp_1_1interaction__create__t_1a0bfaf4c5d6a7de14ffeea0e4bf160ba6" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>edit_response</name></member>
      <member refid="structdpp_1_1interaction__create__t_1a690fd3663ea3ffda8ad6d3238f3a7e79" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>edit_response</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>from</name></member>
      <member refid="structdpp_1_1interaction__create__t_1ab2658732fd275f78e887435667d96d0c" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>get_original_response</name></member>
      <member refid="structdpp_1_1autocomplete__t_1a9e46b59ec205a971235573c73d8437d3" prot="public" virt="virtual"><scope>dpp::autocomplete_t</scope><name>get_parameter</name></member>
      <member refid="structdpp_1_1autocomplete__t_1a9a1be45450a5bd7699b6f5799850721c" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>id</name></member>
      <member refid="structdpp_1_1interaction__create__t_1ab0b360b2769c2e3be693aae2f0df27b6" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>interaction_create_t</name></member>
      <member refid="structdpp_1_1autocomplete__t_1a8c04822f347b7621987f0ba60f3b697a" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>name</name></member>
      <member refid="structdpp_1_1autocomplete__t_1a3611e80443a208bc2e6b7c466ed1679d" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>options</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1interaction__create__t_1a81a1b21aa504d87a1cc47869daff2c77" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>reply</name></member>
      <member refid="structdpp_1_1interaction__create__t_1a5d8b161419b6eba6fbe05da696ba76a1" prot="public" virt="non-virtual"><scope>dpp::autocomplete_t</scope><name>reply</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
