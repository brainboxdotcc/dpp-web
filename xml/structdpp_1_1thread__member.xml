<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1thread__member" kind="struct" language="C++" prot="public">
    <compoundname>dpp::thread_member</compoundname>
    <includes local="no">channel.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1thread__member_1a17dfbcbeb25bdcf2d0d6040ba51df1b0" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::thread_member::thread_id</definition>
        <argsstring></argsstring>
        <name>thread_id</name>
        <briefdescription>
<para>ID of the thread member is part of. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="115" column="11" bodyfile="include/dpp/channel.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1thread__member_1a5dbdfa69bced84ca047f45fa329904c5" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedpp_1a0dec2a52b080906aebfd3e1b3db02475" kindref="member">snowflake</ref></type>
        <definition>snowflake dpp::thread_member::user_id</definition>
        <argsstring></argsstring>
        <name>user_id</name>
        <briefdescription>
<para>ID of the member. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="117" column="11" bodyfile="include/dpp/channel.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1thread__member_1a1b8e07233ef58b4a0b765b0e1e54e000" prot="public" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t dpp::thread_member::joined</definition>
        <argsstring></argsstring>
        <name>joined</name>
        <briefdescription>
<para>When the user joined the thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="119" column="8" bodyfile="include/dpp/channel.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1thread__member_1a840e99fdb640dfa0cda1d853360e1836" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dpp::thread_member::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
<para>Flags bitmap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="121" column="10" bodyfile="include/dpp/channel.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1thread__member_1a55796d137409618f98c7710861568c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1thread__member" kindref="compound">thread_member</ref> &amp;</type>
        <definition>thread_member &amp; dpp::thread_member::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Read struct values from a json object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>json to read values from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/channel.h" line="128" column="15" bodyfile="src/dpp/channel.cpp" bodystart="33" bodyend="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>represents membership of a user with a thread </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>dpp::thread_member</label>
        <link refid="structdpp_1_1thread__member"/>
        <childnode refid="2" relation="usage">
          <edgelabel>thread_id</edgelabel>
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>joined</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>time_t</label>
      </node>
      <node id="4">
        <label>uint32_t</label>
      </node>
      <node id="2">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/channel.h" line="112" column="1" bodyfile="include/dpp/channel.h" bodystart="113" bodyend="129"/>
    <listofallmembers>
      <member refid="structdpp_1_1thread__member_1a55796d137409618f98c7710861568c4d" prot="public" virt="non-virtual"><scope>dpp::thread_member</scope><name>fill_from_json</name></member>
      <member refid="structdpp_1_1thread__member_1a840e99fdb640dfa0cda1d853360e1836" prot="public" virt="non-virtual"><scope>dpp::thread_member</scope><name>flags</name></member>
      <member refid="structdpp_1_1thread__member_1a1b8e07233ef58b4a0b765b0e1e54e000" prot="public" virt="non-virtual"><scope>dpp::thread_member</scope><name>joined</name></member>
      <member refid="structdpp_1_1thread__member_1a17dfbcbeb25bdcf2d0d6040ba51df1b0" prot="public" virt="non-virtual"><scope>dpp::thread_member</scope><name>thread_id</name></member>
      <member refid="structdpp_1_1thread__member_1a5dbdfa69bced84ca047f45fa329904c5" prot="public" virt="non-virtual"><scope>dpp::thread_member</scope><name>user_id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
