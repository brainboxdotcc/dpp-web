<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1guild__update__t" kind="struct" prot="public">
    <compoundname>dpp::guild_update_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1guild__update__t_1a713b4bd961d45764e5903f85fb8ef9a2" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::guild_update_t::updated</definition>
        <argsstring></argsstring>
        <name>updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="613" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1guild__update__t_1ac55c2959d69f9852abe93f07101659da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::guild_update_t::guild_update_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>guild_update_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="612" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="127" bodyend="127"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Guild update. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="11325">
        <label>dpp::guild_update_t</label>
        <link refid="structdpp_1_1guild__update__t"/>
        <childnode refid="11326" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11326">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11406">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="11344">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="11343" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="11336" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="11345" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="11347" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="11350" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="11329" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="11353" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="11340">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="11341" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="11342" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="11370">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11385">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="11371">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="11418">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="11335" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11419" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="11329" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="11421">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="11335" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11422" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11411">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="11398">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="11347">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="11348" relation="public-inheritance">
        </childnode>
        <childnode refid="11349" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="11350" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11351" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="11329" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="11352" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="11356">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="11327">
        <label>dpp::guild_update_t</label>
        <link refid="structdpp_1_1guild__update__t"/>
        <childnode refid="11328" relation="public-inheritance">
        </childnode>
        <childnode refid="11420" relation="usage">
          <edgelabel>updated</edgelabel>
        </childnode>
      </node>
      <node id="11400">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="11372">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="11402">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="11424">
        <label>region</label>
      </node>
      <node id="11412">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="11338">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="11426">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="11335" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11351" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11329" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="11331" relation="usage">
          <edgelabel>shard</edgelabel>
        </childnode>
      </node>
      <node id="11353">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="11354" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="11355" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="11356" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="11357" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="11358" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="11359" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="11360" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="11361" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="11362" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="11363" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="11364" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="11365" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="11366" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="11367" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="11368" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="11369" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="11370" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="11371" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="11372" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="11373" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="11374" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="11375" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="11376" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="11377" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="11378" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="11379" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="11380" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="11381" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="11382" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="11383" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="11384" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="11385" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="11386" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="11387" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="11388" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="11389" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="11390" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="11391" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="11392" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="11393" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="11394" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="11395" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="11396" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="11397" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="11398" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="11399" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="11400" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="11401" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="11402" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="11403" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="11404" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="11405" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="11406" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="11407" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="11408" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="11409" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="11410" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="11411" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="11412" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="11413" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="11414" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="11422">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="11336" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="11335" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="11351" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11329" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="11423" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="11360">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="11367">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="11409">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="11335">
        <label>uint64_t</label>
      </node>
      <node id="11404">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11401">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11387">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="11381">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="11369">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="11358">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11377">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="11394">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="11391">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11414">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="11349">
        <label>uint16_t</label>
      </node>
      <node id="11379">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="11336">
        <label>time_t</label>
      </node>
      <node id="11330">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="11413">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11390">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="11419">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="11332" relation="public-inheritance">
        </childnode>
        <childnode refid="11335" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11336" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="11344" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="11350" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="11329" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="11339" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="11416" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="11352">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="11335" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="11389">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="11378">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="11343">
        <label>double</label>
      </node>
      <node id="11333">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="11334" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="11335" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="11336" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="11337" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="11338" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="11339" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="11329" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="11340" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="11388">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11410">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="11350">
        <label>uint32_t</label>
      </node>
      <node id="11408">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="11328">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="11329" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="11331" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="11351">
        <label>uint8_t</label>
      </node>
      <node id="11393">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="11425">
        <label>std::map&lt; snowflake, dpp::voicestate &gt;</label>
        <childnode refid="11335" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11426" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11346">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="11332">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="11333" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11345">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="11346" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="11362">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="11374">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="11359">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="11382">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="11384">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="11417">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="11335" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11418" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11334">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="11376">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11331">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="11332" relation="public-inheritance">
        </childnode>
        <childnode refid="11343" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="11335" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="11336" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="11344" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="11415" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="11350" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="11339" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="11329" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="11416" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="11417" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="11383">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="11341">
        <label>SSL *</label>
      </node>
      <node id="11348">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="11335" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="11396">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="11397">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="11405">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="11342">
        <label>SSL_CTX *</label>
      </node>
      <node id="11392">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="11415">
        <label>mutex</label>
      </node>
      <node id="11403">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11361">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="11380">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="11386">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="11399">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="11339">
        <label>bool</label>
      </node>
      <node id="11337">
        <label>SOCKET</label>
      </node>
      <node id="11420">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="11348" relation="public-inheritance">
        </childnode>
        <childnode refid="11335" relation="usage">
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="11421" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="11424" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="11349" relation="usage">
          <edgelabel>shard_id</edgelabel>
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
        </childnode>
        <childnode refid="11350" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="11351" relation="usage">
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>verification_level</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>premium_tier</edgelabel>
        </childnode>
        <childnode refid="11329" relation="usage">
          <edgelabel>vanity_url_code</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="11425" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
        <childnode refid="11423" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="11352" relation="usage">
          <edgelabel>splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
        </childnode>
      </node>
      <node id="11375">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="11407">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="11365">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11357">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11354">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="11373">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11395">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="11355">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="11368">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="11364">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="11423">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="11335" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11416">
        <label>native_handle_type</label>
      </node>
      <node id="11366">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11329">
        <label>std::string</label>
        <childnode refid="11330" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11363">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="607" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="607" bodyend="614"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::guild_update_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::guild_update_t</scope><name>from</name></member>
      <member refid="structdpp_1_1guild__update__t_1ac55c2959d69f9852abe93f07101659da" prot="public" virt="non-virtual"><scope>dpp::guild_update_t</scope><name>guild_update_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::guild_update_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1guild__update__t_1a713b4bd961d45764e5903f85fb8ef9a2" prot="public" virt="non-virtual"><scope>dpp::guild_update_t</scope><name>updated</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
