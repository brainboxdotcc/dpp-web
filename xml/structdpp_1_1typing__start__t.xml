<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1typing__start__t" kind="struct" prot="public">
    <compoundname>dpp::typing_start_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1typing__start__t_1a1af4c9392721323617f909e2d74d85cb" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1guild" kindref="compound">guild</ref> *</type>
        <definition>guild* dpp::typing_start_t::typing_guild</definition>
        <argsstring></argsstring>
        <name>typing_guild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="384" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1typing__start__t_1a0803971e8cf5e1d411ebbc521c68d046" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1channel" kindref="compound">channel</ref> *</type>
        <definition>channel* dpp::typing_start_t::typing_channel</definition>
        <argsstring></argsstring>
        <name>typing_channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="385" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1typing__start__t_1a9faffa3da5cb3907651ad92613a11a35" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1user" kindref="compound">user</ref> *</type>
        <definition>user* dpp::typing_start_t::typing_user</definition>
        <argsstring></argsstring>
        <name>typing_user</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="386" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1typing__start__t_1a9bd3028990dec19b65e046d918074676" prot="public" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t dpp::typing_start_t::timestamp</definition>
        <argsstring></argsstring>
        <name>timestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="387" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1typing__start__t_1a806b74ba396ab577fb3b4268b169c9ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::typing_start_t::typing_start_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>typing_start_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="383" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="110" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Typing start. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="14697">
        <label>dpp::typing_start_t</label>
        <link refid="structdpp_1_1typing__start__t"/>
        <childnode refid="14698" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14698">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14778">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="14716">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="14715" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="14708" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="14717" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="14719" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="14722" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="14701" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="14725" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="14712">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="14713" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="14714" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="14742">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14757">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="14743">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="14790">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="14707" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="14791" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="14701" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="14793">
        <label>std::unordered_map&lt; snowflake, guild_member &gt;</label>
        <childnode refid="14707" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14794" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14783">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="14770">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="14719">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="14720" relation="public-inheritance">
        </childnode>
        <childnode refid="14721" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="14722" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="14723" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="14701" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="14724" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="14728">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="14772">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="14744">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="14774">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="14801">
        <label>std::vector&lt; dpp::permission_overwrite &gt;</label>
        <childnode refid="14802" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14796">
        <label>region</label>
      </node>
      <node id="14784">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="14710">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="14798">
        <label>dpp::voicestate</label>
        <link refid="classdpp_1_1voicestate"/>
        <childnode refid="14707" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="14723" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="14701" relation="usage">
          <edgelabel>session_id</edgelabel>
        </childnode>
        <childnode refid="14703" relation="usage">
          <edgelabel>shard</edgelabel>
        </childnode>
      </node>
      <node id="14699">
        <label>dpp::typing_start_t</label>
        <link refid="structdpp_1_1typing__start__t"/>
        <childnode refid="14700" relation="public-inheritance">
        </childnode>
        <childnode refid="14792" relation="usage">
          <edgelabel>typing_guild</edgelabel>
        </childnode>
        <childnode refid="14708" relation="usage">
          <edgelabel>timestamp</edgelabel>
        </childnode>
        <childnode refid="14719" relation="usage">
          <edgelabel>typing_user</edgelabel>
        </childnode>
        <childnode refid="14799" relation="usage">
          <edgelabel>typing_channel</edgelabel>
        </childnode>
      </node>
      <node id="14725">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="14726" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="14727" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="14728" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="14729" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="14730" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="14731" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="14732" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="14733" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="14734" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="14735" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="14736" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="14737" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="14738" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="14739" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="14740" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="14741" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="14742" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="14743" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="14744" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="14745" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="14746" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="14747" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="14748" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="14749" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="14750" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="14751" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="14752" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="14753" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="14754" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="14755" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="14756" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="14757" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="14758" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="14759" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="14760" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="14761" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="14762" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="14763" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="14764" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="14765" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="14766" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="14767" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="14768" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="14769" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="14770" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="14771" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="14772" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="14773" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="14774" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="14775" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="14776" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="14777" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="14778" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="14779" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="14780" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="14781" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="14782" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="14783" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="14784" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="14785" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="14786" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="14794">
        <label>dpp::guild_member</label>
        <link refid="classdpp_1_1guild__member"/>
        <childnode refid="14708" relation="usage">
          <edgelabel>joined_at</edgelabel>
          <edgelabel>premium_since</edgelabel>
        </childnode>
        <childnode refid="14707" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
        </childnode>
        <childnode refid="14723" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="14701" relation="usage">
          <edgelabel>nickname</edgelabel>
        </childnode>
        <childnode refid="14795" relation="usage">
          <edgelabel>roles</edgelabel>
        </childnode>
      </node>
      <node id="14732">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="14739">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="14781">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="14707">
        <label>uint64_t</label>
      </node>
      <node id="14776">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14773">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14759">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="14800">
        <label>dpp::thread_metadata</label>
        <link refid="structdpp_1_1thread__metadata"/>
        <childnode refid="14708" relation="usage">
          <edgelabel>archive_timestamp</edgelabel>
        </childnode>
        <childnode refid="14721" relation="usage">
          <edgelabel>auto_archive_duration</edgelabel>
        </childnode>
        <childnode refid="14711" relation="usage">
          <edgelabel>archived</edgelabel>
          <edgelabel>locked</edgelabel>
        </childnode>
      </node>
      <node id="14753">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="14741">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="14730">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14749">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="14766">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="14763">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14786">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="14721">
        <label>uint16_t</label>
      </node>
      <node id="14751">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="14708">
        <label>time_t</label>
      </node>
      <node id="14702">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="14785">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="14762">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="14791">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="14704" relation="public-inheritance">
        </childnode>
        <childnode refid="14707" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="14708" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="14716" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="14722" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="14701" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="14711" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="14788" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="14724">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="14707" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="14761">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="14750">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="14715">
        <label>double</label>
      </node>
      <node id="14705">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="14706" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="14707" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="14708" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="14709" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="14710" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="14711" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="14701" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="14712" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="14760">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14782">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="14722">
        <label>uint32_t</label>
      </node>
      <node id="14780">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="14700">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="14701" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="14703" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="14723">
        <label>uint8_t</label>
      </node>
      <node id="14765">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="14797">
        <label>std::map&lt; snowflake, dpp::voicestate &gt;</label>
        <childnode refid="14707" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14798" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14718">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="14704">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="14705" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14717">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="14718" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="14734">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="14746">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="14731">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="14754">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="14756">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="14789">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="14707" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14790" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14706">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="14748">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14703">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="14704" relation="public-inheritance">
        </childnode>
        <childnode refid="14715" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="14707" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="14708" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="14716" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="14787" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="14722" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="14711" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="14701" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="14788" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="14789" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="14755">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="14713">
        <label>SSL *</label>
      </node>
      <node id="14720">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="14707" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="14768">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="14799">
        <label>dpp::channel</label>
        <link refid="classdpp_1_1channel"/>
        <childnode refid="14720" relation="public-inheritance">
        </childnode>
        <childnode refid="14800" relation="usage">
          <edgelabel>metadata</edgelabel>
        </childnode>
        <childnode refid="14708" relation="usage">
          <edgelabel>last_pin_timestamp</edgelabel>
        </childnode>
        <childnode refid="14707" relation="usage">
          <edgelabel>parent_id</edgelabel>
          <edgelabel>last_message_id</edgelabel>
          <edgelabel>guild_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
        </childnode>
        <childnode refid="14721" relation="usage">
          <edgelabel>rate_limit_per_user</edgelabel>
          <edgelabel>position</edgelabel>
        </childnode>
        <childnode refid="14701" relation="usage">
          <edgelabel>topic</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="14723" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>user_limit</edgelabel>
          <edgelabel>message_count</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="14795" relation="usage">
          <edgelabel>recipients</edgelabel>
        </childnode>
        <childnode refid="14801" relation="usage">
          <edgelabel>permission_overwrites</edgelabel>
        </childnode>
      </node>
      <node id="14769">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="14777">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="14714">
        <label>SSL_CTX *</label>
      </node>
      <node id="14764">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="14787">
        <label>mutex</label>
      </node>
      <node id="14775">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14802">
        <label>dpp::permission_overwrite</label>
        <link refid="structdpp_1_1permission__overwrite"/>
        <childnode refid="14707" relation="usage">
          <edgelabel>allow</edgelabel>
          <edgelabel>deny</edgelabel>
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="14723" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="14733">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="14752">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="14758">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="14771">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="14711">
        <label>bool</label>
      </node>
      <node id="14709">
        <label>SOCKET</label>
      </node>
      <node id="14792">
        <label>dpp::guild</label>
        <link refid="classdpp_1_1guild"/>
        <childnode refid="14720" relation="public-inheritance">
        </childnode>
        <childnode refid="14707" relation="usage">
          <edgelabel>rules_channel_id</edgelabel>
          <edgelabel>system_channel_id</edgelabel>
          <edgelabel>owner_id</edgelabel>
          <edgelabel>widget_channel_id</edgelabel>
          <edgelabel>public_updates_channel_id</edgelabel>
          <edgelabel>afk_channel_id</edgelabel>
          <edgelabel>application_id</edgelabel>
        </childnode>
        <childnode refid="14793" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
        <childnode refid="14796" relation="usage">
          <edgelabel>voice_region</edgelabel>
        </childnode>
        <childnode refid="14721" relation="usage">
          <edgelabel>shard_id</edgelabel>
          <edgelabel>max_video_channel_users</edgelabel>
          <edgelabel>premium_subscription_count</edgelabel>
        </childnode>
        <childnode refid="14722" relation="usage">
          <edgelabel>flags</edgelabel>
          <edgelabel>member_count</edgelabel>
        </childnode>
        <childnode refid="14723" relation="usage">
          <edgelabel>default_message_notifications</edgelabel>
          <edgelabel>explicit_content_filter</edgelabel>
          <edgelabel>verification_level</edgelabel>
          <edgelabel>mfa_level</edgelabel>
          <edgelabel>afk_timeout</edgelabel>
          <edgelabel>premium_tier</edgelabel>
        </childnode>
        <childnode refid="14701" relation="usage">
          <edgelabel>vanity_url_code</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="14797" relation="usage">
          <edgelabel>voice_members</edgelabel>
        </childnode>
        <childnode refid="14795" relation="usage">
          <edgelabel>roles</edgelabel>
          <edgelabel>threads</edgelabel>
          <edgelabel>emojis</edgelabel>
          <edgelabel>channels</edgelabel>
        </childnode>
        <childnode refid="14724" relation="usage">
          <edgelabel>splash</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>banner</edgelabel>
          <edgelabel>discovery_splash</edgelabel>
        </childnode>
      </node>
      <node id="14747">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="14779">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="14737">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="14729">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14726">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="14745">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="14767">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="14727">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="14740">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="14736">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="14795">
        <label>std::vector&lt; snowflake &gt;</label>
        <childnode refid="14707" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14788">
        <label>native_handle_type</label>
      </node>
      <node id="14738">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="14701">
        <label>std::string</label>
        <childnode refid="14702" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14735">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="378" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="378" bodyend="388"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::typing_start_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::typing_start_t</scope><name>from</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::typing_start_t</scope><name>raw_event</name></member>
      <member refid="structdpp_1_1typing__start__t_1a9bd3028990dec19b65e046d918074676" prot="public" virt="non-virtual"><scope>dpp::typing_start_t</scope><name>timestamp</name></member>
      <member refid="structdpp_1_1typing__start__t_1a0803971e8cf5e1d411ebbc521c68d046" prot="public" virt="non-virtual"><scope>dpp::typing_start_t</scope><name>typing_channel</name></member>
      <member refid="structdpp_1_1typing__start__t_1a1af4c9392721323617f909e2d74d85cb" prot="public" virt="non-virtual"><scope>dpp::typing_start_t</scope><name>typing_guild</name></member>
      <member refid="structdpp_1_1typing__start__t_1a806b74ba396ab577fb3b4268b169c9ad" prot="public" virt="non-virtual"><scope>dpp::typing_start_t</scope><name>typing_start_t</name></member>
      <member refid="structdpp_1_1typing__start__t_1a9faffa3da5cb3907651ad92613a11a35" prot="public" virt="non-virtual"><scope>dpp::typing_start_t</scope><name>typing_user</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
