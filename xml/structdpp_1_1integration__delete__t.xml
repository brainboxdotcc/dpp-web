<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1integration__delete__t" kind="struct" prot="public">
    <compoundname>dpp::integration_delete_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1integration__delete__t_1a1a29b8f92d060f66b09d0b8e2a4afed2" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1integration" kindref="compound">integration</ref></type>
        <definition>integration dpp::integration_delete_t::deleted_integration</definition>
        <argsstring></argsstring>
        <name>deleted_integration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="740" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1integration__delete__t_1a10e6ef2e6d352e1a9f810acb95769164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::integration_delete_t::integration_delete_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>integration_delete_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="739" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="139" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Integration delete. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="11759">
        <label>dpp::integration_delete_t</label>
        <link refid="structdpp_1_1integration__delete__t"/>
        <childnode refid="11760" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11760">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11840">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="11778">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="11777" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="11770" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="11779" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="11781" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="11784" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="11763" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="11787" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="11774">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="11775" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="11776" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="11804">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11819">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="11805">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="11852">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="11769" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11853" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="11763" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="11845">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="11832">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="11781">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="11782" relation="public-inheritance">
        </childnode>
        <childnode refid="11783" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="11784" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11785" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="11763" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="11786" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="11790">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="11834">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="11806">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="11836">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="11846">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="11772">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="11787">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="11788" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="11789" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="11790" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="11791" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="11792" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="11793" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="11794" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="11795" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="11796" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="11797" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="11798" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="11799" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="11800" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="11801" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="11802" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="11803" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="11804" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="11805" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="11806" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="11807" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="11808" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="11809" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="11810" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="11811" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="11812" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="11813" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="11814" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="11815" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="11816" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="11817" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="11818" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="11819" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="11820" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="11821" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="11822" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="11823" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="11824" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="11825" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="11826" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="11827" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="11828" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="11829" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="11830" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="11831" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="11832" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="11833" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="11834" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="11835" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="11836" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="11837" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="11838" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="11839" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="11840" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="11841" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="11842" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="11843" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="11844" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="11845" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="11846" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="11847" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="11848" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="11761">
        <label>dpp::integration_delete_t</label>
        <link refid="structdpp_1_1integration__delete__t"/>
        <childnode refid="11762" relation="public-inheritance">
        </childnode>
        <childnode refid="11854" relation="usage">
          <edgelabel>deleted_integration</edgelabel>
        </childnode>
      </node>
      <node id="11794">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="11801">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="11856">
        <label>integration_type</label>
      </node>
      <node id="11843">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="11769">
        <label>uint64_t</label>
      </node>
      <node id="11838">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11835">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11821">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="11815">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="11803">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="11792">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11811">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="11828">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="11825">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11848">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="11783">
        <label>uint16_t</label>
      </node>
      <node id="11813">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="11770">
        <label>time_t</label>
      </node>
      <node id="11764">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="11847">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11824">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="11853">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="11766" relation="public-inheritance">
        </childnode>
        <childnode refid="11769" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11770" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="11778" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="11784" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="11763" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="11773" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="11850" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="11786">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="11769" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="11823">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="11812">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="11777">
        <label>double</label>
      </node>
      <node id="11767">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="11768" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="11769" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="11770" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="11771" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="11772" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="11773" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="11763" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="11774" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="11822">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11844">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="11784">
        <label>uint32_t</label>
      </node>
      <node id="11842">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="11762">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="11763" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="11765" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="11785">
        <label>uint8_t</label>
      </node>
      <node id="11827">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="11780">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="11766">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="11767" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11779">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="11780" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="11796">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="11808">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="11793">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="11816">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="11818">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="11851">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="11769" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11852" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11768">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="11810">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11765">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="11766" relation="public-inheritance">
        </childnode>
        <childnode refid="11777" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="11769" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="11770" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="11778" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="11849" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="11784" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="11773" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="11763" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="11850" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="11851" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="11817">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="11775">
        <label>SSL *</label>
      </node>
      <node id="11782">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="11769" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="11830">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="11831">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="11839">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="11776">
        <label>SSL_CTX *</label>
      </node>
      <node id="11826">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="11849">
        <label>mutex</label>
      </node>
      <node id="11837">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11795">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="11814">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="11820">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="11833">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="11773">
        <label>bool</label>
      </node>
      <node id="11771">
        <label>SOCKET</label>
      </node>
      <node id="11809">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="11854">
        <label>dpp::integration</label>
        <link refid="classdpp_1_1integration"/>
        <childnode refid="11782" relation="public-inheritance">
        </childnode>
        <childnode refid="11770" relation="usage">
          <edgelabel>synced_at</edgelabel>
        </childnode>
        <childnode refid="11769" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>role_id</edgelabel>
        </childnode>
        <childnode refid="11855" relation="usage">
          <edgelabel>app</edgelabel>
        </childnode>
        <childnode refid="11784" relation="usage">
          <edgelabel>subscriber_count</edgelabel>
          <edgelabel>expire_grace_period</edgelabel>
        </childnode>
        <childnode refid="11856" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="11785" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11763" relation="usage">
          <edgelabel>account_id</edgelabel>
          <edgelabel>account_name</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="11841">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="11799">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11791">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11788">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="11807">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11829">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="11789">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="11802">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="11798">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="11850">
        <label>native_handle_type</label>
      </node>
      <node id="11800">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11763">
        <label>std::string</label>
        <childnode refid="11764" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11797">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
      <node id="11855">
        <label>dpp::integration_app</label>
        <link refid="structdpp_1_1integration__app"/>
        <childnode refid="11769" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="11781" relation="usage">
          <edgelabel>bot</edgelabel>
        </childnode>
        <childnode refid="11763" relation="usage">
          <edgelabel>summary</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="733" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="733" bodyend="741"/>
    <listofallmembers>
      <member refid="structdpp_1_1integration__delete__t_1a1a29b8f92d060f66b09d0b8e2a4afed2" prot="public" virt="non-virtual"><scope>dpp::integration_delete_t</scope><name>deleted_integration</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::integration_delete_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::integration_delete_t</scope><name>from</name></member>
      <member refid="structdpp_1_1integration__delete__t_1a10e6ef2e6d352e1a9f810acb95769164" prot="public" virt="non-virtual"><scope>dpp::integration_delete_t</scope><name>integration_delete_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::integration_delete_t</scope><name>raw_event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
