<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="structdpp_1_1integration__delete__t" kind="struct" prot="public">
    <compoundname>dpp::integration_delete_t</compoundname>
    <basecompoundref refid="structdpp_1_1event__dispatch__t" prot="public" virt="non-virtual">dpp::event_dispatch_t</basecompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1integration__delete__t_1a1a29b8f92d060f66b09d0b8e2a4afed2" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1integration" kindref="compound">integration</ref></type>
        <definition>integration dpp::integration_delete_t::deleted_integration</definition>
        <argsstring></argsstring>
        <name>deleted_integration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="740" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw event text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="40" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shard the event came from </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="43" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1integration__delete__t_1a10e6ef2e6d352e1a9f810acb95769164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::integration_delete_t::integration_delete_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>integration_delete_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event text as JSON </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/brain/D++/include/dpp/dispatcher.h" line="739" column="1" bodyfile="/home/brain/D++/src/dpp/dispatcher.cpp" bodystart="139" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Integration delete. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="11593">
        <label>dpp::integration_delete_t</label>
        <link refid="structdpp_1_1integration__delete__t"/>
        <childnode refid="11594" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11594">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11674">
        <label>function&lt; void(const dpp::guild_integrations_update_t &amp;event)&gt;</label>
      </node>
      <node id="11612">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="11611" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="11604" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="11613" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="11615" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="11618" relation="usage">
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>numshards</edgelabel>
          <edgelabel>intents</edgelabel>
        </childnode>
        <childnode refid="11597" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="11621" relation="usage">
          <edgelabel>dispatch</edgelabel>
        </childnode>
      </node>
      <node id="11608">
        <label>dpp::opensslcontext</label>
        <link refid="classdpp_1_1opensslcontext"/>
        <childnode refid="11609" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="11610" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
      <node id="11638">
        <label>function&lt; void(const dpp::stage_instance_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11653">
        <label>function&lt; void(const dpp::message_create_t &amp;event)&gt;</label>
      </node>
      <node id="11639">
        <label>function&lt; void(const dpp::thread_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="11686">
        <label>dpp::voiceconn</label>
        <link refid="classdpp_1_1voiceconn"/>
        <childnode refid="11603" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11687" relation="usage">
          <edgelabel>voiceclient</edgelabel>
        </childnode>
        <childnode refid="11597" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>session_id</edgelabel>
          <edgelabel>websocket_hostname</edgelabel>
        </childnode>
      </node>
      <node id="11679">
        <label>function&lt; void(const dpp::voice_buffer_send_t &amp;event)&gt;</label>
      </node>
      <node id="11666">
        <label>function&lt; void(const dpp::user_update_t &amp;event)&gt;</label>
      </node>
      <node id="11615">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="11616" relation="public-inheritance">
        </childnode>
        <childnode refid="11617" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="11618" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11619" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
        <childnode refid="11597" relation="usage">
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="11620" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
      </node>
      <node id="11624">
        <label>function&lt; void(const dpp::thread_members_update_t &amp;event)&gt;</label>
      </node>
      <node id="11668">
        <label>function&lt; void(const dpp::invite_create_t &amp;event)&gt;</label>
      </node>
      <node id="11640">
        <label>function&lt; void(const dpp::guild_create_t &amp;event)&gt;</label>
      </node>
      <node id="11670">
        <label>function&lt; void(const dpp::guild_emojis_update_t &amp;event)&gt;</label>
      </node>
      <node id="11680">
        <label>function&lt; void(const dpp::guild_member_update_t &amp;event)&gt;</label>
      </node>
      <node id="11606">
        <label>function&lt; int()&gt;</label>
      </node>
      <node id="11621">
        <label>dpp::dispatcher</label>
        <link refid="classdpp_1_1dispatcher"/>
        <childnode refid="11622" relation="usage">
          <edgelabel>guild_role_create</edgelabel>
        </childnode>
        <childnode refid="11623" relation="usage">
          <edgelabel>voice_state_update</edgelabel>
        </childnode>
        <childnode refid="11624" relation="usage">
          <edgelabel>thread_members_update</edgelabel>
        </childnode>
        <childnode refid="11625" relation="usage">
          <edgelabel>channel_delete</edgelabel>
        </childnode>
        <childnode refid="11626" relation="usage">
          <edgelabel>thread_delete</edgelabel>
        </childnode>
        <childnode refid="11627" relation="usage">
          <edgelabel>integration_update</edgelabel>
        </childnode>
        <childnode refid="11628" relation="usage">
          <edgelabel>message_reaction_remove_emoji</edgelabel>
        </childnode>
        <childnode refid="11629" relation="usage">
          <edgelabel>resumed</edgelabel>
        </childnode>
        <childnode refid="11630" relation="usage">
          <edgelabel>presence_update</edgelabel>
        </childnode>
        <childnode refid="11631" relation="usage">
          <edgelabel>message_delete_bulk</edgelabel>
        </childnode>
        <childnode refid="11632" relation="usage">
          <edgelabel>voice_ready</edgelabel>
        </childnode>
        <childnode refid="11633" relation="usage">
          <edgelabel>guild_ban_remove</edgelabel>
        </childnode>
        <childnode refid="11634" relation="usage">
          <edgelabel>guild_role_delete</edgelabel>
        </childnode>
        <childnode refid="11635" relation="usage">
          <edgelabel>channel_update</edgelabel>
        </childnode>
        <childnode refid="11636" relation="usage">
          <edgelabel>stickers_update</edgelabel>
        </childnode>
        <childnode refid="11637" relation="usage">
          <edgelabel>guild_members_chunk</edgelabel>
        </childnode>
        <childnode refid="11638" relation="usage">
          <edgelabel>stage_instance_delete</edgelabel>
        </childnode>
        <childnode refid="11639" relation="usage">
          <edgelabel>thread_member_update</edgelabel>
        </childnode>
        <childnode refid="11640" relation="usage">
          <edgelabel>guild_create</edgelabel>
        </childnode>
        <childnode refid="11641" relation="usage">
          <edgelabel>message_reaction_remove</edgelabel>
        </childnode>
        <childnode refid="11642" relation="usage">
          <edgelabel>select_click</edgelabel>
        </childnode>
        <childnode refid="11643" relation="usage">
          <edgelabel>interaction_create</edgelabel>
        </childnode>
        <childnode refid="11644" relation="usage">
          <edgelabel>guild_join_request_delete</edgelabel>
        </childnode>
        <childnode refid="11645" relation="usage">
          <edgelabel>guild_member_add</edgelabel>
        </childnode>
        <childnode refid="11646" relation="usage">
          <edgelabel>voice_user_talking</edgelabel>
        </childnode>
        <childnode refid="11647" relation="usage">
          <edgelabel>thread_create</edgelabel>
        </childnode>
        <childnode refid="11648" relation="usage">
          <edgelabel>application_command_create</edgelabel>
        </childnode>
        <childnode refid="11649" relation="usage">
          <edgelabel>button_click</edgelabel>
        </childnode>
        <childnode refid="11650" relation="usage">
          <edgelabel>guild_update</edgelabel>
        </childnode>
        <childnode refid="11651" relation="usage">
          <edgelabel>message_reaction_remove_all</edgelabel>
        </childnode>
        <childnode refid="11652" relation="usage">
          <edgelabel>voice_receive</edgelabel>
        </childnode>
        <childnode refid="11653" relation="usage">
          <edgelabel>message_create</edgelabel>
        </childnode>
        <childnode refid="11654" relation="usage">
          <edgelabel>webhooks_update</edgelabel>
        </childnode>
        <childnode refid="11655" relation="usage">
          <edgelabel>message_reaction_add</edgelabel>
        </childnode>
        <childnode refid="11656" relation="usage">
          <edgelabel>message_delete</edgelabel>
        </childnode>
        <childnode refid="11657" relation="usage">
          <edgelabel>voice_track_marker</edgelabel>
        </childnode>
        <childnode refid="11658" relation="usage">
          <edgelabel>thread_list_sync</edgelabel>
        </childnode>
        <childnode refid="11659" relation="usage">
          <edgelabel>integration_delete</edgelabel>
        </childnode>
        <childnode refid="11660" relation="usage">
          <edgelabel>guild_ban_add</edgelabel>
        </childnode>
        <childnode refid="11661" relation="usage">
          <edgelabel>channel_pins_update</edgelabel>
        </childnode>
        <childnode refid="11662" relation="usage">
          <edgelabel>typing_start</edgelabel>
        </childnode>
        <childnode refid="11663" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="11664" relation="usage">
          <edgelabel>thread_update</edgelabel>
        </childnode>
        <childnode refid="11665" relation="usage">
          <edgelabel>integration_create</edgelabel>
        </childnode>
        <childnode refid="11666" relation="usage">
          <edgelabel>user_update</edgelabel>
        </childnode>
        <childnode refid="11667" relation="usage">
          <edgelabel>message_update</edgelabel>
        </childnode>
        <childnode refid="11668" relation="usage">
          <edgelabel>invite_create</edgelabel>
        </childnode>
        <childnode refid="11669" relation="usage">
          <edgelabel>invite_delete</edgelabel>
        </childnode>
        <childnode refid="11670" relation="usage">
          <edgelabel>guild_emojis_update</edgelabel>
        </childnode>
        <childnode refid="11671" relation="usage">
          <edgelabel>guild_delete</edgelabel>
        </childnode>
        <childnode refid="11672" relation="usage">
          <edgelabel>application_command_delete</edgelabel>
        </childnode>
        <childnode refid="11673" relation="usage">
          <edgelabel>application_command_update</edgelabel>
        </childnode>
        <childnode refid="11674" relation="usage">
          <edgelabel>guild_integrations_update</edgelabel>
        </childnode>
        <childnode refid="11675" relation="usage">
          <edgelabel>voice_server_update</edgelabel>
        </childnode>
        <childnode refid="11676" relation="usage">
          <edgelabel>guild_role_update</edgelabel>
        </childnode>
        <childnode refid="11677" relation="usage">
          <edgelabel>channel_create</edgelabel>
        </childnode>
        <childnode refid="11678" relation="usage">
          <edgelabel>stage_instance_create</edgelabel>
        </childnode>
        <childnode refid="11679" relation="usage">
          <edgelabel>voice_buffer_send</edgelabel>
        </childnode>
        <childnode refid="11680" relation="usage">
          <edgelabel>guild_member_update</edgelabel>
        </childnode>
        <childnode refid="11681" relation="usage">
          <edgelabel>guild_member_remove</edgelabel>
        </childnode>
        <childnode refid="11682" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
      </node>
      <node id="11595">
        <label>dpp::integration_delete_t</label>
        <link refid="structdpp_1_1integration__delete__t"/>
        <childnode refid="11596" relation="public-inheritance">
        </childnode>
        <childnode refid="11688" relation="usage">
          <edgelabel>deleted_integration</edgelabel>
        </childnode>
      </node>
      <node id="11628">
        <label>function&lt; void(const dpp::message_reaction_remove_emoji_t &amp;event)&gt;</label>
      </node>
      <node id="11635">
        <label>function&lt; void(const dpp::channel_update_t &amp;event)&gt;</label>
      </node>
      <node id="11690">
        <label>integration_type</label>
      </node>
      <node id="11677">
        <label>function&lt; void(const dpp::channel_create_t &amp;event)&gt;</label>
      </node>
      <node id="11603">
        <label>uint64_t</label>
      </node>
      <node id="11672">
        <label>function&lt; void(const dpp::application_command_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11669">
        <label>function&lt; void(const dpp::invite_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11655">
        <label>function&lt; void(const dpp::message_reaction_add_t &amp;event)&gt;</label>
      </node>
      <node id="11649">
        <label>function&lt; void(const dpp::button_click_t &amp;event)&gt;</label>
      </node>
      <node id="11637">
        <label>function&lt; void(const dpp::guild_members_chunk_t &amp;event)&gt;</label>
      </node>
      <node id="11626">
        <label>function&lt; void(const dpp::thread_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11645">
        <label>function&lt; void(const dpp::guild_member_add_t &amp;event)&gt;</label>
      </node>
      <node id="11662">
        <label>function&lt; void(const dpp::typing_start_t &amp;event)&gt;</label>
      </node>
      <node id="11659">
        <label>function&lt; void(const dpp::integration_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11682">
        <label>function&lt; void(const dpp::log_t &amp;event)&gt;</label>
      </node>
      <node id="11617">
        <label>uint16_t</label>
      </node>
      <node id="11647">
        <label>function&lt; void(const dpp::thread_create_t &amp;event)&gt;</label>
      </node>
      <node id="11604">
        <label>time_t</label>
      </node>
      <node id="11598">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="11681">
        <label>function&lt; void(const dpp::guild_member_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11658">
        <label>function&lt; void(const dpp::thread_list_sync_t &amp;event)&gt;</label>
      </node>
      <node id="11687">
        <label>dpp::discord_voice_client</label>
        <link refid="classdpp_1_1discord__voice__client"/>
        <childnode refid="11600" relation="public-inheritance">
        </childnode>
        <childnode refid="11603" relation="usage">
          <edgelabel>server_id</edgelabel>
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="11604" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="11612" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="11618" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="11597" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="11607" relation="usage">
          <edgelabel>terminating</edgelabel>
          <edgelabel>sodium_initialised</edgelabel>
        </childnode>
        <childnode refid="11684" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
      </node>
      <node id="11620">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="11603" relation="usage">
          <edgelabel>second</edgelabel>
          <edgelabel>first</edgelabel>
        </childnode>
      </node>
      <node id="11657">
        <label>function&lt; void(const dpp::voice_track_marker_t &amp;event)&gt;</label>
      </node>
      <node id="11646">
        <label>function&lt; void(const dpp::voice_user_talking_t &amp;event)&gt;</label>
      </node>
      <node id="11611">
        <label>double</label>
      </node>
      <node id="11601">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="11602" relation="usage">
          <edgelabel>custom_writeable_ready</edgelabel>
          <edgelabel>custom_readable_ready</edgelabel>
        </childnode>
        <childnode refid="11603" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="11604" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="11605" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="11606" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="11607" relation="usage">
          <edgelabel>nonblocking</edgelabel>
        </childnode>
        <childnode refid="11597" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>buffer</edgelabel>
        </childnode>
        <childnode refid="11608" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
      </node>
      <node id="11656">
        <label>function&lt; void(const dpp::message_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11678">
        <label>function&lt; void(const dpp::stage_instance_create_t &amp;event)&gt;</label>
      </node>
      <node id="11618">
        <label>uint32_t</label>
      </node>
      <node id="11676">
        <label>function&lt; void(const dpp::guild_role_update_t &amp;event)&gt;</label>
      </node>
      <node id="11596">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="11597" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="11599" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="11619">
        <label>uint8_t</label>
      </node>
      <node id="11661">
        <label>function&lt; void(const dpp::channel_pins_update_t &amp;event)&gt;</label>
      </node>
      <node id="11614">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="11600">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="11601" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11613">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="11614" relation="usage">
          <edgelabel>role_policy</edgelabel>
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="11630">
        <label>function&lt; void(const dpp::presence_update_t &amp;event)&gt;</label>
      </node>
      <node id="11642">
        <label>function&lt; void(const dpp::select_click_t &amp;event)&gt;</label>
      </node>
      <node id="11627">
        <label>function&lt; void(const dpp::integration_update_t &amp;event)&gt;</label>
      </node>
      <node id="11650">
        <label>function&lt; void(const dpp::guild_update_t &amp;event)&gt;</label>
      </node>
      <node id="11652">
        <label>function&lt; void(const dpp::voice_receive_t &amp;event)&gt;</label>
      </node>
      <node id="11685">
        <label>std::unordered_map&lt; snowflake, dpp::voiceconn * &gt;</label>
        <childnode refid="11603" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11686" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11602">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="11644">
        <label>function&lt; void(const dpp::guild_join_request_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11599">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="11600" relation="public-inheritance">
        </childnode>
        <childnode refid="11611" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="11603" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="11604" relation="usage">
          <edgelabel>last_heartbeat_ack</edgelabel>
          <edgelabel>last_heartbeat</edgelabel>
        </childnode>
        <childnode refid="11612" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="11683" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="11618" relation="usage">
          <edgelabel>reconnects</edgelabel>
          <edgelabel>shard_id</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>heartbeat_interval</edgelabel>
        </childnode>
        <childnode refid="11607" relation="usage">
          <edgelabel>ready</edgelabel>
        </childnode>
        <childnode refid="11597" relation="usage">
          <edgelabel>token</edgelabel>
          <edgelabel>sessionid</edgelabel>
        </childnode>
        <childnode refid="11684" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="11685" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="11651">
        <label>function&lt; void(const dpp::message_reaction_remove_all_t &amp;event)&gt;</label>
      </node>
      <node id="11609">
        <label>SSL *</label>
      </node>
      <node id="11616">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="11603" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="11664">
        <label>function&lt; void(const dpp::thread_update_t &amp;event)&gt;</label>
      </node>
      <node id="11665">
        <label>function&lt; void(const dpp::integration_create_t &amp;event)&gt;</label>
      </node>
      <node id="11673">
        <label>function&lt; void(const dpp::application_command_update_t &amp;event)&gt;</label>
      </node>
      <node id="11610">
        <label>SSL_CTX *</label>
      </node>
      <node id="11660">
        <label>function&lt; void(const dpp::guild_ban_add_t &amp;event)&gt;</label>
      </node>
      <node id="11683">
        <label>mutex</label>
      </node>
      <node id="11671">
        <label>function&lt; void(const dpp::guild_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11629">
        <label>function&lt; void(const dpp::resumed_t &amp;event)&gt;</label>
      </node>
      <node id="11648">
        <label>function&lt; void(const dpp::application_command_create_t &amp;event)&gt;</label>
      </node>
      <node id="11654">
        <label>function&lt; void(const dpp::webhooks_update_t &amp;event)&gt;</label>
      </node>
      <node id="11667">
        <label>function&lt; void(const dpp::message_update_t &amp;event)&gt;</label>
      </node>
      <node id="11607">
        <label>bool</label>
      </node>
      <node id="11605">
        <label>SOCKET</label>
      </node>
      <node id="11643">
        <label>function&lt; void(const dpp::interaction_create_t &amp;event)&gt;</label>
      </node>
      <node id="11688">
        <label>dpp::integration</label>
        <link refid="classdpp_1_1integration"/>
        <childnode refid="11616" relation="public-inheritance">
        </childnode>
        <childnode refid="11604" relation="usage">
          <edgelabel>synced_at</edgelabel>
        </childnode>
        <childnode refid="11603" relation="usage">
          <edgelabel>user_id</edgelabel>
          <edgelabel>role_id</edgelabel>
        </childnode>
        <childnode refid="11689" relation="usage">
          <edgelabel>app</edgelabel>
        </childnode>
        <childnode refid="11618" relation="usage">
          <edgelabel>subscriber_count</edgelabel>
          <edgelabel>expire_grace_period</edgelabel>
        </childnode>
        <childnode refid="11690" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="11619" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="11597" relation="usage">
          <edgelabel>account_id</edgelabel>
          <edgelabel>account_name</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="11675">
        <label>function&lt; void(const dpp::voice_server_update_t &amp;event)&gt;</label>
      </node>
      <node id="11633">
        <label>function&lt; void(const dpp::guild_ban_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11625">
        <label>function&lt; void(const dpp::channel_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11622">
        <label>function&lt; void(const dpp::guild_role_create_t &amp;event)&gt;</label>
      </node>
      <node id="11641">
        <label>function&lt; void(const dpp::message_reaction_remove_t &amp;event)&gt;</label>
      </node>
      <node id="11663">
        <label>function&lt; void(const dpp::ready_t &amp;event)&gt;</label>
      </node>
      <node id="11623">
        <label>function&lt; void(const dpp::voice_state_update_t &amp;event)&gt;</label>
      </node>
      <node id="11636">
        <label>function&lt; void(const dpp::guild_stickers_update_t &amp;event)&gt;</label>
      </node>
      <node id="11632">
        <label>function&lt; void(const dpp::voice_ready_t &amp;event)&gt;</label>
      </node>
      <node id="11684">
        <label>native_handle_type</label>
      </node>
      <node id="11634">
        <label>function&lt; void(const dpp::guild_role_delete_t &amp;event)&gt;</label>
      </node>
      <node id="11597">
        <label>std::string</label>
        <childnode refid="11598" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11631">
        <label>function&lt; void(const dpp::message_delete_bulk_t &amp;event)&gt;</label>
      </node>
      <node id="11689">
        <label>dpp::integration_app</label>
        <link refid="structdpp_1_1integration__app"/>
        <childnode refid="11603" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="11615" relation="usage">
          <edgelabel>bot</edgelabel>
        </childnode>
        <childnode refid="11597" relation="usage">
          <edgelabel>summary</edgelabel>
          <edgelabel>icon</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/brain/D++/include/dpp/dispatcher.h" line="733" column="1" bodyfile="/home/brain/D++/include/dpp/dispatcher.h" bodystart="733" bodyend="741"/>
    <listofallmembers>
      <member refid="structdpp_1_1integration__delete__t_1a1a29b8f92d060f66b09d0b8e2a4afed2" prot="public" virt="non-virtual"><scope>dpp::integration_delete_t</scope><name>deleted_integration</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::integration_delete_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::integration_delete_t</scope><name>from</name></member>
      <member refid="structdpp_1_1integration__delete__t_1a10e6ef2e6d352e1a9f810acb95769164" prot="public" virt="non-virtual"><scope>dpp::integration_delete_t</scope><name>integration_delete_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a2d4777d1049d31ed943ecebfa2de7db9" prot="public" virt="non-virtual"><scope>dpp::integration_delete_t</scope><name>raw_event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
