<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1onboarding__prompt__option" kind="struct" language="C++" prot="public">
    <compoundname>dpp::onboarding_prompt_option</compoundname>
    <basecompoundref refid="classdpp_1_1managed" prot="public" virt="non-virtual">dpp::managed</basecompoundref>
    <basecompoundref refid="structdpp_1_1json__interface" prot="public" virt="non-virtual">dpp::json_interface&lt; onboarding_prompt_option &gt;</basecompoundref>
    <includes local="no">guild.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1onboarding__prompt__option_1aae276e6bf8c43a6240c11b768c03e080" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref> &gt;</type>
        <definition>std::vector&lt;snowflake&gt; dpp::onboarding_prompt_option::channel_ids</definition>
        <argsstring></argsstring>
        <name>channel_ids</name>
        <briefdescription>
<para>IDs for channels a member is added to when the option is selected. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1162" column="13" bodyfile="include/dpp/guild.h" bodystart="1162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1onboarding__prompt__option_1a3b75e42816decb04f2922bc680dcae6c" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::onboarding_prompt_option::description</definition>
        <argsstring></argsstring>
        <name>description</name>
        <briefdescription>
<para>Description of the option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1166" column="13" bodyfile="include/dpp/guild.h" bodystart="1166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1onboarding__prompt__option_1a9b0afd5c2176427e00697569284d4a80" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1emoji" kindref="compound">dpp::emoji</ref></type>
        <definition>dpp::emoji dpp::onboarding_prompt_option::emoji</definition>
        <argsstring></argsstring>
        <name>emoji</name>
        <briefdescription>
<para>Emoji of the option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1164" column="12" bodyfile="include/dpp/guild.h" bodystart="1164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1managed_1a40bf0c6cc03909910512808fa6caa112" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::managed::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>Unique ID of object set by Discord. This value contains a timestamp, worker ID, internal server ID, and an incrementing value. Only the timestamp is relevant to us as useful metadata. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/managed.h" line="39" column="11" bodyfile="include/dpp/managed.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1onboarding__prompt__option_1a753c0dd9b6835475b05049ce8ff8d1fb" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref> &gt;</type>
        <definition>std::vector&lt;snowflake&gt; dpp::onboarding_prompt_option::role_ids</definition>
        <argsstring></argsstring>
        <name>role_ids</name>
        <briefdescription>
<para>IDs for roles assigned to a member when the option is selected. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1163" column="13" bodyfile="include/dpp/guild.h" bodystart="1163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1onboarding__prompt__option_1a7b607513968309a2ba602b9407f8644e" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::onboarding_prompt_option::title</definition>
        <argsstring></argsstring>
        <name>title</name>
        <briefdescription>
<para>Title of the option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1165" column="13" bodyfile="include/dpp/guild.h" bodystart="1165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1onboarding__prompt__option_1a722f6331a6baebf7d60f0bf417029c4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::onboarding_prompt_option::onboarding_prompt_option</definition>
        <argsstring>()</argsstring>
        <name>onboarding_prompt_option</name>
        <briefdescription>
<para>Construct a new onboarding prompt option object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1onboarding__prompt__option_1aab7cb4ae17caf4a2cc17cb674aac2de3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual dpp::onboarding_prompt_option::~onboarding_prompt_option</definition>
        <argsstring>()=default</argsstring>
        <name>~onboarding_prompt_option</name>
        <briefdescription>
<para>Destroy the onboarding prompt option object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1176" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1onboarding__prompt__option_1a7d6ca5ed70c7557506031b34a53cc9c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string dpp::onboarding_prompt_option::build_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>build_json</name>
        <reimplements refid="structdpp_1_1json__interface_1a287c22f692ee3d25b6f9b320ff35baa1">build_json</reimplements>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Build the json for this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>include the id in the JSON </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string json data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1192" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1onboarding__prompt__option_1a1b4870073fcaef3d7103e46be196b192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1onboarding__prompt__option" kindref="compound">onboarding_prompt_option</ref> &amp;</type>
        <definition>onboarding_prompt_option &amp; dpp::onboarding_prompt_option::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Read class values from json object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>A json object to read from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1184" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1managed_1aa66e351fb6573a9d262ffdb2f47681b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dpp::managed::get_creation_time</definition>
        <argsstring>() const</argsstring>
        <name>get_creation_time</name>
        <briefdescription>
<para>Get the creation time of this object according to Discord. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>double creation time inferred from the snowflake ID. The minimum possible value is the first second of 2015. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/managed.h" line="56" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1managed_1a9f086ed62419d373646e5d0e63667fd5" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::managed::operator!=</definition>
        <argsstring>(const managed &amp;other) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classdpp_1_1managed" kindref="compound">managed</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Comparison operator for comparing two managed objects by id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other object to compare against </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true objects are not the same id </para>
</simplesect>
<simplesect kind="return"><para>false objects are the same id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/managed.h" line="74" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1managed_1aaae075e2919ee153d9c1ed34c41b8a33" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::managed::operator==</definition>
        <argsstring>(const managed &amp;other) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classdpp_1_1managed" kindref="compound">managed</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Comparison operator for comparing two managed objects by id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Other object to compare against </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true objects are the same id </para>
</simplesect>
<simplesect kind="return"><para>false objects are not the same id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/managed.h" line="65" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1onboarding__prompt__option_1a2e10271b8b3cb8d261b1cc6ce2d67299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1onboarding__prompt__option" kindref="compound">onboarding_prompt_option</ref> &amp;</type>
        <definition>onboarding_prompt_option &amp; dpp::onboarding_prompt_option::set_description</definition>
        <argsstring>(const std::string &amp;_description)</argsstring>
        <name>set_description</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_description</declname>
        </param>
        <briefdescription>
<para>Set the description of this onboarding prompt option object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_description</parametername>
</parameternamelist>
<parameterdescription>
<para>The description to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to self, so these method calls may be chained </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1216" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1onboarding__prompt__option_1a07d25cb709af3a1df0383aa8c543122b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1onboarding__prompt__option" kindref="compound">onboarding_prompt_option</ref> &amp;</type>
        <definition>onboarding_prompt_option &amp; dpp::onboarding_prompt_option::set_emoji</definition>
        <argsstring>(const dpp::emoji &amp;_emoji)</argsstring>
        <name>set_emoji</name>
        <param>
          <type>const <ref refid="classdpp_1_1emoji" kindref="compound">dpp::emoji</ref> &amp;</type>
          <declname>_emoji</declname>
        </param>
        <briefdescription>
<para>Set the emoji of this onboarding prompt option object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_emoji</parametername>
</parameternamelist>
<parameterdescription>
<para>The emoji to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to self, so these method calls may be chained </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1200" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1onboarding__prompt__option_1a471ee3f008293accd00867bfd03e0e85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdpp_1_1onboarding__prompt__option" kindref="compound">onboarding_prompt_option</ref> &amp;</type>
        <definition>onboarding_prompt_option &amp; dpp::onboarding_prompt_option::set_title</definition>
        <argsstring>(const std::string &amp;_title)</argsstring>
        <name>set_title</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_title</declname>
        </param>
        <briefdescription>
<para>Set the title of this onboarding prompt option object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_title</parametername>
</parameternamelist>
<parameterdescription>
<para>The title to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to self, so these method calls may be chained </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1208" column="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an onboarding prompt option. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="2">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
      </node>
      <node id="1">
        <label>dpp::onboarding_prompt_option</label>
        <link refid="structdpp_1_1onboarding__prompt__option"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dpp::json_interface&lt; onboarding_prompt_option &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; onboarding_prompt_option &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>dpp::emoji</label>
        <link refid="classdpp_1_1emoji"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>image_data</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>user_id</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="2">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="3" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dpp::onboarding_prompt_option</label>
        <link refid="structdpp_1_1onboarding__prompt__option"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>channel_ids</edgelabel>
          <edgelabel>role_ids</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>emoji</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>description</edgelabel>
          <edgelabel>title</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>dpp::snowflake</label>
        <link refid="classdpp_1_1snowflake"/>
        <childnode refid="4" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>dpp::json_interface&lt; emoji &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; emoji &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>dpp::json_interface&lt; onboarding_prompt_option &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; onboarding_prompt_option &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="10">
        <label>std::string</label>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>vector&lt;</label>
      </node>
      <node id="4">
        <label>uint64_t</label>
      </node>
      <node id="12">
        <label>uint8_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/guild.h" line="1161" column="1" bodyfile="include/dpp/guild.h" bodystart="1161" bodyend="1217"/>
    <listofallmembers>
      <member refid="structdpp_1_1onboarding__prompt__option_1a7d6ca5ed70c7557506031b34a53cc9c2" prot="public" virt="virtual"><scope>dpp::onboarding_prompt_option</scope><name>build_json</name></member>
      <member refid="structdpp_1_1onboarding__prompt__option_1aae276e6bf8c43a6240c11b768c03e080" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>channel_ids</name></member>
      <member refid="structdpp_1_1onboarding__prompt__option_1a3b75e42816decb04f2922bc680dcae6c" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>description</name></member>
      <member refid="structdpp_1_1onboarding__prompt__option_1a9b0afd5c2176427e00697569284d4a80" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>emoji</name></member>
      <member refid="structdpp_1_1onboarding__prompt__option_1a1b4870073fcaef3d7103e46be196b192" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1managed_1aa66e351fb6573a9d262ffdb2f47681b7" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>get_creation_time</name></member>
      <member refid="classdpp_1_1managed_1a40bf0c6cc03909910512808fa6caa112" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>id</name></member>
      <member refid="classdpp_1_1managed_1a30e9c7c9cef4cd42487f0be61aa616d0" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>managed</name></member>
      <member refid="structdpp_1_1onboarding__prompt__option_1a722f6331a6baebf7d60f0bf417029c4e" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>onboarding_prompt_option</name></member>
      <member refid="classdpp_1_1managed_1a9f086ed62419d373646e5d0e63667fd5" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>operator!=</name></member>
      <member refid="classdpp_1_1managed_1aaae075e2919ee153d9c1ed34c41b8a33" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>operator==</name></member>
      <member refid="structdpp_1_1onboarding__prompt__option_1a753c0dd9b6835475b05049ce8ff8d1fb" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>role_ids</name></member>
      <member refid="structdpp_1_1onboarding__prompt__option_1a2e10271b8b3cb8d261b1cc6ce2d67299" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>set_description</name></member>
      <member refid="structdpp_1_1onboarding__prompt__option_1a07d25cb709af3a1df0383aa8c543122b" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>set_emoji</name></member>
      <member refid="structdpp_1_1onboarding__prompt__option_1a471ee3f008293accd00867bfd03e0e85" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>set_title</name></member>
      <member refid="structdpp_1_1onboarding__prompt__option_1a7b607513968309a2ba602b9407f8644e" prot="public" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>title</name></member>
      <member refid="structdpp_1_1json__interface_1a8fea07be649b8bb166c28c5a7daccf53" prot="protected" virt="non-virtual"><scope>dpp::onboarding_prompt_option</scope><name>~json_interface</name></member>
      <member refid="classdpp_1_1managed_1af6f3e41995e49b5ce68772a9fa4b5fad" prot="public" virt="virtual"><scope>dpp::onboarding_prompt_option</scope><name>~managed</name></member>
      <member refid="structdpp_1_1onboarding__prompt__option_1aab7cb4ae17caf4a2cc17cb674aac2de3" prot="public" virt="virtual"><scope>dpp::onboarding_prompt_option</scope><name>~onboarding_prompt_option</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
