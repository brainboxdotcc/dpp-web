<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structdpp_1_1event__dispatch__t" kind="struct" language="C++" prot="public">
    <compoundname>dpp::event_dispatch_t</compoundname>
    <derivedcompoundref refid="structdpp_1_1automod__rule__create__t" prot="public" virt="non-virtual">dpp::automod_rule_create_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1automod__rule__delete__t" prot="public" virt="non-virtual">dpp::automod_rule_delete_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1automod__rule__execute__t" prot="public" virt="non-virtual">dpp::automod_rule_execute_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1automod__rule__update__t" prot="public" virt="non-virtual">dpp::automod_rule_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1channel__create__t" prot="public" virt="non-virtual">dpp::channel_create_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1channel__delete__t" prot="public" virt="non-virtual">dpp::channel_delete_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1channel__pins__update__t" prot="public" virt="non-virtual">dpp::channel_pins_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1channel__update__t" prot="public" virt="non-virtual">dpp::channel_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__audit__log__entry__create__t" prot="public" virt="non-virtual">dpp::guild_audit_log_entry_create_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__ban__add__t" prot="public" virt="non-virtual">dpp::guild_ban_add_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__ban__remove__t" prot="public" virt="non-virtual">dpp::guild_ban_remove_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__create__t" prot="public" virt="non-virtual">dpp::guild_create_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__delete__t" prot="public" virt="non-virtual">dpp::guild_delete_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__emojis__update__t" prot="public" virt="non-virtual">dpp::guild_emojis_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__integrations__update__t" prot="public" virt="non-virtual">dpp::guild_integrations_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__join__request__delete__t" prot="public" virt="non-virtual">dpp::guild_join_request_delete_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__member__add__t" prot="public" virt="non-virtual">dpp::guild_member_add_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__member__remove__t" prot="public" virt="non-virtual">dpp::guild_member_remove_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__member__update__t" prot="public" virt="non-virtual">dpp::guild_member_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__members__chunk__t" prot="public" virt="non-virtual">dpp::guild_members_chunk_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__role__create__t" prot="public" virt="non-virtual">dpp::guild_role_create_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__role__delete__t" prot="public" virt="non-virtual">dpp::guild_role_delete_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__role__update__t" prot="public" virt="non-virtual">dpp::guild_role_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__scheduled__event__create__t" prot="public" virt="non-virtual">dpp::guild_scheduled_event_create_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__scheduled__event__delete__t" prot="public" virt="non-virtual">dpp::guild_scheduled_event_delete_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__scheduled__event__update__t" prot="public" virt="non-virtual">dpp::guild_scheduled_event_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__scheduled__event__user__add__t" prot="public" virt="non-virtual">dpp::guild_scheduled_event_user_add_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__scheduled__event__user__remove__t" prot="public" virt="non-virtual">dpp::guild_scheduled_event_user_remove_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__stickers__update__t" prot="public" virt="non-virtual">dpp::guild_stickers_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1guild__update__t" prot="public" virt="non-virtual">dpp::guild_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1integration__create__t" prot="public" virt="non-virtual">dpp::integration_create_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1integration__delete__t" prot="public" virt="non-virtual">dpp::integration_delete_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1integration__update__t" prot="public" virt="non-virtual">dpp::integration_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1interaction__create__t" prot="public" virt="non-virtual">dpp::interaction_create_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1invite__create__t" prot="public" virt="non-virtual">dpp::invite_create_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1invite__delete__t" prot="public" virt="non-virtual">dpp::invite_delete_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1log__t" prot="public" virt="non-virtual">dpp::log_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1message__create__t" prot="public" virt="non-virtual">dpp::message_create_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1message__delete__bulk__t" prot="public" virt="non-virtual">dpp::message_delete_bulk_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1message__delete__t" prot="public" virt="non-virtual">dpp::message_delete_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1message__reaction__add__t" prot="public" virt="non-virtual">dpp::message_reaction_add_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1message__reaction__remove__all__t" prot="public" virt="non-virtual">dpp::message_reaction_remove_all_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1message__reaction__remove__emoji__t" prot="public" virt="non-virtual">dpp::message_reaction_remove_emoji_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1message__reaction__remove__t" prot="public" virt="non-virtual">dpp::message_reaction_remove_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1message__update__t" prot="public" virt="non-virtual">dpp::message_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1presence__update__t" prot="public" virt="non-virtual">dpp::presence_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1ready__t" prot="public" virt="non-virtual">dpp::ready_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1resumed__t" prot="public" virt="non-virtual">dpp::resumed_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1stage__instance__create__t" prot="public" virt="non-virtual">dpp::stage_instance_create_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1stage__instance__delete__t" prot="public" virt="non-virtual">dpp::stage_instance_delete_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1stage__instance__update__t" prot="public" virt="non-virtual">dpp::stage_instance_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1thread__create__t" prot="public" virt="non-virtual">dpp::thread_create_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1thread__delete__t" prot="public" virt="non-virtual">dpp::thread_delete_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1thread__list__sync__t" prot="public" virt="non-virtual">dpp::thread_list_sync_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1thread__member__update__t" prot="public" virt="non-virtual">dpp::thread_member_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1thread__members__update__t" prot="public" virt="non-virtual">dpp::thread_members_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1thread__update__t" prot="public" virt="non-virtual">dpp::thread_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1typing__start__t" prot="public" virt="non-virtual">dpp::typing_start_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1user__update__t" prot="public" virt="non-virtual">dpp::user_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1voice__buffer__send__t" prot="public" virt="non-virtual">dpp::voice_buffer_send_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1voice__client__disconnect__t" prot="public" virt="non-virtual">dpp::voice_client_disconnect_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1voice__client__speaking__t" prot="public" virt="non-virtual">dpp::voice_client_speaking_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1voice__ready__t" prot="public" virt="non-virtual">dpp::voice_ready_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1voice__receive__t" prot="public" virt="non-virtual">dpp::voice_receive_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1voice__server__update__t" prot="public" virt="non-virtual">dpp::voice_server_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1voice__state__update__t" prot="public" virt="non-virtual">dpp::voice_state_update_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1voice__track__marker__t" prot="public" virt="non-virtual">dpp::voice_track_marker_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1voice__user__talking__t" prot="public" virt="non-virtual">dpp::voice_user_talking_t</derivedcompoundref>
    <derivedcompoundref refid="structdpp_1_1webhooks__update__t" prot="public" virt="non-virtual">dpp::webhooks_update_t</derivedcompoundref>
    <includes local="no">dispatcher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" static="no" mutable="no">
        <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
        <definition>class discord_client* dpp::event_dispatch_t::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
<para>Shard the event came from. Note that for some events, notably voice events, this may be nullptr. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="83" column="22" bodyfile="include/dpp/dispatcher.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdpp_1_1event__dispatch__t_1a22df2fa7e547eaefbd65e501d8bf67b7" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string dpp::event_dispatch_t::raw_event</definition>
        <argsstring></argsstring>
        <name>raw_event</name>
        <briefdescription>
<para>Raw event data. If you are using json on your websocket, this will contain json, and if you are using ETF as your websocket protocol, it will contain raw ETF data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="77" column="19" bodyfile="include/dpp/dispatcher.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::event_dispatch_t::event_dispatch_t</definition>
        <argsstring>(class discord_client *client, const std::string &amp;raw)</argsstring>
        <name>event_dispatch_t</name>
        <param>
          <type>class <ref refid="classdpp_1_1discord__client" kindref="compound">discord_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>raw</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="structdpp_1_1event__dispatch__t" kindref="compound">event_dispatch_t</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The shard the event originated on. May be a nullptr, e.g. for voice events </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw event data as JSON or ETF </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1event__dispatch__t_1a5afbcd36109734ad0fca14ec848b73b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structdpp_1_1event__dispatch__t" kindref="compound">event_dispatch_t</ref> &amp;</type>
        <definition>const event_dispatch_t &amp; dpp::event_dispatch_t::cancel_event</definition>
        <argsstring>() const</argsstring>
        <name>cancel_event</name>
        <briefdescription>
<para>Cancels the event in progress. Any other attached lambdas for this event after this one are not called. Note that event cancellation is a thread local state, and not stored in the object (because object which can be cancelled is <computeroutput>const</computeroutput> during the event, and cannot itself contain the changeable state). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const <ref refid="structdpp_1_1event__dispatch__t" kindref="compound">event_dispatch_t</ref>&amp; reference to self for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="99" column="24"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1event__dispatch__t_1aca2880114f69b7ba62eb5137824c1432" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dpp::event_dispatch_t::is_cancelled</definition>
        <argsstring>() const</argsstring>
        <name>is_cancelled</name>
        <briefdescription>
<para>Returns true if the event is cancelled. Note that event cancellation is a thread local state, and not stored in the object (because object which can be cancelled is <computeroutput>const</computeroutput> during the event, and cannot itself contain the changeable state). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the event is cancelled </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/dispatcher.h" line="107" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base event parameter struct. Each event you receive from the library will have its parameter derived from this class. The class contains the raw event data, and a pointer to the current shard&apos;s <ref refid="classdpp_1_1discord__client" kindref="compound">dpp::discord_client</ref> object. You can also use this object to cancel the current event, meaning that any listeners after yours do not get notified of the current event if you call it. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="36">
        <label>dpp::autocomplete_t</label>
        <link refid="structdpp_1_1autocomplete__t"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dpp::automod_rule_create_t</label>
        <link refid="structdpp_1_1automod__rule__create__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dpp::automod_rule_delete_t</label>
        <link refid="structdpp_1_1automod__rule__delete__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>dpp::automod_rule_execute_t</label>
        <link refid="structdpp_1_1automod__rule__execute__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>dpp::automod_rule_update_t</label>
        <link refid="structdpp_1_1automod__rule__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>dpp::button_click_t</label>
        <link refid="structdpp_1_1button__click__t"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>dpp::channel_create_t</label>
        <link refid="structdpp_1_1channel__create__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>dpp::channel_delete_t</label>
        <link refid="structdpp_1_1channel__delete__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>dpp::channel_pins_update_t</label>
        <link refid="structdpp_1_1channel__pins__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>dpp::channel_update_t</label>
        <link refid="structdpp_1_1channel__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>dpp::context_menu_t</label>
        <link refid="structdpp_1_1context__menu__t"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
      </node>
      <node id="41">
        <label>dpp::form_submit_t</label>
        <link refid="structdpp_1_1form__submit__t"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>dpp::guild_audit_log_entry_create_t</label>
        <link refid="structdpp_1_1guild__audit__log__entry__create__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>dpp::guild_ban_add_t</label>
        <link refid="structdpp_1_1guild__ban__add__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>dpp::guild_ban_remove_t</label>
        <link refid="structdpp_1_1guild__ban__remove__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>dpp::guild_create_t</label>
        <link refid="structdpp_1_1guild__create__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>dpp::guild_delete_t</label>
        <link refid="structdpp_1_1guild__delete__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>dpp::guild_emojis_update_t</label>
        <link refid="structdpp_1_1guild__emojis__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>dpp::guild_integrations_update_t</label>
        <link refid="structdpp_1_1guild__integrations__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>dpp::guild_join_request_delete_t</label>
        <link refid="structdpp_1_1guild__join__request__delete__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>dpp::guild_member_add_t</label>
        <link refid="structdpp_1_1guild__member__add__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>dpp::guild_member_remove_t</label>
        <link refid="structdpp_1_1guild__member__remove__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>dpp::guild_member_update_t</label>
        <link refid="structdpp_1_1guild__member__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>dpp::guild_members_chunk_t</label>
        <link refid="structdpp_1_1guild__members__chunk__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>dpp::guild_role_create_t</label>
        <link refid="structdpp_1_1guild__role__create__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>dpp::guild_role_delete_t</label>
        <link refid="structdpp_1_1guild__role__delete__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>dpp::guild_role_update_t</label>
        <link refid="structdpp_1_1guild__role__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>dpp::guild_scheduled_event_create_t</label>
        <link refid="structdpp_1_1guild__scheduled__event__create__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>dpp::guild_scheduled_event_delete_t</label>
        <link refid="structdpp_1_1guild__scheduled__event__delete__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>dpp::guild_scheduled_event_update_t</label>
        <link refid="structdpp_1_1guild__scheduled__event__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>dpp::guild_scheduled_event_user_add_t</label>
        <link refid="structdpp_1_1guild__scheduled__event__user__add__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>dpp::guild_scheduled_event_user_remove_t</label>
        <link refid="structdpp_1_1guild__scheduled__event__user__remove__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>dpp::guild_stickers_update_t</label>
        <link refid="structdpp_1_1guild__stickers__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>dpp::guild_update_t</label>
        <link refid="structdpp_1_1guild__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>dpp::integration_create_t</label>
        <link refid="structdpp_1_1integration__create__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>dpp::integration_delete_t</label>
        <link refid="structdpp_1_1integration__delete__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>dpp::integration_update_t</label>
        <link refid="structdpp_1_1integration__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>dpp::interaction_create_t</label>
        <link refid="structdpp_1_1interaction__create__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>dpp::invite_create_t</label>
        <link refid="structdpp_1_1invite__create__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>dpp::invite_delete_t</label>
        <link refid="structdpp_1_1invite__delete__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>dpp::log_t</label>
        <link refid="structdpp_1_1log__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>dpp::message_context_menu_t</label>
        <link refid="structdpp_1_1message__context__menu__t"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>dpp::message_create_t</label>
        <link refid="structdpp_1_1message__create__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>dpp::message_delete_bulk_t</label>
        <link refid="structdpp_1_1message__delete__bulk__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>dpp::message_delete_t</label>
        <link refid="structdpp_1_1message__delete__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>dpp::message_reaction_add_t</label>
        <link refid="structdpp_1_1message__reaction__add__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>dpp::message_reaction_remove_all_t</label>
        <link refid="structdpp_1_1message__reaction__remove__all__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>dpp::message_reaction_remove_emoji_t</label>
        <link refid="structdpp_1_1message__reaction__remove__emoji__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>dpp::message_reaction_remove_t</label>
        <link refid="structdpp_1_1message__reaction__remove__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>dpp::message_update_t</label>
        <link refid="structdpp_1_1message__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>dpp::presence_update_t</label>
        <link refid="structdpp_1_1presence__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>dpp::ready_t</label>
        <link refid="structdpp_1_1ready__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>dpp::resumed_t</label>
        <link refid="structdpp_1_1resumed__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>dpp::select_click_t</label>
        <link refid="structdpp_1_1select__click__t"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>dpp::slashcommand_t</label>
        <link refid="structdpp_1_1slashcommand__t"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>dpp::stage_instance_create_t</label>
        <link refid="structdpp_1_1stage__instance__create__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>dpp::stage_instance_delete_t</label>
        <link refid="structdpp_1_1stage__instance__delete__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>dpp::stage_instance_update_t</label>
        <link refid="structdpp_1_1stage__instance__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="61">
        <label>dpp::thread_create_t</label>
        <link refid="structdpp_1_1thread__create__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="62">
        <label>dpp::thread_delete_t</label>
        <link refid="structdpp_1_1thread__delete__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="63">
        <label>dpp::thread_list_sync_t</label>
        <link refid="structdpp_1_1thread__list__sync__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>dpp::thread_member_update_t</label>
        <link refid="structdpp_1_1thread__member__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="65">
        <label>dpp::thread_members_update_t</label>
        <link refid="structdpp_1_1thread__members__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="66">
        <label>dpp::thread_update_t</label>
        <link refid="structdpp_1_1thread__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="67">
        <label>dpp::typing_start_t</label>
        <link refid="structdpp_1_1typing__start__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>dpp::user_context_menu_t</label>
        <link refid="structdpp_1_1user__context__menu__t"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="68">
        <label>dpp::user_update_t</label>
        <link refid="structdpp_1_1user__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>dpp::voice_buffer_send_t</label>
        <link refid="structdpp_1_1voice__buffer__send__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="70">
        <label>dpp::voice_client_disconnect_t</label>
        <link refid="structdpp_1_1voice__client__disconnect__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="71">
        <label>dpp::voice_client_speaking_t</label>
        <link refid="structdpp_1_1voice__client__speaking__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="72">
        <label>dpp::voice_ready_t</label>
        <link refid="structdpp_1_1voice__ready__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="73">
        <label>dpp::voice_receive_t</label>
        <link refid="structdpp_1_1voice__receive__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="74">
        <label>dpp::voice_server_update_t</label>
        <link refid="structdpp_1_1voice__server__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="75">
        <label>dpp::voice_state_update_t</label>
        <link refid="structdpp_1_1voice__state__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="76">
        <label>dpp::voice_track_marker_t</label>
        <link refid="structdpp_1_1voice__track__marker__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>dpp::voice_user_talking_t</label>
        <link refid="structdpp_1_1voice__user__talking__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="78">
        <label>dpp::webhooks_update_t</label>
        <link refid="structdpp_1_1webhooks__update__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>bool</label>
      </node>
      <node id="26">
        <label>cache_policy_setting_t</label>
      </node>
      <node id="16">
        <label>double</label>
      </node>
      <node id="25">
        <label>dpp::cache_policy_t</label>
        <link refid="structdpp_1_1cache__policy__t"/>
        <childnode refid="26" relation="usage">
          <edgelabel>emoji_policy</edgelabel>
          <edgelabel>role_policy</edgelabel>
          <edgelabel>user_policy</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>dpp::cluster</label>
        <link refid="classdpp_1_1cluster"/>
        <childnode refid="2" relation="usage">
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>last_identify</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>cluster_id</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>maxclusters</edgelabel>
          <edgelabel>numshards</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>rest_ping</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>me</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>cache_policy</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>ws_mode</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>terminating</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>on_autocomplete</edgelabel>
          <edgelabel>on_automod_rule_create</edgelabel>
          <edgelabel>on_automod_rule_delete</edgelabel>
          <edgelabel>on_automod_rule_execute</edgelabel>
          <edgelabel>on_automod_rule_update</edgelabel>
          <edgelabel>on_button_click</edgelabel>
          <edgelabel>on_channel_create</edgelabel>
          <edgelabel>on_channel_delete</edgelabel>
          <edgelabel>on_channel_pins_update</edgelabel>
          <edgelabel>on_channel_update</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>dpp::discord_client</label>
        <link refid="classdpp_1_1discord__client"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>ready</edgelabel>
          <edgelabel>terminating</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>creator</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>heartbeat_interval</edgelabel>
          <edgelabel>intents</edgelabel>
          <edgelabel>max_shards</edgelabel>
          <edgelabel>reconnects</edgelabel>
          <edgelabel>resumes</edgelabel>
          <edgelabel>shard_id</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>last_heartbeat</edgelabel>
          <edgelabel>last_heartbeat_ack</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>thread_id</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>last_seq</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>resume_gateway_url</edgelabel>
          <edgelabel>sessionid</edgelabel>
          <edgelabel>token</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>voice_mutex</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>websocket_ping</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>protocol</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>connecting_voice_channels</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dpp::event_dispatch_t</label>
        <link refid="structdpp_1_1event__dispatch__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>raw_event</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="18">
        <label>dpp::managed</label>
        <link refid="classdpp_1_1managed"/>
        <childnode refid="19" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>dpp::snowflake</label>
        <link refid="classdpp_1_1snowflake"/>
        <childnode refid="11" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>dpp::ssl_client</label>
        <link refid="classdpp_1_1ssl__client"/>
        <childnode refid="2" relation="usage">
          <edgelabel>buffer</edgelabel>
          <edgelabel>cipher</edgelabel>
          <edgelabel>hostname</edgelabel>
          <edgelabel>obuffer</edgelabel>
          <edgelabel>port</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>keepalive</edgelabel>
          <edgelabel>make_new</edgelabel>
          <edgelabel>nonblocking</edgelabel>
          <edgelabel>plaintext</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>sfd</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>ssl</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>last_tick</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>bytes_in</edgelabel>
          <edgelabel>bytes_out</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>custom_readable_fd</edgelabel>
          <edgelabel>custom_writeable_fd</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>custom_readable_ready</edgelabel>
          <edgelabel>custom_writeable_ready</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>dpp::user</label>
        <link refid="classdpp_1_1user"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>global_name</edgelabel>
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>avatar</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>discriminator</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>dpp::utility::iconhash</label>
        <link refid="structdpp_1_1utility_1_1iconhash"/>
        <childnode refid="11" relation="usage">
          <edgelabel>first</edgelabel>
          <edgelabel>second</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>dpp::websocket_client</label>
        <link refid="classdpp_1_1websocket__client"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>event_router_t&lt;</label>
      </node>
      <node id="8">
        <label>int</label>
      </node>
      <node id="20">
        <label>dpp::json_interface&lt; user &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="21" relation="template-instance">
          <edgelabel>&lt; user &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>openssl_connection *</label>
      </node>
      <node id="3">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="28">
        <label>condition_variable</label>
      </node>
      <node id="12">
        <label>function&lt; dpp::socket()&gt;</label>
      </node>
      <node id="13">
        <label>function&lt; void()&gt;</label>
      </node>
      <node id="31">
        <label>std::shared_mutex</label>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>native_handle_type</label>
      </node>
      <node id="32">
        <label>unordered_map&lt;</label>
      </node>
      <node id="10">
        <label>time_t</label>
      </node>
      <node id="23">
        <label>uint16_t</label>
      </node>
      <node id="15">
        <label>uint32_t</label>
      </node>
      <node id="11">
        <label>uint64_t</label>
      </node>
      <node id="24">
        <label>uint8_t</label>
      </node>
      <node id="27">
        <label>websocket_protocol_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/dispatcher.h" line="71" column="1" bodyfile="include/dpp/dispatcher.h" bodystart="71" bodyend="108"/>
    <listofallmembers>
      <member refid="structdpp_1_1event__dispatch__t_1a5afbcd36109734ad0fca14ec848b73b7" prot="public" virt="non-virtual"><scope>dpp::event_dispatch_t</scope><name>cancel_event</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a4ac4d287ca94f2389cf68e2534d9e1b0" prot="public" virt="non-virtual"><scope>dpp::event_dispatch_t</scope><name>event_dispatch_t</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a357873be4dd30eef7928ae5f7c13e7db" prot="public" virt="non-virtual"><scope>dpp::event_dispatch_t</scope><name>from</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1aca2880114f69b7ba62eb5137824c1432" prot="public" virt="non-virtual"><scope>dpp::event_dispatch_t</scope><name>is_cancelled</name></member>
      <member refid="structdpp_1_1event__dispatch__t_1a22df2fa7e547eaefbd65e501d8bf67b7" prot="public" virt="non-virtual"><scope>dpp::event_dispatch_t</scope><name>raw_event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
