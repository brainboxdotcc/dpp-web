<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1guild__widget" kind="class" language="C++" prot="public">
    <compoundname>dpp::guild_widget</compoundname>
    <basecompoundref refid="structdpp_1_1json__interface" prot="public" virt="non-virtual">dpp::json_interface&lt; guild_widget &gt;</basecompoundref>
    <includes local="no">guild.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classdpp_1_1guild__widget_1a08fe93379b3b321697f9b34f6b0f9c32" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct json_interface&lt; guild_widget &gt;</definition>
        <argsstring></argsstring>
        <name>json_interface&lt; guild_widget &gt;</name>
        <param>
          <type><ref refid="structdpp_1_1json__interface" kindref="compound">json_interface</ref>&lt; <ref refid="classdpp_1_1guild__widget" kindref="compound">guild_widget</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1659" column="6" bodyfile="include/dpp/guild.h" bodystart="1672" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1guild__widget_1aef9e534b3727d4a2b972e3fd64c54e29" prot="public" static="no" mutable="no">
        <type><ref refid="classdpp_1_1snowflake" kindref="compound">snowflake</ref></type>
        <definition>snowflake dpp::guild_widget::channel_id</definition>
        <argsstring></argsstring>
        <name>channel_id</name>
        <briefdescription>
<para>Channel widget points to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1694" column="11" bodyfile="include/dpp/guild.h" bodystart="1694" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1guild__widget_1aedf956fc1f600b82020271b411eb86c8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dpp::guild_widget::enabled</definition>
        <argsstring></argsstring>
        <name>enabled</name>
        <briefdescription>
<para>True if enabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1699" column="6" bodyfile="include/dpp/guild.h" bodystart="1699" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdpp_1_1guild__widget_1a5c9248544857f22ce0b2db97a4007199" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1guild__widget" kindref="compound">guild_widget</ref> &amp;</type>
        <definition>guild_widget &amp; dpp::guild_widget::fill_from_json_impl</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json_impl</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Build a guild widget from json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>json to build from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classdpp_1_1guild__widget" kindref="compound">guild_widget</ref>&amp; reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1680" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1guild__widget_1afc1c677aad41d0f8a155dd95d45a1adf" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacedpp_1ae9134a9d8edf8adcb87e979bb7a7343e" kindref="member">json</ref></type>
        <definition>json dpp::guild_widget::to_json_impl</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>to_json_impl</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Build json for a guild widget. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Add ID to output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string guild widget stringified json </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1688" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1guild__widget_1af862be6e098acb507a306bc37b6e4ad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::guild_widget::guild_widget</definition>
        <argsstring>()</argsstring>
        <name>guild_widget</name>
        <briefdescription>
<para>Construct a new guild widget object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/guild.h" line="1704" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdpp_1_1guild__widget" kindref="compound">guild_widget</ref> &amp;</type>
        <definition>guild_widget  &amp; dpp::json_interface&lt; guild_widget  &gt;::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Convert object from nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>nlohmann::json object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T&amp; Reference to self for fluent calling </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="44" column="3" bodyfile="include/dpp/json_interface.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto dpp::json_interface&lt; guild_widget  &gt;::to_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>to_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to nlohmann::json. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>json Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="56" column="6" bodyfile="include/dpp/json_interface.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dpp::json_interface&lt; guild_widget  &gt;::build_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>build_json</name>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert object to json string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to include the ID or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Some fields are conditionally filled, do not rely on all fields being present </para>
</simplesect>
<simplesect kind="return"><para>std::string Json built from the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/json_interface.h" line="68" column="13" bodyfile="include/dpp/json_interface.h" bodystart="68" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a guild widget, simple web widget of member list. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dpp::guild_widget</label>
        <link refid="classdpp_1_1guild__widget"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; guild_widget &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; guild_widget &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>bool</label>
      </node>
      <node id="1">
        <label>dpp::guild_widget</label>
        <link refid="classdpp_1_1guild__widget"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>channel_id</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>enabled</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="4">
        <label>dpp::snowflake</label>
        <link refid="classdpp_1_1snowflake"/>
        <childnode refid="5" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; guild_widget &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; guild_widget &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>uint64_t</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/guild.h" line="1670" column="1" bodyfile="include/dpp/guild.h" bodystart="1670" bodyend="1705"/>
    <listofallmembers>
      <member refid="structdpp_1_1json__interface_1ad615544432a8a6da87f3bd70d6f6b92c" prot="public" virt="non-virtual"><scope>dpp::guild_widget</scope><name>build_json</name></member>
      <member refid="classdpp_1_1guild__widget_1aef9e534b3727d4a2b972e3fd64c54e29" prot="public" virt="non-virtual"><scope>dpp::guild_widget</scope><name>channel_id</name></member>
      <member refid="classdpp_1_1guild__widget_1aedf956fc1f600b82020271b411eb86c8" prot="public" virt="non-virtual"><scope>dpp::guild_widget</scope><name>enabled</name></member>
      <member refid="structdpp_1_1json__interface_1a96011fc1c0d56e194f83c79d40c439c6" prot="public" virt="non-virtual"><scope>dpp::guild_widget</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1guild__widget_1a5c9248544857f22ce0b2db97a4007199" prot="protected" virt="non-virtual"><scope>dpp::guild_widget</scope><name>fill_from_json_impl</name></member>
      <member refid="classdpp_1_1guild__widget_1af862be6e098acb507a306bc37b6e4ad9" prot="public" virt="non-virtual"><scope>dpp::guild_widget</scope><name>guild_widget</name></member>
      <member refid="classdpp_1_1guild__widget_1a08fe93379b3b321697f9b34f6b0f9c32" prot="protected" virt="non-virtual"><scope>dpp::guild_widget</scope><name>json_interface&lt; guild_widget &gt;</name></member>
      <member refid="structdpp_1_1json__interface_1ae169e4231b77955fc1b43a3b7be9770c" prot="public" virt="non-virtual"><scope>dpp::guild_widget</scope><name>to_json</name></member>
      <member refid="classdpp_1_1guild__widget_1afc1c677aad41d0f8a155dd95d45a1adf" prot="protected" virt="non-virtual"><scope>dpp::guild_widget</scope><name>to_json_impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
