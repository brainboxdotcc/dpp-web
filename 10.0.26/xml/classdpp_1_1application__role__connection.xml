<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classdpp_1_1application__role__connection" kind="class" language="C++" prot="public">
    <compoundname>dpp::application_role_connection</compoundname>
    <basecompoundref refid="structdpp_1_1json__interface" prot="public" virt="non-virtual">dpp::json_interface&lt; application_role_connection &gt;</basecompoundref>
    <includes local="no">role.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdpp_1_1application__role__connection_1a0da4ab8bb3564b082aefe594008b10d2" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::application_role_connection::platform_name</definition>
        <argsstring></argsstring>
        <name>platform_name</name>
        <briefdescription>
<para>Optional: The vanity name of the platform a bot has connected (max 50 characters) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/role.h" line="678" column="13" bodyfile="include/dpp/role.h" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1application__role__connection_1a3d8c94731b2a1cc78cc92e8d7f2c80f6" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dpp::application_role_connection::platform_username</definition>
        <argsstring></argsstring>
        <name>platform_username</name>
        <briefdescription>
<para>Optional: The username on the platform a bot has connected (max 100 characters) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/role.h" line="679" column="13" bodyfile="include/dpp/role.h" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdpp_1_1application__role__connection_1a27e88916a483d1317e22133493503b01" prot="public" static="no" mutable="no">
        <type>std::variant&lt; std::monostate, <ref refid="classdpp_1_1application__role__connection__metadata" kindref="compound">application_role_connection_metadata</ref> &gt;</type>
        <definition>std::variant&lt;std::monostate, application_role_connection_metadata&gt; dpp::application_role_connection::metadata</definition>
        <argsstring></argsstring>
        <name>metadata</name>
        <briefdescription>
<para>Optional: Object mapping application role connection metadata keys to their stringified value (max 100 characters) for the user on the platform a bot has connected. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/role.h" line="680" column="14" bodyfile="include/dpp/role.h" bodystart="680" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdpp_1_1application__role__connection_1ad81f13b2023441af698313b3b469f847" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dpp::application_role_connection::application_role_connection</definition>
        <argsstring>()</argsstring>
        <name>application_role_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/role.h" line="685" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1application__role__connection_1a7453a35d845a0e799a499faa7c98f319" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual dpp::application_role_connection::~application_role_connection</definition>
        <argsstring>()=default</argsstring>
        <name>~application_role_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/role.h" line="687" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1application__role__connection_1aa0bafd9e57e54a0e6e4e11f85a3ca999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdpp_1_1application__role__connection" kindref="compound">application_role_connection</ref> &amp;</type>
        <definition>application_role_connection &amp; dpp::application_role_connection::fill_from_json</definition>
        <argsstring>(nlohmann::json *j)</argsstring>
        <name>fill_from_json</name>
        <param>
          <type>nlohmann::json *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill this record from json. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The json to fill this record from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/role.h" line="693" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classdpp_1_1application__role__connection_1aae90e82cb965212072dfee9f25492c49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string dpp::application_role_connection::build_json</definition>
        <argsstring>(bool with_id=false) const</argsstring>
        <name>build_json</name>
        <reimplements refid="structdpp_1_1json__interface_1a287c22f692ee3d25b6f9b320ff35baa1">build_json</reimplements>
        <param>
          <type>bool</type>
          <declname>with_id</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convert to JSON string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>with_id</parametername>
</parameternamelist>
<parameterdescription>
<para>include ID in output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string JSON output </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dpp/role.h" line="701" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The application role connection that an application has attached to a user. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dpp::application_role_connection</label>
        <link refid="classdpp_1_1application__role__connection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; application_role_connection &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; application_role_connection &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dpp::application_role_connection</label>
        <link refid="classdpp_1_1application__role__connection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>platform_name</edgelabel>
          <edgelabel>platform_username</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>metadata</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>dpp::json_interface&lt; T &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
      </node>
      <node id="2">
        <label>dpp::json_interface&lt; application_role_connection &gt;</label>
        <link refid="structdpp_1_1json__interface"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; application_role_connection &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>variant&lt;</label>
      </node>
    </collaborationgraph>
    <location file="include/dpp/role.h" line="676" column="1" bodyfile="include/dpp/role.h" bodystart="676" bodyend="702"/>
    <listofallmembers>
      <member refid="classdpp_1_1application__role__connection_1ad81f13b2023441af698313b3b469f847" prot="public" virt="non-virtual"><scope>dpp::application_role_connection</scope><name>application_role_connection</name></member>
      <member refid="classdpp_1_1application__role__connection_1aae90e82cb965212072dfee9f25492c49" prot="public" virt="virtual"><scope>dpp::application_role_connection</scope><name>build_json</name></member>
      <member refid="classdpp_1_1application__role__connection_1aa0bafd9e57e54a0e6e4e11f85a3ca999" prot="public" virt="non-virtual"><scope>dpp::application_role_connection</scope><name>fill_from_json</name></member>
      <member refid="classdpp_1_1application__role__connection_1a27e88916a483d1317e22133493503b01" prot="public" virt="non-virtual"><scope>dpp::application_role_connection</scope><name>metadata</name></member>
      <member refid="classdpp_1_1application__role__connection_1a0da4ab8bb3564b082aefe594008b10d2" prot="public" virt="non-virtual"><scope>dpp::application_role_connection</scope><name>platform_name</name></member>
      <member refid="classdpp_1_1application__role__connection_1a3d8c94731b2a1cc78cc92e8d7f2c80f6" prot="public" virt="non-virtual"><scope>dpp::application_role_connection</scope><name>platform_username</name></member>
      <member refid="classdpp_1_1application__role__connection_1a7453a35d845a0e799a499faa7c98f319" prot="public" virt="virtual"><scope>dpp::application_role_connection</scope><name>~application_role_connection</name></member>
      <member refid="structdpp_1_1json__interface_1a8fea07be649b8bb166c28c5a7daccf53" prot="protected" virt="non-virtual"><scope>dpp::application_role_connection</scope><name>~json_interface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
